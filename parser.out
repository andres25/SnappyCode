Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LISTA

Grammar

Rule 0     S' -> program
Rule 1     program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA
Rule 2     vars -> vars tipo_var
Rule 3     tipo_var -> single
Rule 4     tipo_var -> array
Rule 5     single -> CREAR tipo ID PUNTOCOMA
Rule 6     array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
Rule 7     tipo -> ENTERO
Rule 8     tipo -> FLOTANTE
Rule 9     tipo -> TEXTO
Rule 10    tipo -> BOOLEANO
Rule 11    vars -> empty
Rule 12    empty -> <empty>
Rule 13    cuerpo -> cuerpo_func principal
Rule 14    cuerpo_func -> cuerpo_func funcion
Rule 15    cuerpo_func -> empty
Rule 16    funcion -> iniciofunc param vars finfunc
Rule 17    iniciofunc -> INICIOFUNCION tipo ID
Rule 18    param -> PARAMETROS tipo ID param_mult
Rule 19    param_mult -> COMA tipo ID param_mult
Rule 20    param_mult -> empty
Rule 21    param -> empty
Rule 22    finfunc -> C REGRESA expresion FINFUNCION
Rule 23    C -> C estatuto
Rule 24    C -> empty
Rule 25    estatuto -> asignacion
Rule 26    estatuto -> condicion
Rule 27    estatuto -> ciclo
Rule 28    estatuto -> io
Rule 29    estatuto -> accion
Rule 30    estatuto -> llamada_sin_ret
Rule 31    asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA
Rule 32    asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER
Rule 33    asignacion_arreglo -> empty
Rule 34    expresion -> exp MAYORQUE push_opt exp
Rule 35    expresion -> exp MENORQUE push_opt exp
Rule 36    expresion -> exp DIFERENTEQUE push_opt exp
Rule 37    expresion -> exp IGUALQUE push_opt exp
Rule 38    expresion -> exp MAYORIGUAL push_opt exp
Rule 39    expresion -> exp MENORIGUAL push_opt exp
Rule 40    exp -> PARENTIZQ expresion PARENTDER
Rule 41    exp -> exp MAS push_opt exp
Rule 42    exp -> exp MENOS push_opt exp
Rule 43    exp -> exp MULT push_opt exp
Rule 44    exp -> exp DIV push_opt exp
Rule 45    push_opt -> empty
Rule 46    exp -> MENOS exp
Rule 47    exp -> CTEENTERO
Rule 48    exp -> CTEFLOTANTE
Rule 49    exp -> TRUE
Rule 50    exp -> FALSE
Rule 51    exp -> CTETEXTO
Rule 52    exp -> ID varfuncarr
Rule 53    varfuncarr -> push_var_opd
Rule 54    varfuncarr -> llamada
Rule 55    varfuncarr -> arraycall
Rule 56    push_var_opd -> empty
Rule 57    llamada -> PARENTIZQ llamada_param PARENTDER
Rule 58    llamada_param -> expresion llamada_param_mult
Rule 59    expresion -> exp
Rule 60    llamada_param_mult -> llamada_param_mult COMA expresion
Rule 61    llamada_param_mult -> empty
Rule 62    llamada_param -> empty
Rule 63    arraycall -> CORCHETEIZQ exp CORCHETEDER
Rule 64    condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
Rule 65    actSi1 -> empty
Rule 66    bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE
Rule 67    bloque_estatuto_mult -> bloque_estatuto_mult estatuto
Rule 68    bloque_estatuto_mult -> empty
Rule 69    actSi2 -> empty
Rule 70    condicion_else -> SINO bloque
Rule 71    condicion_else -> empty
Rule 72    actSi3 -> empty
Rule 73    ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
Rule 74    actCic1 -> empty
Rule 75    actCic2 -> empty
Rule 76    actCic3 -> empty
Rule 77    io -> DECIRALUSUARIO exp PUNTOCOMA
Rule 78    io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
Rule 79    accion -> tipo_accion PUNTOCOMA
Rule 80    tipo_accion -> objeto_con_exp
Rule 81    tipo_accion -> objeto_sin_exp
Rule 82    objeto_con_exp -> GIRARDERECHA exp
Rule 83    objeto_con_exp -> GIRARIZQUIERDA exp
Rule 84    objeto_con_exp -> MOVER exp
Rule 85    objeto_con_exp -> RETROCEDE exp
Rule 86    objeto_sin_exp -> BORRAR
Rule 87    objeto_sin_exp -> PINTAR
Rule 88    objeto_sin_exp -> DESPINTAR
Rule 89    llamada_sin_ret -> ID llamada PUNTOCOMA
Rule 90    principal -> iniciomain vars C FINPRINCIPAL
Rule 91    iniciomain -> INICIOPRINCIPAL

Terminals, with rules where they appear

BOOLEANO             : 10
BORRAR               : 86
COMA                 : 19 60
CORCHETEDER          : 6 32 63
CORCHETEIZQ          : 6 32 63
CREAR                : 5 6
CTEENTERO            : 6 47
CTEFLOTANTE          : 48
CTETEXTO             : 51
DECIRALUSUARIO       : 77
DESPINTAR            : 88
DIFERENTEQUE         : 36
DIV                  : 44
ENTERO               : 7
ENTONCES             : 64
FALSE                : 50
FINBLOQUE            : 66
FINFUNCION           : 22
FINMIENTRAS          : 73
FINPRINCIPAL         : 90
FINPROGRAMA          : 1
FINSI                : 64
FLOTANTE             : 8
GIRARDERECHA         : 82
GIRARIZQUIERDA       : 83
HACER                : 73
ID                   : 5 6 17 18 19 31 52 78 89
IGUAL                : 31
IGUALQUE             : 37
INICIOBLOQUE         : 66
INICIOFUNCION        : 17
INICIOPRINCIPAL      : 91
INICIOPROGRAMA       : 1
LISTA                : 
MAS                  : 41
MAYORIGUAL           : 38
MAYORQUE             : 34
MENORIGUAL           : 39
MENORQUE             : 35
MENOS                : 42 46
MIENTRAS             : 73
MOVER                : 84
MULT                 : 43
PARAMETROS           : 18
PARENTDER            : 40 57 78
PARENTIZQ            : 40 57 78
PEDIRALUSUARIO       : 78
PINTAR               : 87
PUNTOCOMA            : 5 6 31 77 78 79 89
REGRESA              : 22
RETROCEDE            : 85
SI                   : 64
SINO                 : 70
TEXTO                : 9
TRUE                 : 49
error                : 

Nonterminals, with rules where they appear

C                    : 22 23 90
accion               : 29
actCic1              : 73
actCic2              : 73
actCic3              : 73
actSi1               : 64
actSi2               : 64
actSi3               : 64
array                : 4
arraycall            : 55
asignacion           : 25
asignacion_arreglo   : 31 78
bloque               : 64 70 73
bloque_estatuto_mult : 66 67
ciclo                : 27
condicion            : 26
condicion_else       : 64
cuerpo               : 1
cuerpo_func          : 13 14
empty                : 11 15 20 21 24 33 45 56 61 62 65 68 69 71 72 74 75 76
estatuto             : 23 67
exp                  : 32 34 34 35 35 36 36 37 37 38 38 39 39 41 41 42 42 43 43 44 44 46 59 63 77 82 83 84 85
expresion            : 22 31 40 58 60 64 73
finfunc              : 16
funcion              : 14
iniciofunc           : 16
iniciomain           : 90
io                   : 28
llamada              : 54 89
llamada_param        : 57
llamada_param_mult   : 58 60
llamada_sin_ret      : 30
objeto_con_exp       : 80
objeto_sin_exp       : 81
param                : 16
param_mult           : 18 19
principal            : 13
program              : 0
push_opt             : 34 35 36 37 38 39 41 42 43 44
push_var_opd         : 53
single               : 3
tipo                 : 5 6 17 18 19
tipo_accion          : 79
tipo_var             : 2
varfuncarr           : 52
vars                 : 1 2 16 90

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INICIOPROGRAMA vars cuerpo FINPROGRAMA

    INICIOPROGRAMA  shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> INICIOPROGRAMA . vars cuerpo FINPROGRAMA
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    vars                           shift and go to state 4
    empty                          shift and go to state 3

state 2

    (0) S' -> program .



state 3

    (11) vars -> empty .

    CREAR           reduce using rule 11 (vars -> empty .)
    FINPRINCIPAL    reduce using rule 11 (vars -> empty .)
    ID              reduce using rule 11 (vars -> empty .)
    SI              reduce using rule 11 (vars -> empty .)
    MIENTRAS        reduce using rule 11 (vars -> empty .)
    DECIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    PEDIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    GIRARDERECHA    reduce using rule 11 (vars -> empty .)
    GIRARIZQUIERDA  reduce using rule 11 (vars -> empty .)
    MOVER           reduce using rule 11 (vars -> empty .)
    RETROCEDE       reduce using rule 11 (vars -> empty .)
    BORRAR          reduce using rule 11 (vars -> empty .)
    PINTAR          reduce using rule 11 (vars -> empty .)
    DESPINTAR       reduce using rule 11 (vars -> empty .)
    REGRESA         reduce using rule 11 (vars -> empty .)
    INICIOPRINCIPAL reduce using rule 11 (vars -> empty .)
    INICIOFUNCION   reduce using rule 11 (vars -> empty .)


state 4

    (1) program -> INICIOPROGRAMA vars . cuerpo FINPROGRAMA
    (2) vars -> vars . tipo_var
    (13) cuerpo -> . cuerpo_func principal
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (14) cuerpo_func -> . cuerpo_func funcion
    (15) cuerpo_func -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 9
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    tipo_var                       shift and go to state 8
    single                         shift and go to state 5
    empty                          shift and go to state 7
    array                          shift and go to state 6
    cuerpo                         shift and go to state 10
    cuerpo_func                    shift and go to state 11

state 5

    (3) tipo_var -> single .

    CREAR           reduce using rule 3 (tipo_var -> single .)
    REGRESA         reduce using rule 3 (tipo_var -> single .)
    ID              reduce using rule 3 (tipo_var -> single .)
    SI              reduce using rule 3 (tipo_var -> single .)
    MIENTRAS        reduce using rule 3 (tipo_var -> single .)
    DECIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    PEDIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    GIRARDERECHA    reduce using rule 3 (tipo_var -> single .)
    GIRARIZQUIERDA  reduce using rule 3 (tipo_var -> single .)
    MOVER           reduce using rule 3 (tipo_var -> single .)
    RETROCEDE       reduce using rule 3 (tipo_var -> single .)
    BORRAR          reduce using rule 3 (tipo_var -> single .)
    PINTAR          reduce using rule 3 (tipo_var -> single .)
    DESPINTAR       reduce using rule 3 (tipo_var -> single .)
    INICIOPRINCIPAL reduce using rule 3 (tipo_var -> single .)
    INICIOFUNCION   reduce using rule 3 (tipo_var -> single .)
    FINPRINCIPAL    reduce using rule 3 (tipo_var -> single .)


state 6

    (4) tipo_var -> array .

    CREAR           reduce using rule 4 (tipo_var -> array .)
    REGRESA         reduce using rule 4 (tipo_var -> array .)
    ID              reduce using rule 4 (tipo_var -> array .)
    SI              reduce using rule 4 (tipo_var -> array .)
    MIENTRAS        reduce using rule 4 (tipo_var -> array .)
    DECIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    PEDIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    GIRARDERECHA    reduce using rule 4 (tipo_var -> array .)
    GIRARIZQUIERDA  reduce using rule 4 (tipo_var -> array .)
    MOVER           reduce using rule 4 (tipo_var -> array .)
    RETROCEDE       reduce using rule 4 (tipo_var -> array .)
    BORRAR          reduce using rule 4 (tipo_var -> array .)
    PINTAR          reduce using rule 4 (tipo_var -> array .)
    DESPINTAR       reduce using rule 4 (tipo_var -> array .)
    INICIOPRINCIPAL reduce using rule 4 (tipo_var -> array .)
    INICIOFUNCION   reduce using rule 4 (tipo_var -> array .)
    FINPRINCIPAL    reduce using rule 4 (tipo_var -> array .)


state 7

    (15) cuerpo_func -> empty .

    INICIOPRINCIPAL reduce using rule 15 (cuerpo_func -> empty .)
    INICIOFUNCION   reduce using rule 15 (cuerpo_func -> empty .)


state 8

    (2) vars -> vars tipo_var .

    CREAR           reduce using rule 2 (vars -> vars tipo_var .)
    FINPRINCIPAL    reduce using rule 2 (vars -> vars tipo_var .)
    ID              reduce using rule 2 (vars -> vars tipo_var .)
    SI              reduce using rule 2 (vars -> vars tipo_var .)
    MIENTRAS        reduce using rule 2 (vars -> vars tipo_var .)
    DECIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    PEDIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    GIRARDERECHA    reduce using rule 2 (vars -> vars tipo_var .)
    GIRARIZQUIERDA  reduce using rule 2 (vars -> vars tipo_var .)
    MOVER           reduce using rule 2 (vars -> vars tipo_var .)
    RETROCEDE       reduce using rule 2 (vars -> vars tipo_var .)
    BORRAR          reduce using rule 2 (vars -> vars tipo_var .)
    PINTAR          reduce using rule 2 (vars -> vars tipo_var .)
    DESPINTAR       reduce using rule 2 (vars -> vars tipo_var .)
    REGRESA         reduce using rule 2 (vars -> vars tipo_var .)
    INICIOPRINCIPAL reduce using rule 2 (vars -> vars tipo_var .)
    INICIOFUNCION   reduce using rule 2 (vars -> vars tipo_var .)


state 9

    (5) single -> CREAR . tipo ID PUNTOCOMA
    (6) array -> CREAR . tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 14
    FLOTANTE        shift and go to state 13
    TEXTO           shift and go to state 16
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 12

state 10

    (1) program -> INICIOPROGRAMA vars cuerpo . FINPROGRAMA

    FINPROGRAMA     shift and go to state 17


state 11

    (13) cuerpo -> cuerpo_func . principal
    (14) cuerpo_func -> cuerpo_func . funcion
    (90) principal -> . iniciomain vars C FINPRINCIPAL
    (16) funcion -> . iniciofunc param vars finfunc
    (91) iniciomain -> . INICIOPRINCIPAL
    (17) iniciofunc -> . INICIOFUNCION tipo ID

    INICIOPRINCIPAL shift and go to state 21
    INICIOFUNCION   shift and go to state 20

    principal                      shift and go to state 19
    iniciofunc                     shift and go to state 18
    funcion                        shift and go to state 22
    iniciomain                     shift and go to state 23

state 12

    (5) single -> CREAR tipo . ID PUNTOCOMA
    (6) array -> CREAR tipo . ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    ID              shift and go to state 24


state 13

    (8) tipo -> FLOTANTE .

    ID              reduce using rule 8 (tipo -> FLOTANTE .)


state 14

    (7) tipo -> ENTERO .

    ID              reduce using rule 7 (tipo -> ENTERO .)


state 15

    (10) tipo -> BOOLEANO .

    ID              reduce using rule 10 (tipo -> BOOLEANO .)


state 16

    (9) tipo -> TEXTO .

    ID              reduce using rule 9 (tipo -> TEXTO .)


state 17

    (1) program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .

    $end            reduce using rule 1 (program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .)


state 18

    (16) funcion -> iniciofunc . param vars finfunc
    (18) param -> . PARAMETROS tipo ID param_mult
    (21) param -> . empty
    (12) empty -> .

    PARAMETROS      shift and go to state 25
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 26
    param                          shift and go to state 27

state 19

    (13) cuerpo -> cuerpo_func principal .

    FINPROGRAMA     reduce using rule 13 (cuerpo -> cuerpo_func principal .)


state 20

    (17) iniciofunc -> INICIOFUNCION . tipo ID
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 14
    FLOTANTE        shift and go to state 13
    TEXTO           shift and go to state 16
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 28

state 21

    (91) iniciomain -> INICIOPRINCIPAL .

    CREAR           reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    FINPRINCIPAL    reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    ID              reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    SI              reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    MIENTRAS        reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    DECIRALUSUARIO  reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    PEDIRALUSUARIO  reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    GIRARDERECHA    reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    GIRARIZQUIERDA  reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    MOVER           reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    RETROCEDE       reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    BORRAR          reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    PINTAR          reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)
    DESPINTAR       reduce using rule 91 (iniciomain -> INICIOPRINCIPAL .)


state 22

    (14) cuerpo_func -> cuerpo_func funcion .

    INICIOPRINCIPAL reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)
    INICIOFUNCION   reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)


state 23

    (90) principal -> iniciomain . vars C FINPRINCIPAL
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    vars                           shift and go to state 29
    empty                          shift and go to state 3

state 24

    (5) single -> CREAR tipo ID . PUNTOCOMA
    (6) array -> CREAR tipo ID . CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 30
    CORCHETEIZQ     shift and go to state 31


state 25

    (18) param -> PARAMETROS . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 14
    FLOTANTE        shift and go to state 13
    TEXTO           shift and go to state 16
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 32

state 26

    (21) param -> empty .

    CREAR           reduce using rule 21 (param -> empty .)
    REGRESA         reduce using rule 21 (param -> empty .)
    ID              reduce using rule 21 (param -> empty .)
    SI              reduce using rule 21 (param -> empty .)
    MIENTRAS        reduce using rule 21 (param -> empty .)
    DECIRALUSUARIO  reduce using rule 21 (param -> empty .)
    PEDIRALUSUARIO  reduce using rule 21 (param -> empty .)
    GIRARDERECHA    reduce using rule 21 (param -> empty .)
    GIRARIZQUIERDA  reduce using rule 21 (param -> empty .)
    MOVER           reduce using rule 21 (param -> empty .)
    RETROCEDE       reduce using rule 21 (param -> empty .)
    BORRAR          reduce using rule 21 (param -> empty .)
    PINTAR          reduce using rule 21 (param -> empty .)
    DESPINTAR       reduce using rule 21 (param -> empty .)


state 27

    (16) funcion -> iniciofunc param . vars finfunc
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 3
    vars                           shift and go to state 33

state 28

    (17) iniciofunc -> INICIOFUNCION tipo . ID

    ID              shift and go to state 34


state 29

    (90) principal -> iniciomain vars . C FINPRINCIPAL
    (2) vars -> vars . tipo_var
    (23) C -> . C estatuto
    (24) C -> . empty
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (12) empty -> .
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    CREAR           shift and go to state 9

    C                              shift and go to state 36
    tipo_var                       shift and go to state 8
    single                         shift and go to state 5
    empty                          shift and go to state 35
    array                          shift and go to state 6

state 30

    (5) single -> CREAR tipo ID PUNTOCOMA .

    CREAR           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    ID              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    SI              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MIENTRAS        reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MOVER           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    RETROCEDE       reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    BORRAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PINTAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DESPINTAR       reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    REGRESA         reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)


state 31

    (6) array -> CREAR tipo ID CORCHETEIZQ . CTEENTERO CORCHETEDER PUNTOCOMA

    CTEENTERO       shift and go to state 37


state 32

    (18) param -> PARAMETROS tipo . ID param_mult

    ID              shift and go to state 38


state 33

    (16) funcion -> iniciofunc param vars . finfunc
    (2) vars -> vars . tipo_var
    (22) finfunc -> . C REGRESA expresion FINFUNCION
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (23) C -> . C estatuto
    (24) C -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 9
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    single                         shift and go to state 5
    finfunc                        shift and go to state 39
    array                          shift and go to state 6
    C                              shift and go to state 40
    empty                          shift and go to state 35
    tipo_var                       shift and go to state 8

state 34

    (17) iniciofunc -> INICIOFUNCION tipo ID .

    PARAMETROS      reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    CREAR           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    REGRESA         reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    ID              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    SI              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MIENTRAS        reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DECIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PEDIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARDERECHA    reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARIZQUIERDA  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MOVER           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    RETROCEDE       reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    BORRAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PINTAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DESPINTAR       reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)


state 35

    (24) C -> empty .

    FINPRINCIPAL    reduce using rule 24 (C -> empty .)
    ID              reduce using rule 24 (C -> empty .)
    SI              reduce using rule 24 (C -> empty .)
    MIENTRAS        reduce using rule 24 (C -> empty .)
    DECIRALUSUARIO  reduce using rule 24 (C -> empty .)
    PEDIRALUSUARIO  reduce using rule 24 (C -> empty .)
    GIRARDERECHA    reduce using rule 24 (C -> empty .)
    GIRARIZQUIERDA  reduce using rule 24 (C -> empty .)
    MOVER           reduce using rule 24 (C -> empty .)
    RETROCEDE       reduce using rule 24 (C -> empty .)
    BORRAR          reduce using rule 24 (C -> empty .)
    PINTAR          reduce using rule 24 (C -> empty .)
    DESPINTAR       reduce using rule 24 (C -> empty .)
    REGRESA         reduce using rule 24 (C -> empty .)


state 36

    (90) principal -> iniciomain vars C . FINPRINCIPAL
    (23) C -> C . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (64) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (73) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (77) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (78) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (79) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (80) tipo_accion -> . objeto_con_exp
    (81) tipo_accion -> . objeto_sin_exp
    (82) objeto_con_exp -> . GIRARDERECHA exp
    (83) objeto_con_exp -> . GIRARIZQUIERDA exp
    (84) objeto_con_exp -> . MOVER exp
    (85) objeto_con_exp -> . RETROCEDE exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    FINPRINCIPAL    shift and go to state 54
    ID              shift and go to state 53
    SI              shift and go to state 52
    MIENTRAS        shift and go to state 47
    DECIRALUSUARIO  shift and go to state 56
    PEDIRALUSUARIO  shift and go to state 50
    GIRARDERECHA    shift and go to state 48
    GIRARIZQUIERDA  shift and go to state 43
    MOVER           shift and go to state 61
    RETROCEDE       shift and go to state 51
    BORRAR          shift and go to state 49
    PINTAR          shift and go to state 45
    DESPINTAR       shift and go to state 60

    objeto_con_exp                 shift and go to state 41
    tipo_accion                    shift and go to state 42
    asignacion                     shift and go to state 44
    io                             shift and go to state 46
    accion                         shift and go to state 55
    llamada_sin_ret                shift and go to state 57
    ciclo                          shift and go to state 58
    estatuto                       shift and go to state 63
    objeto_sin_exp                 shift and go to state 59
    condicion                      shift and go to state 62

state 37

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 64


state 38

    (18) param -> PARAMETROS tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 66
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 65
    param_mult                     shift and go to state 67

state 39

    (16) funcion -> iniciofunc param vars finfunc .

    INICIOPRINCIPAL reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)
    INICIOFUNCION   reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)


state 40

    (22) finfunc -> C . REGRESA expresion FINFUNCION
    (23) C -> C . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (64) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (73) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (77) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (78) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (79) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (80) tipo_accion -> . objeto_con_exp
    (81) tipo_accion -> . objeto_sin_exp
    (82) objeto_con_exp -> . GIRARDERECHA exp
    (83) objeto_con_exp -> . GIRARIZQUIERDA exp
    (84) objeto_con_exp -> . MOVER exp
    (85) objeto_con_exp -> . RETROCEDE exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    REGRESA         shift and go to state 68
    ID              shift and go to state 53
    SI              shift and go to state 52
    MIENTRAS        shift and go to state 47
    DECIRALUSUARIO  shift and go to state 56
    PEDIRALUSUARIO  shift and go to state 50
    GIRARDERECHA    shift and go to state 48
    GIRARIZQUIERDA  shift and go to state 43
    MOVER           shift and go to state 61
    RETROCEDE       shift and go to state 51
    BORRAR          shift and go to state 49
    PINTAR          shift and go to state 45
    DESPINTAR       shift and go to state 60

    objeto_con_exp                 shift and go to state 41
    tipo_accion                    shift and go to state 42
    asignacion                     shift and go to state 44
    io                             shift and go to state 46
    accion                         shift and go to state 55
    llamada_sin_ret                shift and go to state 57
    ciclo                          shift and go to state 58
    objeto_sin_exp                 shift and go to state 59
    condicion                      shift and go to state 62
    estatuto                       shift and go to state 63

state 41

    (80) tipo_accion -> objeto_con_exp .

    PUNTOCOMA       reduce using rule 80 (tipo_accion -> objeto_con_exp .)


state 42

    (79) accion -> tipo_accion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 43

    (83) objeto_con_exp -> GIRARIZQUIERDA . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 73

state 44

    (25) estatuto -> asignacion .

    FINBLOQUE       reduce using rule 25 (estatuto -> asignacion .)
    ID              reduce using rule 25 (estatuto -> asignacion .)
    SI              reduce using rule 25 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 25 (estatuto -> asignacion .)
    DECIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    PEDIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    GIRARDERECHA    reduce using rule 25 (estatuto -> asignacion .)
    GIRARIZQUIERDA  reduce using rule 25 (estatuto -> asignacion .)
    MOVER           reduce using rule 25 (estatuto -> asignacion .)
    RETROCEDE       reduce using rule 25 (estatuto -> asignacion .)
    BORRAR          reduce using rule 25 (estatuto -> asignacion .)
    PINTAR          reduce using rule 25 (estatuto -> asignacion .)
    DESPINTAR       reduce using rule 25 (estatuto -> asignacion .)
    REGRESA         reduce using rule 25 (estatuto -> asignacion .)
    FINPRINCIPAL    reduce using rule 25 (estatuto -> asignacion .)


state 45

    (87) objeto_sin_exp -> PINTAR .

    PUNTOCOMA       reduce using rule 87 (objeto_sin_exp -> PINTAR .)


state 46

    (28) estatuto -> io .

    FINBLOQUE       reduce using rule 28 (estatuto -> io .)
    ID              reduce using rule 28 (estatuto -> io .)
    SI              reduce using rule 28 (estatuto -> io .)
    MIENTRAS        reduce using rule 28 (estatuto -> io .)
    DECIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    PEDIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    GIRARDERECHA    reduce using rule 28 (estatuto -> io .)
    GIRARIZQUIERDA  reduce using rule 28 (estatuto -> io .)
    MOVER           reduce using rule 28 (estatuto -> io .)
    RETROCEDE       reduce using rule 28 (estatuto -> io .)
    BORRAR          reduce using rule 28 (estatuto -> io .)
    PINTAR          reduce using rule 28 (estatuto -> io .)
    DESPINTAR       reduce using rule 28 (estatuto -> io .)
    REGRESA         reduce using rule 28 (estatuto -> io .)
    FINPRINCIPAL    reduce using rule 28 (estatuto -> io .)


state 47

    (73) ciclo -> MIENTRAS . actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (74) actCic1 -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 79
    actCic1                        shift and go to state 80

state 48

    (82) objeto_con_exp -> GIRARDERECHA . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 81

state 49

    (86) objeto_sin_exp -> BORRAR .

    PUNTOCOMA       reduce using rule 86 (objeto_sin_exp -> BORRAR .)


state 50

    (78) io -> PEDIRALUSUARIO . PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA

    PARENTIZQ       shift and go to state 82


state 51

    (85) objeto_con_exp -> RETROCEDE . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 83

state 52

    (64) condicion -> SI . expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 84
    exp                            shift and go to state 85

state 53

    (31) asignacion -> ID . asignacion_arreglo IGUAL expresion PUNTOCOMA
    (89) llamada_sin_ret -> ID . llamada PUNTOCOMA
    (32) asignacion_arreglo -> . CORCHETEIZQ exp CORCHETEDER
    (33) asignacion_arreglo -> . empty
    (57) llamada -> . PARENTIZQ llamada_param PARENTDER
    (12) empty -> .

    CORCHETEIZQ     shift and go to state 87
    PARENTIZQ       shift and go to state 86
    IGUAL           reduce using rule 12 (empty -> .)

    llamada                        shift and go to state 88
    empty                          shift and go to state 90
    asignacion_arreglo             shift and go to state 89

state 54

    (90) principal -> iniciomain vars C FINPRINCIPAL .

    FINPROGRAMA     reduce using rule 90 (principal -> iniciomain vars C FINPRINCIPAL .)


state 55

    (29) estatuto -> accion .

    FINBLOQUE       reduce using rule 29 (estatuto -> accion .)
    ID              reduce using rule 29 (estatuto -> accion .)
    SI              reduce using rule 29 (estatuto -> accion .)
    MIENTRAS        reduce using rule 29 (estatuto -> accion .)
    DECIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    PEDIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    GIRARDERECHA    reduce using rule 29 (estatuto -> accion .)
    GIRARIZQUIERDA  reduce using rule 29 (estatuto -> accion .)
    MOVER           reduce using rule 29 (estatuto -> accion .)
    RETROCEDE       reduce using rule 29 (estatuto -> accion .)
    BORRAR          reduce using rule 29 (estatuto -> accion .)
    PINTAR          reduce using rule 29 (estatuto -> accion .)
    DESPINTAR       reduce using rule 29 (estatuto -> accion .)
    REGRESA         reduce using rule 29 (estatuto -> accion .)
    FINPRINCIPAL    reduce using rule 29 (estatuto -> accion .)


state 56

    (77) io -> DECIRALUSUARIO . exp PUNTOCOMA
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 91

state 57

    (30) estatuto -> llamada_sin_ret .

    FINBLOQUE       reduce using rule 30 (estatuto -> llamada_sin_ret .)
    ID              reduce using rule 30 (estatuto -> llamada_sin_ret .)
    SI              reduce using rule 30 (estatuto -> llamada_sin_ret .)
    MIENTRAS        reduce using rule 30 (estatuto -> llamada_sin_ret .)
    DECIRALUSUARIO  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    PEDIRALUSUARIO  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    GIRARDERECHA    reduce using rule 30 (estatuto -> llamada_sin_ret .)
    GIRARIZQUIERDA  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    MOVER           reduce using rule 30 (estatuto -> llamada_sin_ret .)
    RETROCEDE       reduce using rule 30 (estatuto -> llamada_sin_ret .)
    BORRAR          reduce using rule 30 (estatuto -> llamada_sin_ret .)
    PINTAR          reduce using rule 30 (estatuto -> llamada_sin_ret .)
    DESPINTAR       reduce using rule 30 (estatuto -> llamada_sin_ret .)
    REGRESA         reduce using rule 30 (estatuto -> llamada_sin_ret .)
    FINPRINCIPAL    reduce using rule 30 (estatuto -> llamada_sin_ret .)


state 58

    (27) estatuto -> ciclo .

    FINBLOQUE       reduce using rule 27 (estatuto -> ciclo .)
    ID              reduce using rule 27 (estatuto -> ciclo .)
    SI              reduce using rule 27 (estatuto -> ciclo .)
    MIENTRAS        reduce using rule 27 (estatuto -> ciclo .)
    DECIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    PEDIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    GIRARDERECHA    reduce using rule 27 (estatuto -> ciclo .)
    GIRARIZQUIERDA  reduce using rule 27 (estatuto -> ciclo .)
    MOVER           reduce using rule 27 (estatuto -> ciclo .)
    RETROCEDE       reduce using rule 27 (estatuto -> ciclo .)
    BORRAR          reduce using rule 27 (estatuto -> ciclo .)
    PINTAR          reduce using rule 27 (estatuto -> ciclo .)
    DESPINTAR       reduce using rule 27 (estatuto -> ciclo .)
    REGRESA         reduce using rule 27 (estatuto -> ciclo .)
    FINPRINCIPAL    reduce using rule 27 (estatuto -> ciclo .)


state 59

    (81) tipo_accion -> objeto_sin_exp .

    PUNTOCOMA       reduce using rule 81 (tipo_accion -> objeto_sin_exp .)


state 60

    (88) objeto_sin_exp -> DESPINTAR .

    PUNTOCOMA       reduce using rule 88 (objeto_sin_exp -> DESPINTAR .)


state 61

    (84) objeto_con_exp -> MOVER . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 92

state 62

    (26) estatuto -> condicion .

    FINBLOQUE       reduce using rule 26 (estatuto -> condicion .)
    ID              reduce using rule 26 (estatuto -> condicion .)
    SI              reduce using rule 26 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 26 (estatuto -> condicion .)
    DECIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    PEDIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    GIRARDERECHA    reduce using rule 26 (estatuto -> condicion .)
    GIRARIZQUIERDA  reduce using rule 26 (estatuto -> condicion .)
    MOVER           reduce using rule 26 (estatuto -> condicion .)
    RETROCEDE       reduce using rule 26 (estatuto -> condicion .)
    BORRAR          reduce using rule 26 (estatuto -> condicion .)
    PINTAR          reduce using rule 26 (estatuto -> condicion .)
    DESPINTAR       reduce using rule 26 (estatuto -> condicion .)
    REGRESA         reduce using rule 26 (estatuto -> condicion .)
    FINPRINCIPAL    reduce using rule 26 (estatuto -> condicion .)


state 63

    (23) C -> C estatuto .

    FINPRINCIPAL    reduce using rule 23 (C -> C estatuto .)
    ID              reduce using rule 23 (C -> C estatuto .)
    SI              reduce using rule 23 (C -> C estatuto .)
    MIENTRAS        reduce using rule 23 (C -> C estatuto .)
    DECIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    PEDIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    GIRARDERECHA    reduce using rule 23 (C -> C estatuto .)
    GIRARIZQUIERDA  reduce using rule 23 (C -> C estatuto .)
    MOVER           reduce using rule 23 (C -> C estatuto .)
    RETROCEDE       reduce using rule 23 (C -> C estatuto .)
    BORRAR          reduce using rule 23 (C -> C estatuto .)
    PINTAR          reduce using rule 23 (C -> C estatuto .)
    DESPINTAR       reduce using rule 23 (C -> C estatuto .)
    REGRESA         reduce using rule 23 (C -> C estatuto .)


state 64

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 93


state 65

    (20) param_mult -> empty .

    CREAR           reduce using rule 20 (param_mult -> empty .)
    REGRESA         reduce using rule 20 (param_mult -> empty .)
    ID              reduce using rule 20 (param_mult -> empty .)
    SI              reduce using rule 20 (param_mult -> empty .)
    MIENTRAS        reduce using rule 20 (param_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    GIRARDERECHA    reduce using rule 20 (param_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 20 (param_mult -> empty .)
    MOVER           reduce using rule 20 (param_mult -> empty .)
    RETROCEDE       reduce using rule 20 (param_mult -> empty .)
    BORRAR          reduce using rule 20 (param_mult -> empty .)
    PINTAR          reduce using rule 20 (param_mult -> empty .)
    DESPINTAR       reduce using rule 20 (param_mult -> empty .)


state 66

    (19) param_mult -> COMA . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 14
    FLOTANTE        shift and go to state 13
    TEXTO           shift and go to state 16
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 94

state 67

    (18) param -> PARAMETROS tipo ID param_mult .

    CREAR           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    REGRESA         reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    ID              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    SI              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MIENTRAS        reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MOVER           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    RETROCEDE       reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    BORRAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PINTAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DESPINTAR       reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)


state 68

    (22) finfunc -> C REGRESA . expresion FINFUNCION
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 95
    exp                            shift and go to state 85

state 69

    (79) accion -> tipo_accion PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    ID              reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    SI              reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    MIENTRAS        reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    MOVER           reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    RETROCEDE       reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    BORRAR          reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    PINTAR          reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    DESPINTAR       reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    REGRESA         reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 79 (accion -> tipo_accion PUNTOCOMA .)


state 70

    (48) exp -> CTEFLOTANTE .

    MAS             reduce using rule 48 (exp -> CTEFLOTANTE .)
    MENOS           reduce using rule 48 (exp -> CTEFLOTANTE .)
    MULT            reduce using rule 48 (exp -> CTEFLOTANTE .)
    DIV             reduce using rule 48 (exp -> CTEFLOTANTE .)
    PUNTOCOMA       reduce using rule 48 (exp -> CTEFLOTANTE .)
    CORCHETEDER     reduce using rule 48 (exp -> CTEFLOTANTE .)
    MAYORQUE        reduce using rule 48 (exp -> CTEFLOTANTE .)
    MENORQUE        reduce using rule 48 (exp -> CTEFLOTANTE .)
    DIFERENTEQUE    reduce using rule 48 (exp -> CTEFLOTANTE .)
    IGUALQUE        reduce using rule 48 (exp -> CTEFLOTANTE .)
    MAYORIGUAL      reduce using rule 48 (exp -> CTEFLOTANTE .)
    MENORIGUAL      reduce using rule 48 (exp -> CTEFLOTANTE .)
    COMA            reduce using rule 48 (exp -> CTEFLOTANTE .)
    PARENTDER       reduce using rule 48 (exp -> CTEFLOTANTE .)
    HACER           reduce using rule 48 (exp -> CTEFLOTANTE .)
    ENTONCES        reduce using rule 48 (exp -> CTEFLOTANTE .)
    FINFUNCION      reduce using rule 48 (exp -> CTEFLOTANTE .)


state 71

    (47) exp -> CTEENTERO .

    MAS             reduce using rule 47 (exp -> CTEENTERO .)
    MENOS           reduce using rule 47 (exp -> CTEENTERO .)
    MULT            reduce using rule 47 (exp -> CTEENTERO .)
    DIV             reduce using rule 47 (exp -> CTEENTERO .)
    PUNTOCOMA       reduce using rule 47 (exp -> CTEENTERO .)
    CORCHETEDER     reduce using rule 47 (exp -> CTEENTERO .)
    MAYORQUE        reduce using rule 47 (exp -> CTEENTERO .)
    MENORQUE        reduce using rule 47 (exp -> CTEENTERO .)
    DIFERENTEQUE    reduce using rule 47 (exp -> CTEENTERO .)
    IGUALQUE        reduce using rule 47 (exp -> CTEENTERO .)
    MAYORIGUAL      reduce using rule 47 (exp -> CTEENTERO .)
    MENORIGUAL      reduce using rule 47 (exp -> CTEENTERO .)
    COMA            reduce using rule 47 (exp -> CTEENTERO .)
    PARENTDER       reduce using rule 47 (exp -> CTEENTERO .)
    HACER           reduce using rule 47 (exp -> CTEENTERO .)
    ENTONCES        reduce using rule 47 (exp -> CTEENTERO .)
    FINFUNCION      reduce using rule 47 (exp -> CTEENTERO .)


state 72

    (50) exp -> FALSE .

    MAS             reduce using rule 50 (exp -> FALSE .)
    MENOS           reduce using rule 50 (exp -> FALSE .)
    MULT            reduce using rule 50 (exp -> FALSE .)
    DIV             reduce using rule 50 (exp -> FALSE .)
    PUNTOCOMA       reduce using rule 50 (exp -> FALSE .)
    CORCHETEDER     reduce using rule 50 (exp -> FALSE .)
    MAYORQUE        reduce using rule 50 (exp -> FALSE .)
    MENORQUE        reduce using rule 50 (exp -> FALSE .)
    DIFERENTEQUE    reduce using rule 50 (exp -> FALSE .)
    IGUALQUE        reduce using rule 50 (exp -> FALSE .)
    MAYORIGUAL      reduce using rule 50 (exp -> FALSE .)
    MENORIGUAL      reduce using rule 50 (exp -> FALSE .)
    COMA            reduce using rule 50 (exp -> FALSE .)
    PARENTDER       reduce using rule 50 (exp -> FALSE .)
    HACER           reduce using rule 50 (exp -> FALSE .)
    ENTONCES        reduce using rule 50 (exp -> FALSE .)
    FINFUNCION      reduce using rule 50 (exp -> FALSE .)


state 73

    (83) objeto_con_exp -> GIRARIZQUIERDA exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 83 (objeto_con_exp -> GIRARIZQUIERDA exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 74

    (51) exp -> CTETEXTO .

    MAS             reduce using rule 51 (exp -> CTETEXTO .)
    MENOS           reduce using rule 51 (exp -> CTETEXTO .)
    MULT            reduce using rule 51 (exp -> CTETEXTO .)
    DIV             reduce using rule 51 (exp -> CTETEXTO .)
    PUNTOCOMA       reduce using rule 51 (exp -> CTETEXTO .)
    CORCHETEDER     reduce using rule 51 (exp -> CTETEXTO .)
    MAYORQUE        reduce using rule 51 (exp -> CTETEXTO .)
    MENORQUE        reduce using rule 51 (exp -> CTETEXTO .)
    DIFERENTEQUE    reduce using rule 51 (exp -> CTETEXTO .)
    IGUALQUE        reduce using rule 51 (exp -> CTETEXTO .)
    MAYORIGUAL      reduce using rule 51 (exp -> CTETEXTO .)
    MENORIGUAL      reduce using rule 51 (exp -> CTETEXTO .)
    COMA            reduce using rule 51 (exp -> CTETEXTO .)
    PARENTDER       reduce using rule 51 (exp -> CTETEXTO .)
    HACER           reduce using rule 51 (exp -> CTETEXTO .)
    ENTONCES        reduce using rule 51 (exp -> CTETEXTO .)
    FINFUNCION      reduce using rule 51 (exp -> CTETEXTO .)


state 75

    (46) exp -> MENOS . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 100

state 76

    (40) exp -> PARENTIZQ . expresion PARENTDER
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 101
    exp                            shift and go to state 85

state 77

    (52) exp -> ID . varfuncarr
    (53) varfuncarr -> . push_var_opd
    (54) varfuncarr -> . llamada
    (55) varfuncarr -> . arraycall
    (56) push_var_opd -> . empty
    (57) llamada -> . PARENTIZQ llamada_param PARENTDER
    (63) arraycall -> . CORCHETEIZQ exp CORCHETEDER
    (12) empty -> .

    PARENTIZQ       shift and go to state 86
    CORCHETEIZQ     shift and go to state 106
    MAS             reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    MULT            reduce using rule 12 (empty -> .)
    DIV             reduce using rule 12 (empty -> .)
    PUNTOCOMA       reduce using rule 12 (empty -> .)
    MAYORQUE        reduce using rule 12 (empty -> .)
    MENORQUE        reduce using rule 12 (empty -> .)
    DIFERENTEQUE    reduce using rule 12 (empty -> .)
    IGUALQUE        reduce using rule 12 (empty -> .)
    MAYORIGUAL      reduce using rule 12 (empty -> .)
    MENORIGUAL      reduce using rule 12 (empty -> .)
    ENTONCES        reduce using rule 12 (empty -> .)
    FINFUNCION      reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)
    HACER           reduce using rule 12 (empty -> .)
    COMA            reduce using rule 12 (empty -> .)
    CORCHETEDER     reduce using rule 12 (empty -> .)

    llamada                        shift and go to state 104
    arraycall                      shift and go to state 105
    varfuncarr                     shift and go to state 102
    push_var_opd                   shift and go to state 103
    empty                          shift and go to state 107

state 78

    (49) exp -> TRUE .

    MAS             reduce using rule 49 (exp -> TRUE .)
    MENOS           reduce using rule 49 (exp -> TRUE .)
    MULT            reduce using rule 49 (exp -> TRUE .)
    DIV             reduce using rule 49 (exp -> TRUE .)
    PUNTOCOMA       reduce using rule 49 (exp -> TRUE .)
    CORCHETEDER     reduce using rule 49 (exp -> TRUE .)
    MAYORQUE        reduce using rule 49 (exp -> TRUE .)
    MENORQUE        reduce using rule 49 (exp -> TRUE .)
    DIFERENTEQUE    reduce using rule 49 (exp -> TRUE .)
    IGUALQUE        reduce using rule 49 (exp -> TRUE .)
    MAYORIGUAL      reduce using rule 49 (exp -> TRUE .)
    MENORIGUAL      reduce using rule 49 (exp -> TRUE .)
    COMA            reduce using rule 49 (exp -> TRUE .)
    PARENTDER       reduce using rule 49 (exp -> TRUE .)
    HACER           reduce using rule 49 (exp -> TRUE .)
    ENTONCES        reduce using rule 49 (exp -> TRUE .)
    FINFUNCION      reduce using rule 49 (exp -> TRUE .)


state 79

    (74) actCic1 -> empty .

    PARENTIZQ       reduce using rule 74 (actCic1 -> empty .)
    MENOS           reduce using rule 74 (actCic1 -> empty .)
    CTEENTERO       reduce using rule 74 (actCic1 -> empty .)
    CTEFLOTANTE     reduce using rule 74 (actCic1 -> empty .)
    TRUE            reduce using rule 74 (actCic1 -> empty .)
    FALSE           reduce using rule 74 (actCic1 -> empty .)
    CTETEXTO        reduce using rule 74 (actCic1 -> empty .)
    ID              reduce using rule 74 (actCic1 -> empty .)


state 80

    (73) ciclo -> MIENTRAS actCic1 . expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 108
    exp                            shift and go to state 85

state 81

    (82) objeto_con_exp -> GIRARDERECHA exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 82 (objeto_con_exp -> GIRARDERECHA exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 82

    (78) io -> PEDIRALUSUARIO PARENTIZQ . ID asignacion_arreglo PARENTDER PUNTOCOMA

    ID              shift and go to state 109


state 83

    (85) objeto_con_exp -> RETROCEDE exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 85 (objeto_con_exp -> RETROCEDE exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 84

    (64) condicion -> SI expresion . actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (65) actSi1 -> . empty
    (12) empty -> .

    ENTONCES        reduce using rule 12 (empty -> .)

    empty                          shift and go to state 110
    actSi1                         shift and go to state 111

state 85

    (34) expresion -> exp . MAYORQUE push_opt exp
    (35) expresion -> exp . MENORQUE push_opt exp
    (36) expresion -> exp . DIFERENTEQUE push_opt exp
    (37) expresion -> exp . IGUALQUE push_opt exp
    (38) expresion -> exp . MAYORIGUAL push_opt exp
    (39) expresion -> exp . MENORIGUAL push_opt exp
    (59) expresion -> exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAYORQUE        shift and go to state 115
    MENORQUE        shift and go to state 114
    DIFERENTEQUE    shift and go to state 112
    IGUALQUE        shift and go to state 113
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 116
    FINFUNCION      reduce using rule 59 (expresion -> exp .)
    COMA            reduce using rule 59 (expresion -> exp .)
    PARENTDER       reduce using rule 59 (expresion -> exp .)
    PUNTOCOMA       reduce using rule 59 (expresion -> exp .)
    HACER           reduce using rule 59 (expresion -> exp .)
    ENTONCES        reduce using rule 59 (expresion -> exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 86

    (57) llamada -> PARENTIZQ . llamada_param PARENTDER
    (58) llamada_param -> . expresion llamada_param_mult
    (62) llamada_param -> . empty
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (12) empty -> .
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTDER       reduce using rule 12 (empty -> .)
    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 119
    llamada_param                  shift and go to state 120
    empty                          shift and go to state 118
    exp                            shift and go to state 85

state 87

    (32) asignacion_arreglo -> CORCHETEIZQ . exp CORCHETEDER
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 121

state 88

    (89) llamada_sin_ret -> ID llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 122


state 89

    (31) asignacion -> ID asignacion_arreglo . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 123


state 90

    (33) asignacion_arreglo -> empty .

    IGUAL           reduce using rule 33 (asignacion_arreglo -> empty .)
    PARENTDER       reduce using rule 33 (asignacion_arreglo -> empty .)


state 91

    (77) io -> DECIRALUSUARIO exp . PUNTOCOMA
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    PUNTOCOMA       shift and go to state 124
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 92

    (84) objeto_con_exp -> MOVER exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 84 (objeto_con_exp -> MOVER exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 93

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .

    CREAR           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    ID              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    SI              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MIENTRAS        reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MOVER           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    RETROCEDE       reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    BORRAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PINTAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DESPINTAR       reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    REGRESA         reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)


state 94

    (19) param_mult -> COMA tipo . ID param_mult

    ID              shift and go to state 125


state 95

    (22) finfunc -> C REGRESA expresion . FINFUNCION

    FINFUNCION      shift and go to state 126


state 96

    (42) exp -> exp MENOS . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 127
    empty                          shift and go to state 128

state 97

    (41) exp -> exp MAS . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 129
    empty                          shift and go to state 128

state 98

    (43) exp -> exp MULT . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 130
    empty                          shift and go to state 128

state 99

    (44) exp -> exp DIV . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 131
    empty                          shift and go to state 128

state 100

    (46) exp -> MENOS exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 46 (exp -> MENOS exp .)
    MENOS           reduce using rule 46 (exp -> MENOS exp .)
    MULT            reduce using rule 46 (exp -> MENOS exp .)
    DIV             reduce using rule 46 (exp -> MENOS exp .)
    PUNTOCOMA       reduce using rule 46 (exp -> MENOS exp .)
    CORCHETEDER     reduce using rule 46 (exp -> MENOS exp .)
    MAYORQUE        reduce using rule 46 (exp -> MENOS exp .)
    MENORQUE        reduce using rule 46 (exp -> MENOS exp .)
    DIFERENTEQUE    reduce using rule 46 (exp -> MENOS exp .)
    IGUALQUE        reduce using rule 46 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 46 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 46 (exp -> MENOS exp .)
    COMA            reduce using rule 46 (exp -> MENOS exp .)
    PARENTDER       reduce using rule 46 (exp -> MENOS exp .)
    HACER           reduce using rule 46 (exp -> MENOS exp .)
    ENTONCES        reduce using rule 46 (exp -> MENOS exp .)
    FINFUNCION      reduce using rule 46 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 96 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]


state 101

    (40) exp -> PARENTIZQ expresion . PARENTDER

    PARENTDER       shift and go to state 132


state 102

    (52) exp -> ID varfuncarr .

    MAS             reduce using rule 52 (exp -> ID varfuncarr .)
    MENOS           reduce using rule 52 (exp -> ID varfuncarr .)
    MULT            reduce using rule 52 (exp -> ID varfuncarr .)
    DIV             reduce using rule 52 (exp -> ID varfuncarr .)
    PUNTOCOMA       reduce using rule 52 (exp -> ID varfuncarr .)
    CORCHETEDER     reduce using rule 52 (exp -> ID varfuncarr .)
    MAYORQUE        reduce using rule 52 (exp -> ID varfuncarr .)
    MENORQUE        reduce using rule 52 (exp -> ID varfuncarr .)
    DIFERENTEQUE    reduce using rule 52 (exp -> ID varfuncarr .)
    IGUALQUE        reduce using rule 52 (exp -> ID varfuncarr .)
    MAYORIGUAL      reduce using rule 52 (exp -> ID varfuncarr .)
    MENORIGUAL      reduce using rule 52 (exp -> ID varfuncarr .)
    COMA            reduce using rule 52 (exp -> ID varfuncarr .)
    PARENTDER       reduce using rule 52 (exp -> ID varfuncarr .)
    HACER           reduce using rule 52 (exp -> ID varfuncarr .)
    ENTONCES        reduce using rule 52 (exp -> ID varfuncarr .)
    FINFUNCION      reduce using rule 52 (exp -> ID varfuncarr .)


state 103

    (53) varfuncarr -> push_var_opd .

    MAS             reduce using rule 53 (varfuncarr -> push_var_opd .)
    MENOS           reduce using rule 53 (varfuncarr -> push_var_opd .)
    MULT            reduce using rule 53 (varfuncarr -> push_var_opd .)
    DIV             reduce using rule 53 (varfuncarr -> push_var_opd .)
    PUNTOCOMA       reduce using rule 53 (varfuncarr -> push_var_opd .)
    MAYORQUE        reduce using rule 53 (varfuncarr -> push_var_opd .)
    MENORQUE        reduce using rule 53 (varfuncarr -> push_var_opd .)
    DIFERENTEQUE    reduce using rule 53 (varfuncarr -> push_var_opd .)
    IGUALQUE        reduce using rule 53 (varfuncarr -> push_var_opd .)
    MAYORIGUAL      reduce using rule 53 (varfuncarr -> push_var_opd .)
    MENORIGUAL      reduce using rule 53 (varfuncarr -> push_var_opd .)
    ENTONCES        reduce using rule 53 (varfuncarr -> push_var_opd .)
    FINFUNCION      reduce using rule 53 (varfuncarr -> push_var_opd .)
    PARENTDER       reduce using rule 53 (varfuncarr -> push_var_opd .)
    HACER           reduce using rule 53 (varfuncarr -> push_var_opd .)
    COMA            reduce using rule 53 (varfuncarr -> push_var_opd .)
    CORCHETEDER     reduce using rule 53 (varfuncarr -> push_var_opd .)


state 104

    (54) varfuncarr -> llamada .

    MAS             reduce using rule 54 (varfuncarr -> llamada .)
    MENOS           reduce using rule 54 (varfuncarr -> llamada .)
    MULT            reduce using rule 54 (varfuncarr -> llamada .)
    DIV             reduce using rule 54 (varfuncarr -> llamada .)
    PUNTOCOMA       reduce using rule 54 (varfuncarr -> llamada .)
    MAYORQUE        reduce using rule 54 (varfuncarr -> llamada .)
    MENORQUE        reduce using rule 54 (varfuncarr -> llamada .)
    DIFERENTEQUE    reduce using rule 54 (varfuncarr -> llamada .)
    IGUALQUE        reduce using rule 54 (varfuncarr -> llamada .)
    MAYORIGUAL      reduce using rule 54 (varfuncarr -> llamada .)
    MENORIGUAL      reduce using rule 54 (varfuncarr -> llamada .)
    ENTONCES        reduce using rule 54 (varfuncarr -> llamada .)
    FINFUNCION      reduce using rule 54 (varfuncarr -> llamada .)
    PARENTDER       reduce using rule 54 (varfuncarr -> llamada .)
    HACER           reduce using rule 54 (varfuncarr -> llamada .)
    COMA            reduce using rule 54 (varfuncarr -> llamada .)
    CORCHETEDER     reduce using rule 54 (varfuncarr -> llamada .)


state 105

    (55) varfuncarr -> arraycall .

    MAS             reduce using rule 55 (varfuncarr -> arraycall .)
    MENOS           reduce using rule 55 (varfuncarr -> arraycall .)
    MULT            reduce using rule 55 (varfuncarr -> arraycall .)
    DIV             reduce using rule 55 (varfuncarr -> arraycall .)
    PUNTOCOMA       reduce using rule 55 (varfuncarr -> arraycall .)
    MAYORQUE        reduce using rule 55 (varfuncarr -> arraycall .)
    MENORQUE        reduce using rule 55 (varfuncarr -> arraycall .)
    DIFERENTEQUE    reduce using rule 55 (varfuncarr -> arraycall .)
    IGUALQUE        reduce using rule 55 (varfuncarr -> arraycall .)
    MAYORIGUAL      reduce using rule 55 (varfuncarr -> arraycall .)
    MENORIGUAL      reduce using rule 55 (varfuncarr -> arraycall .)
    ENTONCES        reduce using rule 55 (varfuncarr -> arraycall .)
    FINFUNCION      reduce using rule 55 (varfuncarr -> arraycall .)
    PARENTDER       reduce using rule 55 (varfuncarr -> arraycall .)
    HACER           reduce using rule 55 (varfuncarr -> arraycall .)
    COMA            reduce using rule 55 (varfuncarr -> arraycall .)
    CORCHETEDER     reduce using rule 55 (varfuncarr -> arraycall .)


state 106

    (63) arraycall -> CORCHETEIZQ . exp CORCHETEDER
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 133

state 107

    (56) push_var_opd -> empty .

    MAS             reduce using rule 56 (push_var_opd -> empty .)
    MENOS           reduce using rule 56 (push_var_opd -> empty .)
    MULT            reduce using rule 56 (push_var_opd -> empty .)
    DIV             reduce using rule 56 (push_var_opd -> empty .)
    PUNTOCOMA       reduce using rule 56 (push_var_opd -> empty .)
    MAYORQUE        reduce using rule 56 (push_var_opd -> empty .)
    MENORQUE        reduce using rule 56 (push_var_opd -> empty .)
    DIFERENTEQUE    reduce using rule 56 (push_var_opd -> empty .)
    IGUALQUE        reduce using rule 56 (push_var_opd -> empty .)
    MAYORIGUAL      reduce using rule 56 (push_var_opd -> empty .)
    MENORIGUAL      reduce using rule 56 (push_var_opd -> empty .)
    ENTONCES        reduce using rule 56 (push_var_opd -> empty .)
    FINFUNCION      reduce using rule 56 (push_var_opd -> empty .)
    PARENTDER       reduce using rule 56 (push_var_opd -> empty .)
    HACER           reduce using rule 56 (push_var_opd -> empty .)
    COMA            reduce using rule 56 (push_var_opd -> empty .)
    CORCHETEDER     reduce using rule 56 (push_var_opd -> empty .)


state 108

    (73) ciclo -> MIENTRAS actCic1 expresion . actCic2 HACER bloque FINMIENTRAS actCic3
    (75) actCic2 -> . empty
    (12) empty -> .

    HACER           reduce using rule 12 (empty -> .)

    actCic2                        shift and go to state 134
    empty                          shift and go to state 135

state 109

    (78) io -> PEDIRALUSUARIO PARENTIZQ ID . asignacion_arreglo PARENTDER PUNTOCOMA
    (32) asignacion_arreglo -> . CORCHETEIZQ exp CORCHETEDER
    (33) asignacion_arreglo -> . empty
    (12) empty -> .

    CORCHETEIZQ     shift and go to state 87
    PARENTDER       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 90
    asignacion_arreglo             shift and go to state 136

state 110

    (65) actSi1 -> empty .

    ENTONCES        reduce using rule 65 (actSi1 -> empty .)


state 111

    (64) condicion -> SI expresion actSi1 . ENTONCES bloque actSi2 condicion_else actSi3 FINSI

    ENTONCES        shift and go to state 137


state 112

    (36) expresion -> exp DIFERENTEQUE . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 138
    empty                          shift and go to state 128

state 113

    (37) expresion -> exp IGUALQUE . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 139
    empty                          shift and go to state 128

state 114

    (35) expresion -> exp MENORQUE . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 140
    empty                          shift and go to state 128

state 115

    (34) expresion -> exp MAYORQUE . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 141
    empty                          shift and go to state 128

state 116

    (39) expresion -> exp MENORIGUAL . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 142
    empty                          shift and go to state 128

state 117

    (38) expresion -> exp MAYORIGUAL . push_opt exp
    (45) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 143
    empty                          shift and go to state 128

state 118

    (62) llamada_param -> empty .

    PARENTDER       reduce using rule 62 (llamada_param -> empty .)


state 119

    (58) llamada_param -> expresion . llamada_param_mult
    (60) llamada_param_mult -> . llamada_param_mult COMA expresion
    (61) llamada_param_mult -> . empty
    (12) empty -> .

    COMA            reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)

    llamada_param_mult             shift and go to state 144
    empty                          shift and go to state 145

state 120

    (57) llamada -> PARENTIZQ llamada_param . PARENTDER

    PARENTDER       shift and go to state 146


state 121

    (32) asignacion_arreglo -> CORCHETEIZQ exp . CORCHETEDER
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    CORCHETEDER     shift and go to state 147
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 122

    (89) llamada_sin_ret -> ID llamada PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    ID              reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    SI              reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    MOVER           reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    RETROCEDE       reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    BORRAR          reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    PINTAR          reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    DESPINTAR       reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    FINBLOQUE       reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    REGRESA         reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)


state 123

    (31) asignacion -> ID asignacion_arreglo IGUAL . expresion PUNTOCOMA
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 148
    exp                            shift and go to state 85

state 124

    (77) io -> DECIRALUSUARIO exp PUNTOCOMA .

    FINBLOQUE       reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    ID              reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    SI              reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    MIENTRAS        reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    MOVER           reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    RETROCEDE       reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    BORRAR          reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    PINTAR          reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    DESPINTAR       reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    REGRESA         reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 77 (io -> DECIRALUSUARIO exp PUNTOCOMA .)


state 125

    (19) param_mult -> COMA tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 66
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 65
    param_mult                     shift and go to state 149

state 126

    (22) finfunc -> C REGRESA expresion FINFUNCION .

    INICIOPRINCIPAL reduce using rule 22 (finfunc -> C REGRESA expresion FINFUNCION .)
    INICIOFUNCION   reduce using rule 22 (finfunc -> C REGRESA expresion FINFUNCION .)


state 127

    (42) exp -> exp MENOS push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 150

state 128

    (45) push_opt -> empty .

    PARENTIZQ       reduce using rule 45 (push_opt -> empty .)
    MENOS           reduce using rule 45 (push_opt -> empty .)
    CTEENTERO       reduce using rule 45 (push_opt -> empty .)
    CTEFLOTANTE     reduce using rule 45 (push_opt -> empty .)
    TRUE            reduce using rule 45 (push_opt -> empty .)
    FALSE           reduce using rule 45 (push_opt -> empty .)
    CTETEXTO        reduce using rule 45 (push_opt -> empty .)
    ID              reduce using rule 45 (push_opt -> empty .)


state 129

    (41) exp -> exp MAS push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 151

state 130

    (43) exp -> exp MULT push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 152

state 131

    (44) exp -> exp DIV push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 153

state 132

    (40) exp -> PARENTIZQ expresion PARENTDER .

    MAS             reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MENOS           reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MULT            reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    DIV             reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    PUNTOCOMA       reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    CORCHETEDER     reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORQUE        reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORQUE        reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    DIFERENTEQUE    reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    IGUALQUE        reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORIGUAL      reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORIGUAL      reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    COMA            reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    PARENTDER       reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    HACER           reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    ENTONCES        reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)
    FINFUNCION      reduce using rule 40 (exp -> PARENTIZQ expresion PARENTDER .)


state 133

    (63) arraycall -> CORCHETEIZQ exp . CORCHETEDER
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    CORCHETEDER     shift and go to state 154
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 134

    (73) ciclo -> MIENTRAS actCic1 expresion actCic2 . HACER bloque FINMIENTRAS actCic3

    HACER           shift and go to state 155


state 135

    (75) actCic2 -> empty .

    HACER           reduce using rule 75 (actCic2 -> empty .)


state 136

    (78) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo . PARENTDER PUNTOCOMA

    PARENTDER       shift and go to state 156


state 137

    (64) condicion -> SI expresion actSi1 ENTONCES . bloque actSi2 condicion_else actSi3 FINSI
    (66) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 158

    bloque                         shift and go to state 157

state 138

    (36) expresion -> exp DIFERENTEQUE push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 159

state 139

    (37) expresion -> exp IGUALQUE push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 160

state 140

    (35) expresion -> exp MENORQUE push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 161

state 141

    (34) expresion -> exp MAYORQUE push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 162

state 142

    (39) expresion -> exp MENORIGUAL push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 163

state 143

    (38) expresion -> exp MAYORIGUAL push_opt . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    exp                            shift and go to state 164

state 144

    (58) llamada_param -> expresion llamada_param_mult .
    (60) llamada_param_mult -> llamada_param_mult . COMA expresion

    PARENTDER       reduce using rule 58 (llamada_param -> expresion llamada_param_mult .)
    COMA            shift and go to state 165


state 145

    (61) llamada_param_mult -> empty .

    COMA            reduce using rule 61 (llamada_param_mult -> empty .)
    PARENTDER       reduce using rule 61 (llamada_param_mult -> empty .)


state 146

    (57) llamada -> PARENTIZQ llamada_param PARENTDER .

    MAS             reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENOS           reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MULT            reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIV             reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PUNTOCOMA       reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORQUE        reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORQUE        reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIFERENTEQUE    reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    IGUALQUE        reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORIGUAL      reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORIGUAL      reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    ENTONCES        reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    FINFUNCION      reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PARENTDER       reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    HACER           reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    COMA            reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    CORCHETEDER     reduce using rule 57 (llamada -> PARENTIZQ llamada_param PARENTDER .)


state 147

    (32) asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .

    IGUAL           reduce using rule 32 (asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .)
    PARENTDER       reduce using rule 32 (asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .)


state 148

    (31) asignacion -> ID asignacion_arreglo IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 149

    (19) param_mult -> COMA tipo ID param_mult .

    CREAR           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    REGRESA         reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    ID              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    SI              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MIENTRAS        reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MOVER           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    RETROCEDE       reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    BORRAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PINTAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DESPINTAR       reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)


state 150

    (42) exp -> exp MENOS push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MENOS           reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    PUNTOCOMA       reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    CORCHETEDER     reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MAYORQUE        reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MENORQUE        reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    DIFERENTEQUE    reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    IGUALQUE        reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MAYORIGUAL      reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MENORIGUAL      reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    COMA            reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    PARENTDER       reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    HACER           reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    ENTONCES        reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    FINFUNCION      reduce using rule 42 (exp -> exp MENOS push_opt exp .)
    MULT            shift and go to state 98
    DIV             shift and go to state 99

  ! MULT            [ reduce using rule 42 (exp -> exp MENOS push_opt exp .) ]
  ! DIV             [ reduce using rule 42 (exp -> exp MENOS push_opt exp .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 96 ]


state 151

    (41) exp -> exp MAS push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MENOS           reduce using rule 41 (exp -> exp MAS push_opt exp .)
    PUNTOCOMA       reduce using rule 41 (exp -> exp MAS push_opt exp .)
    CORCHETEDER     reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MAYORQUE        reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MENORQUE        reduce using rule 41 (exp -> exp MAS push_opt exp .)
    DIFERENTEQUE    reduce using rule 41 (exp -> exp MAS push_opt exp .)
    IGUALQUE        reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MAYORIGUAL      reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MENORIGUAL      reduce using rule 41 (exp -> exp MAS push_opt exp .)
    COMA            reduce using rule 41 (exp -> exp MAS push_opt exp .)
    PARENTDER       reduce using rule 41 (exp -> exp MAS push_opt exp .)
    HACER           reduce using rule 41 (exp -> exp MAS push_opt exp .)
    ENTONCES        reduce using rule 41 (exp -> exp MAS push_opt exp .)
    FINFUNCION      reduce using rule 41 (exp -> exp MAS push_opt exp .)
    MULT            shift and go to state 98
    DIV             shift and go to state 99

  ! MULT            [ reduce using rule 41 (exp -> exp MAS push_opt exp .) ]
  ! DIV             [ reduce using rule 41 (exp -> exp MAS push_opt exp .) ]
  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 96 ]


state 152

    (43) exp -> exp MULT push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MENOS           reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MULT            reduce using rule 43 (exp -> exp MULT push_opt exp .)
    DIV             reduce using rule 43 (exp -> exp MULT push_opt exp .)
    PUNTOCOMA       reduce using rule 43 (exp -> exp MULT push_opt exp .)
    CORCHETEDER     reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MAYORQUE        reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MENORQUE        reduce using rule 43 (exp -> exp MULT push_opt exp .)
    DIFERENTEQUE    reduce using rule 43 (exp -> exp MULT push_opt exp .)
    IGUALQUE        reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MAYORIGUAL      reduce using rule 43 (exp -> exp MULT push_opt exp .)
    MENORIGUAL      reduce using rule 43 (exp -> exp MULT push_opt exp .)
    COMA            reduce using rule 43 (exp -> exp MULT push_opt exp .)
    PARENTDER       reduce using rule 43 (exp -> exp MULT push_opt exp .)
    HACER           reduce using rule 43 (exp -> exp MULT push_opt exp .)
    ENTONCES        reduce using rule 43 (exp -> exp MULT push_opt exp .)
    FINFUNCION      reduce using rule 43 (exp -> exp MULT push_opt exp .)

  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 96 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]


state 153

    (44) exp -> exp DIV push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MENOS           reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MULT            reduce using rule 44 (exp -> exp DIV push_opt exp .)
    DIV             reduce using rule 44 (exp -> exp DIV push_opt exp .)
    PUNTOCOMA       reduce using rule 44 (exp -> exp DIV push_opt exp .)
    CORCHETEDER     reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MAYORQUE        reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MENORQUE        reduce using rule 44 (exp -> exp DIV push_opt exp .)
    DIFERENTEQUE    reduce using rule 44 (exp -> exp DIV push_opt exp .)
    IGUALQUE        reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MAYORIGUAL      reduce using rule 44 (exp -> exp DIV push_opt exp .)
    MENORIGUAL      reduce using rule 44 (exp -> exp DIV push_opt exp .)
    COMA            reduce using rule 44 (exp -> exp DIV push_opt exp .)
    PARENTDER       reduce using rule 44 (exp -> exp DIV push_opt exp .)
    HACER           reduce using rule 44 (exp -> exp DIV push_opt exp .)
    ENTONCES        reduce using rule 44 (exp -> exp DIV push_opt exp .)
    FINFUNCION      reduce using rule 44 (exp -> exp DIV push_opt exp .)

  ! MAS             [ shift and go to state 97 ]
  ! MENOS           [ shift and go to state 96 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 99 ]


state 154

    (63) arraycall -> CORCHETEIZQ exp CORCHETEDER .

    MAS             reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENOS           reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MULT            reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIV             reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PUNTOCOMA       reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAYORQUE        reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORQUE        reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIFERENTEQUE    reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    IGUALQUE        reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAYORIGUAL      reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORIGUAL      reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    ENTONCES        reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    FINFUNCION      reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PARENTDER       reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    HACER           reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    COMA            reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEDER     reduce using rule 63 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)


state 155

    (73) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER . bloque FINMIENTRAS actCic3
    (66) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 158

    bloque                         shift and go to state 167

state 156

    (78) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 168


state 157

    (64) condicion -> SI expresion actSi1 ENTONCES bloque . actSi2 condicion_else actSi3 FINSI
    (69) actSi2 -> . empty
    (12) empty -> .

    SINO            reduce using rule 12 (empty -> .)
    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 170
    actSi2                         shift and go to state 169

state 158

    (66) bloque -> INICIOBLOQUE . bloque_estatuto_mult FINBLOQUE
    (67) bloque_estatuto_mult -> . bloque_estatuto_mult estatuto
    (68) bloque_estatuto_mult -> . empty
    (12) empty -> .

    FINBLOQUE       reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 171
    bloque_estatuto_mult           shift and go to state 172

state 159

    (36) expresion -> exp DIFERENTEQUE push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    COMA            reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    PARENTDER       reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    HACER           reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    ENTONCES        reduce using rule 36 (expresion -> exp DIFERENTEQUE push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 160

    (37) expresion -> exp IGUALQUE push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    COMA            reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    PARENTDER       reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    HACER           reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    ENTONCES        reduce using rule 37 (expresion -> exp IGUALQUE push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 161

    (35) expresion -> exp MENORQUE push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    COMA            reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    PARENTDER       reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    HACER           reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    ENTONCES        reduce using rule 35 (expresion -> exp MENORQUE push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 162

    (34) expresion -> exp MAYORQUE push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    COMA            reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    PARENTDER       reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    HACER           reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    ENTONCES        reduce using rule 34 (expresion -> exp MAYORQUE push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 163

    (39) expresion -> exp MENORIGUAL push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    COMA            reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    PARENTDER       reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    HACER           reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 39 (expresion -> exp MENORIGUAL push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 164

    (38) expresion -> exp MAYORIGUAL push_opt exp .
    (41) exp -> exp . MAS push_opt exp
    (42) exp -> exp . MENOS push_opt exp
    (43) exp -> exp . MULT push_opt exp
    (44) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    COMA            reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    PARENTDER       reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    HACER           reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 38 (expresion -> exp MAYORIGUAL push_opt exp .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 96
    MULT            shift and go to state 98
    DIV             shift and go to state 99


state 165

    (60) llamada_param_mult -> llamada_param_mult COMA . expresion
    (34) expresion -> . exp MAYORQUE push_opt exp
    (35) expresion -> . exp MENORQUE push_opt exp
    (36) expresion -> . exp DIFERENTEQUE push_opt exp
    (37) expresion -> . exp IGUALQUE push_opt exp
    (38) expresion -> . exp MAYORIGUAL push_opt exp
    (39) expresion -> . exp MENORIGUAL push_opt exp
    (59) expresion -> . exp
    (40) exp -> . PARENTIZQ expresion PARENTDER
    (41) exp -> . exp MAS push_opt exp
    (42) exp -> . exp MENOS push_opt exp
    (43) exp -> . exp MULT push_opt exp
    (44) exp -> . exp DIV push_opt exp
    (46) exp -> . MENOS exp
    (47) exp -> . CTEENTERO
    (48) exp -> . CTEFLOTANTE
    (49) exp -> . TRUE
    (50) exp -> . FALSE
    (51) exp -> . CTETEXTO
    (52) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 76
    MENOS           shift and go to state 75
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 70
    TRUE            shift and go to state 78
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 74
    ID              shift and go to state 77

    expresion                      shift and go to state 173
    exp                            shift and go to state 85

state 166

    (31) asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .

    FINBLOQUE       reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    SI              reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    MIENTRAS        reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    MOVER           reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    RETROCEDE       reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    BORRAR          reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    PINTAR          reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    DESPINTAR       reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    REGRESA         reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 31 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)


state 167

    (73) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque . FINMIENTRAS actCic3

    FINMIENTRAS     shift and go to state 174


state 168

    (78) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .

    FINBLOQUE       reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    ID              reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    SI              reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    MIENTRAS        reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    MOVER           reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    RETROCEDE       reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    BORRAR          reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    PINTAR          reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    DESPINTAR       reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    REGRESA         reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 78 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)


state 169

    (64) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 . condicion_else actSi3 FINSI
    (70) condicion_else -> . SINO bloque
    (71) condicion_else -> . empty
    (12) empty -> .

    SINO            shift and go to state 175
    FINSI           reduce using rule 12 (empty -> .)

    condicion_else                 shift and go to state 177
    empty                          shift and go to state 176

state 170

    (69) actSi2 -> empty .

    SINO            reduce using rule 69 (actSi2 -> empty .)
    FINSI           reduce using rule 69 (actSi2 -> empty .)


state 171

    (68) bloque_estatuto_mult -> empty .

    FINBLOQUE       reduce using rule 68 (bloque_estatuto_mult -> empty .)
    ID              reduce using rule 68 (bloque_estatuto_mult -> empty .)
    SI              reduce using rule 68 (bloque_estatuto_mult -> empty .)
    MIENTRAS        reduce using rule 68 (bloque_estatuto_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 68 (bloque_estatuto_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 68 (bloque_estatuto_mult -> empty .)
    GIRARDERECHA    reduce using rule 68 (bloque_estatuto_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 68 (bloque_estatuto_mult -> empty .)
    MOVER           reduce using rule 68 (bloque_estatuto_mult -> empty .)
    RETROCEDE       reduce using rule 68 (bloque_estatuto_mult -> empty .)
    BORRAR          reduce using rule 68 (bloque_estatuto_mult -> empty .)
    PINTAR          reduce using rule 68 (bloque_estatuto_mult -> empty .)
    DESPINTAR       reduce using rule 68 (bloque_estatuto_mult -> empty .)


state 172

    (66) bloque -> INICIOBLOQUE bloque_estatuto_mult . FINBLOQUE
    (67) bloque_estatuto_mult -> bloque_estatuto_mult . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (64) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (73) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (77) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (78) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (79) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (80) tipo_accion -> . objeto_con_exp
    (81) tipo_accion -> . objeto_sin_exp
    (82) objeto_con_exp -> . GIRARDERECHA exp
    (83) objeto_con_exp -> . GIRARIZQUIERDA exp
    (84) objeto_con_exp -> . MOVER exp
    (85) objeto_con_exp -> . RETROCEDE exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    FINBLOQUE       shift and go to state 179
    ID              shift and go to state 53
    SI              shift and go to state 52
    MIENTRAS        shift and go to state 47
    DECIRALUSUARIO  shift and go to state 56
    PEDIRALUSUARIO  shift and go to state 50
    GIRARDERECHA    shift and go to state 48
    GIRARIZQUIERDA  shift and go to state 43
    MOVER           shift and go to state 61
    RETROCEDE       shift and go to state 51
    BORRAR          shift and go to state 49
    PINTAR          shift and go to state 45
    DESPINTAR       shift and go to state 60

    objeto_con_exp                 shift and go to state 41
    tipo_accion                    shift and go to state 42
    asignacion                     shift and go to state 44
    io                             shift and go to state 46
    accion                         shift and go to state 55
    llamada_sin_ret                shift and go to state 57
    ciclo                          shift and go to state 58
    objeto_sin_exp                 shift and go to state 59
    condicion                      shift and go to state 62
    estatuto                       shift and go to state 178

state 173

    (60) llamada_param_mult -> llamada_param_mult COMA expresion .

    COMA            reduce using rule 60 (llamada_param_mult -> llamada_param_mult COMA expresion .)
    PARENTDER       reduce using rule 60 (llamada_param_mult -> llamada_param_mult COMA expresion .)


state 174

    (73) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS . actCic3
    (76) actCic3 -> . empty
    (12) empty -> .

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    RETROCEDE       reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    FINBLOQUE       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 180
    actCic3                        shift and go to state 181

state 175

    (70) condicion_else -> SINO . bloque
    (66) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 158

    bloque                         shift and go to state 182

state 176

    (71) condicion_else -> empty .

    FINSI           reduce using rule 71 (condicion_else -> empty .)


state 177

    (64) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else . actSi3 FINSI
    (72) actSi3 -> . empty
    (12) empty -> .

    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 184
    actSi3                         shift and go to state 183

state 178

    (67) bloque_estatuto_mult -> bloque_estatuto_mult estatuto .

    FINBLOQUE       reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    ID              reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    SI              reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MIENTRAS        reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DECIRALUSUARIO  reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PEDIRALUSUARIO  reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARDERECHA    reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARIZQUIERDA  reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MOVER           reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    RETROCEDE       reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    BORRAR          reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PINTAR          reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DESPINTAR       reduce using rule 67 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)


state 179

    (66) bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .

    FINSI           reduce using rule 66 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    FINMIENTRAS     reduce using rule 66 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    SINO            reduce using rule 66 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)


state 180

    (76) actCic3 -> empty .

    FINPRINCIPAL    reduce using rule 76 (actCic3 -> empty .)
    ID              reduce using rule 76 (actCic3 -> empty .)
    SI              reduce using rule 76 (actCic3 -> empty .)
    MIENTRAS        reduce using rule 76 (actCic3 -> empty .)
    DECIRALUSUARIO  reduce using rule 76 (actCic3 -> empty .)
    PEDIRALUSUARIO  reduce using rule 76 (actCic3 -> empty .)
    GIRARDERECHA    reduce using rule 76 (actCic3 -> empty .)
    GIRARIZQUIERDA  reduce using rule 76 (actCic3 -> empty .)
    MOVER           reduce using rule 76 (actCic3 -> empty .)
    RETROCEDE       reduce using rule 76 (actCic3 -> empty .)
    BORRAR          reduce using rule 76 (actCic3 -> empty .)
    PINTAR          reduce using rule 76 (actCic3 -> empty .)
    DESPINTAR       reduce using rule 76 (actCic3 -> empty .)
    REGRESA         reduce using rule 76 (actCic3 -> empty .)
    FINBLOQUE       reduce using rule 76 (actCic3 -> empty .)


state 181

    (73) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .

    FINBLOQUE       reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    ID              reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    SI              reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MIENTRAS        reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DECIRALUSUARIO  reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PEDIRALUSUARIO  reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARDERECHA    reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARIZQUIERDA  reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MOVER           reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    RETROCEDE       reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    BORRAR          reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PINTAR          reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DESPINTAR       reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    FINPRINCIPAL    reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    REGRESA         reduce using rule 73 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)


state 182

    (70) condicion_else -> SINO bloque .

    FINSI           reduce using rule 70 (condicion_else -> SINO bloque .)


state 183

    (64) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 . FINSI

    FINSI           shift and go to state 185


state 184

    (72) actSi3 -> empty .

    FINSI           reduce using rule 72 (actSi3 -> empty .)


state 185

    (64) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .

    REGRESA         reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    ID              reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    SI              reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MIENTRAS        reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DECIRALUSUARIO  reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PEDIRALUSUARIO  reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARDERECHA    reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARIZQUIERDA  reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MOVER           reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    RETROCEDE       reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    BORRAR          reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PINTAR          reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DESPINTAR       reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    FINBLOQUE       reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    FINPRINCIPAL    reduce using rule 64 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)

