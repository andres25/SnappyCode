Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LISTA

Grammar

Rule 0     S' -> program
Rule 1     program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA
Rule 2     vars -> vars tipo_var
Rule 3     tipo_var -> single
Rule 4     tipo_var -> array
Rule 5     single -> CREAR tipo ID PUNTOCOMA
Rule 6     array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
Rule 7     tipo -> ENTERO
Rule 8     tipo -> FLOTANTE
Rule 9     tipo -> TEXTO
Rule 10    tipo -> BOOLEANO
Rule 11    vars -> empty
Rule 12    empty -> <empty>
Rule 13    cuerpo -> cuerpo_func principal
Rule 14    cuerpo_func -> cuerpo_func funcion
Rule 15    cuerpo_func -> empty
Rule 16    funcion -> iniciofunc param vars finfunc
Rule 17    iniciofunc -> INICIOFUNCION tipo ID
Rule 18    param -> PARAMETROS tipo ID param_mult
Rule 19    param_mult -> COMA tipo ID param_mult
Rule 20    param_mult -> empty
Rule 21    param -> empty
Rule 22    finfunc -> C REGRESA expresion FINFUNCION
Rule 23    C -> C estatuto
Rule 24    C -> empty
Rule 25    estatuto -> asignacion
Rule 26    estatuto -> condicion
Rule 27    estatuto -> ciclo
Rule 28    estatuto -> io
Rule 29    estatuto -> accion
Rule 30    asignacion -> ID IGUAL expresion PUNTOCOMA
Rule 31    expresion -> exp MAYORQUE push_opt exp
Rule 32    expresion -> exp MENORQUE push_opt exp
Rule 33    expresion -> exp DIFERENTEQUE push_opt exp
Rule 34    expresion -> exp IGUALQUE push_opt exp
Rule 35    expresion -> exp MAYORIGUAL push_opt exp
Rule 36    expresion -> exp MENORIGUAL push_opt exp
Rule 37    exp -> PARENTIZQ expresion PARENTDER
Rule 38    exp -> exp MAS push_opt exp
Rule 39    exp -> exp MENOS push_opt exp
Rule 40    exp -> exp MULT push_opt exp
Rule 41    exp -> exp DIV push_opt exp
Rule 42    push_opt -> empty
Rule 43    exp -> MENOS exp
Rule 44    exp -> CTEENTERO
Rule 45    exp -> CTEFLOTANTE
Rule 46    exp -> TRUE
Rule 47    exp -> FALSE
Rule 48    exp -> CTETEXTO
Rule 49    exp -> ID varfuncarr
Rule 50    varfuncarr -> push_var_opd
Rule 51    varfuncarr -> llamada
Rule 52    varfuncarr -> arraycall
Rule 53    push_var_opd -> empty
Rule 54    llamada -> PARENTIZQ llamada_param PARENTDER
Rule 55    llamada_param -> expresion llamada_param_mult
Rule 56    expresion -> exp
Rule 57    llamada_param_mult -> llamada_param_mult COMA expresion
Rule 58    llamada_param_mult -> empty
Rule 59    llamada_param -> empty
Rule 60    arraycall -> CORCHETEIZQ exp CORCHETEDER
Rule 61    condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
Rule 62    actSi1 -> empty
Rule 63    bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE
Rule 64    bloque_estatuto_mult -> bloque_estatuto_mult estatuto
Rule 65    bloque_estatuto_mult -> empty
Rule 66    actSi2 -> empty
Rule 67    condicion_else -> SINO bloque
Rule 68    condicion_else -> empty
Rule 69    actSi3 -> empty
Rule 70    ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
Rule 71    actCic1 -> empty
Rule 72    actCic2 -> empty
Rule 73    actCic3 -> empty
Rule 74    io -> PEDIRALUSUARIO ID
Rule 75    io -> DECIRALUSUARIO exp
Rule 76    accion -> tipo_accion PUNTOCOMA
Rule 77    tipo_accion -> objeto_con_exp
Rule 78    tipo_accion -> objeto_sin_exp
Rule 79    objeto_con_exp -> GIRARDERECHA exp
Rule 80    objeto_con_exp -> GIRARIZQUIERDA exp
Rule 81    objeto_con_exp -> MOVER exp
Rule 82    objeto_sin_exp -> BORRAR
Rule 83    objeto_sin_exp -> PINTAR
Rule 84    objeto_sin_exp -> DESPINTAR
Rule 85    principal -> iniciomain vars C FINPRINCIPAL
Rule 86    iniciomain -> INICIOPRINCIPAL

Terminals, with rules where they appear

BOOLEANO             : 10
BORRAR               : 82
COMA                 : 19 57
CORCHETEDER          : 6 60
CORCHETEIZQ          : 6 60
CREAR                : 5 6
CTEENTERO            : 6 44
CTEFLOTANTE          : 45
CTETEXTO             : 48
DECIRALUSUARIO       : 75
DESPINTAR            : 84
DIFERENTEQUE         : 33
DIV                  : 41
ENTERO               : 7
ENTONCES             : 61
FALSE                : 47
FINBLOQUE            : 63
FINFUNCION           : 22
FINMIENTRAS          : 70
FINPRINCIPAL         : 85
FINPROGRAMA          : 1
FINSI                : 61
FLOTANTE             : 8
GIRARDERECHA         : 79
GIRARIZQUIERDA       : 80
HACER                : 70
ID                   : 5 6 17 18 19 30 49 74
IGUAL                : 30
IGUALQUE             : 34
INICIOBLOQUE         : 63
INICIOFUNCION        : 17
INICIOPRINCIPAL      : 86
INICIOPROGRAMA       : 1
LISTA                : 
MAS                  : 38
MAYORIGUAL           : 35
MAYORQUE             : 31
MENORIGUAL           : 36
MENORQUE             : 32
MENOS                : 39 43
MIENTRAS             : 70
MOVER                : 81
MULT                 : 40
PARAMETROS           : 18
PARENTDER            : 37 54
PARENTIZQ            : 37 54
PEDIRALUSUARIO       : 74
PINTAR               : 83
PUNTOCOMA            : 5 6 30 76
REGRESA              : 22
SI                   : 61
SINO                 : 67
TEXTO                : 9
TRUE                 : 46
error                : 

Nonterminals, with rules where they appear

C                    : 22 23 85
accion               : 29
actCic1              : 70
actCic2              : 70
actCic3              : 70
actSi1               : 61
actSi2               : 61
actSi3               : 61
array                : 4
arraycall            : 52
asignacion           : 25
bloque               : 61 67 70
bloque_estatuto_mult : 63 64
ciclo                : 27
condicion            : 26
condicion_else       : 61
cuerpo               : 1
cuerpo_func          : 13 14
empty                : 11 15 20 21 24 42 53 58 59 62 65 66 68 69 71 72 73
estatuto             : 23 64
exp                  : 31 31 32 32 33 33 34 34 35 35 36 36 38 38 39 39 40 40 41 41 43 56 60 75 79 80 81
expresion            : 22 30 37 55 57 61 70
finfunc              : 16
funcion              : 14
iniciofunc           : 16
iniciomain           : 85
io                   : 28
llamada              : 51
llamada_param        : 54
llamada_param_mult   : 55 57
objeto_con_exp       : 77
objeto_sin_exp       : 78
param                : 16
param_mult           : 18 19
principal            : 13
program              : 0
push_opt             : 31 32 33 34 35 36 38 39 40 41
push_var_opd         : 50
single               : 3
tipo                 : 5 6 17 18 19
tipo_accion          : 76
tipo_var             : 2
varfuncarr           : 49
vars                 : 1 2 16 85

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INICIOPROGRAMA vars cuerpo FINPROGRAMA

    INICIOPROGRAMA  shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> INICIOPROGRAMA . vars cuerpo FINPROGRAMA
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    vars                           shift and go to state 3
    empty                          shift and go to state 4

state 2

    (0) S' -> program .



state 3

    (1) program -> INICIOPROGRAMA vars . cuerpo FINPROGRAMA
    (2) vars -> vars . tipo_var
    (13) cuerpo -> . cuerpo_func principal
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (14) cuerpo_func -> . cuerpo_func funcion
    (15) cuerpo_func -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 11
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    array                          shift and go to state 6
    tipo_var                       shift and go to state 5
    empty                          shift and go to state 7
    cuerpo                         shift and go to state 10
    single                         shift and go to state 8
    cuerpo_func                    shift and go to state 9

state 4

    (11) vars -> empty .

    CREAR           reduce using rule 11 (vars -> empty .)
    FINPRINCIPAL    reduce using rule 11 (vars -> empty .)
    ID              reduce using rule 11 (vars -> empty .)
    SI              reduce using rule 11 (vars -> empty .)
    MIENTRAS        reduce using rule 11 (vars -> empty .)
    PEDIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    DECIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    GIRARDERECHA    reduce using rule 11 (vars -> empty .)
    GIRARIZQUIERDA  reduce using rule 11 (vars -> empty .)
    MOVER           reduce using rule 11 (vars -> empty .)
    BORRAR          reduce using rule 11 (vars -> empty .)
    PINTAR          reduce using rule 11 (vars -> empty .)
    DESPINTAR       reduce using rule 11 (vars -> empty .)
    INICIOPRINCIPAL reduce using rule 11 (vars -> empty .)
    INICIOFUNCION   reduce using rule 11 (vars -> empty .)
    REGRESA         reduce using rule 11 (vars -> empty .)


state 5

    (2) vars -> vars tipo_var .

    CREAR           reduce using rule 2 (vars -> vars tipo_var .)
    FINPRINCIPAL    reduce using rule 2 (vars -> vars tipo_var .)
    ID              reduce using rule 2 (vars -> vars tipo_var .)
    SI              reduce using rule 2 (vars -> vars tipo_var .)
    MIENTRAS        reduce using rule 2 (vars -> vars tipo_var .)
    PEDIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    DECIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    GIRARDERECHA    reduce using rule 2 (vars -> vars tipo_var .)
    GIRARIZQUIERDA  reduce using rule 2 (vars -> vars tipo_var .)
    MOVER           reduce using rule 2 (vars -> vars tipo_var .)
    BORRAR          reduce using rule 2 (vars -> vars tipo_var .)
    PINTAR          reduce using rule 2 (vars -> vars tipo_var .)
    DESPINTAR       reduce using rule 2 (vars -> vars tipo_var .)
    INICIOPRINCIPAL reduce using rule 2 (vars -> vars tipo_var .)
    INICIOFUNCION   reduce using rule 2 (vars -> vars tipo_var .)
    REGRESA         reduce using rule 2 (vars -> vars tipo_var .)


state 6

    (4) tipo_var -> array .

    CREAR           reduce using rule 4 (tipo_var -> array .)
    FINPRINCIPAL    reduce using rule 4 (tipo_var -> array .)
    ID              reduce using rule 4 (tipo_var -> array .)
    SI              reduce using rule 4 (tipo_var -> array .)
    MIENTRAS        reduce using rule 4 (tipo_var -> array .)
    PEDIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    DECIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    GIRARDERECHA    reduce using rule 4 (tipo_var -> array .)
    GIRARIZQUIERDA  reduce using rule 4 (tipo_var -> array .)
    MOVER           reduce using rule 4 (tipo_var -> array .)
    BORRAR          reduce using rule 4 (tipo_var -> array .)
    PINTAR          reduce using rule 4 (tipo_var -> array .)
    DESPINTAR       reduce using rule 4 (tipo_var -> array .)
    REGRESA         reduce using rule 4 (tipo_var -> array .)
    INICIOPRINCIPAL reduce using rule 4 (tipo_var -> array .)
    INICIOFUNCION   reduce using rule 4 (tipo_var -> array .)


state 7

    (15) cuerpo_func -> empty .

    INICIOPRINCIPAL reduce using rule 15 (cuerpo_func -> empty .)
    INICIOFUNCION   reduce using rule 15 (cuerpo_func -> empty .)


state 8

    (3) tipo_var -> single .

    CREAR           reduce using rule 3 (tipo_var -> single .)
    FINPRINCIPAL    reduce using rule 3 (tipo_var -> single .)
    ID              reduce using rule 3 (tipo_var -> single .)
    SI              reduce using rule 3 (tipo_var -> single .)
    MIENTRAS        reduce using rule 3 (tipo_var -> single .)
    PEDIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    DECIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    GIRARDERECHA    reduce using rule 3 (tipo_var -> single .)
    GIRARIZQUIERDA  reduce using rule 3 (tipo_var -> single .)
    MOVER           reduce using rule 3 (tipo_var -> single .)
    BORRAR          reduce using rule 3 (tipo_var -> single .)
    PINTAR          reduce using rule 3 (tipo_var -> single .)
    DESPINTAR       reduce using rule 3 (tipo_var -> single .)
    REGRESA         reduce using rule 3 (tipo_var -> single .)
    INICIOPRINCIPAL reduce using rule 3 (tipo_var -> single .)
    INICIOFUNCION   reduce using rule 3 (tipo_var -> single .)


state 9

    (13) cuerpo -> cuerpo_func . principal
    (14) cuerpo_func -> cuerpo_func . funcion
    (85) principal -> . iniciomain vars C FINPRINCIPAL
    (16) funcion -> . iniciofunc param vars finfunc
    (86) iniciomain -> . INICIOPRINCIPAL
    (17) iniciofunc -> . INICIOFUNCION tipo ID

    INICIOPRINCIPAL shift and go to state 14
    INICIOFUNCION   shift and go to state 16

    iniciofunc                     shift and go to state 15
    funcion                        shift and go to state 12
    principal                      shift and go to state 13
    iniciomain                     shift and go to state 17

state 10

    (1) program -> INICIOPROGRAMA vars cuerpo . FINPROGRAMA

    FINPROGRAMA     shift and go to state 18


state 11

    (5) single -> CREAR . tipo ID PUNTOCOMA
    (6) array -> CREAR . tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 19
    TEXTO           shift and go to state 22
    BOOLEANO        shift and go to state 23

    tipo                           shift and go to state 21

state 12

    (14) cuerpo_func -> cuerpo_func funcion .

    INICIOPRINCIPAL reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)
    INICIOFUNCION   reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)


state 13

    (13) cuerpo -> cuerpo_func principal .

    FINPROGRAMA     reduce using rule 13 (cuerpo -> cuerpo_func principal .)


state 14

    (86) iniciomain -> INICIOPRINCIPAL .

    CREAR           reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    FINPRINCIPAL    reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    ID              reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    SI              reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    MIENTRAS        reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    PEDIRALUSUARIO  reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    DECIRALUSUARIO  reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    GIRARDERECHA    reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    GIRARIZQUIERDA  reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    MOVER           reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    BORRAR          reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    PINTAR          reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)
    DESPINTAR       reduce using rule 86 (iniciomain -> INICIOPRINCIPAL .)


state 15

    (16) funcion -> iniciofunc . param vars finfunc
    (18) param -> . PARAMETROS tipo ID param_mult
    (21) param -> . empty
    (12) empty -> .

    PARAMETROS      shift and go to state 24
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 25
    param                          shift and go to state 26

state 16

    (17) iniciofunc -> INICIOFUNCION . tipo ID
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 19
    TEXTO           shift and go to state 22
    BOOLEANO        shift and go to state 23

    tipo                           shift and go to state 27

state 17

    (85) principal -> iniciomain . vars C FINPRINCIPAL
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    vars                           shift and go to state 28
    empty                          shift and go to state 4

state 18

    (1) program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .

    $end            reduce using rule 1 (program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .)


state 19

    (8) tipo -> FLOTANTE .

    ID              reduce using rule 8 (tipo -> FLOTANTE .)


state 20

    (7) tipo -> ENTERO .

    ID              reduce using rule 7 (tipo -> ENTERO .)


state 21

    (5) single -> CREAR tipo . ID PUNTOCOMA
    (6) array -> CREAR tipo . ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    ID              shift and go to state 29


state 22

    (9) tipo -> TEXTO .

    ID              reduce using rule 9 (tipo -> TEXTO .)


state 23

    (10) tipo -> BOOLEANO .

    ID              reduce using rule 10 (tipo -> BOOLEANO .)


state 24

    (18) param -> PARAMETROS . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 19
    TEXTO           shift and go to state 22
    BOOLEANO        shift and go to state 23

    tipo                           shift and go to state 30

state 25

    (21) param -> empty .

    CREAR           reduce using rule 21 (param -> empty .)
    REGRESA         reduce using rule 21 (param -> empty .)
    ID              reduce using rule 21 (param -> empty .)
    SI              reduce using rule 21 (param -> empty .)
    MIENTRAS        reduce using rule 21 (param -> empty .)
    PEDIRALUSUARIO  reduce using rule 21 (param -> empty .)
    DECIRALUSUARIO  reduce using rule 21 (param -> empty .)
    GIRARDERECHA    reduce using rule 21 (param -> empty .)
    GIRARIZQUIERDA  reduce using rule 21 (param -> empty .)
    MOVER           reduce using rule 21 (param -> empty .)
    BORRAR          reduce using rule 21 (param -> empty .)
    PINTAR          reduce using rule 21 (param -> empty .)
    DESPINTAR       reduce using rule 21 (param -> empty .)


state 26

    (16) funcion -> iniciofunc param . vars finfunc
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    vars                           shift and go to state 31
    empty                          shift and go to state 4

state 27

    (17) iniciofunc -> INICIOFUNCION tipo . ID

    ID              shift and go to state 32


state 28

    (85) principal -> iniciomain vars . C FINPRINCIPAL
    (2) vars -> vars . tipo_var
    (23) C -> . C estatuto
    (24) C -> . empty
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (12) empty -> .
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    CREAR           shift and go to state 11

    tipo_var                       shift and go to state 5
    C                              shift and go to state 34
    array                          shift and go to state 6
    single                         shift and go to state 8
    empty                          shift and go to state 33

state 29

    (5) single -> CREAR tipo ID . PUNTOCOMA
    (6) array -> CREAR tipo ID . CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 35
    CORCHETEIZQ     shift and go to state 36


state 30

    (18) param -> PARAMETROS tipo . ID param_mult

    ID              shift and go to state 37


state 31

    (16) funcion -> iniciofunc param vars . finfunc
    (2) vars -> vars . tipo_var
    (22) finfunc -> . C REGRESA expresion FINFUNCION
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (23) C -> . C estatuto
    (24) C -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 11
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    tipo_var                       shift and go to state 5
    array                          shift and go to state 6
    empty                          shift and go to state 33
    single                         shift and go to state 8
    C                              shift and go to state 38
    finfunc                        shift and go to state 39

state 32

    (17) iniciofunc -> INICIOFUNCION tipo ID .

    PARAMETROS      reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    CREAR           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    REGRESA         reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    ID              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    SI              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MIENTRAS        reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PEDIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DECIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARDERECHA    reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARIZQUIERDA  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MOVER           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    BORRAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PINTAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DESPINTAR       reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)


state 33

    (24) C -> empty .

    REGRESA         reduce using rule 24 (C -> empty .)
    ID              reduce using rule 24 (C -> empty .)
    SI              reduce using rule 24 (C -> empty .)
    MIENTRAS        reduce using rule 24 (C -> empty .)
    PEDIRALUSUARIO  reduce using rule 24 (C -> empty .)
    DECIRALUSUARIO  reduce using rule 24 (C -> empty .)
    GIRARDERECHA    reduce using rule 24 (C -> empty .)
    GIRARIZQUIERDA  reduce using rule 24 (C -> empty .)
    MOVER           reduce using rule 24 (C -> empty .)
    BORRAR          reduce using rule 24 (C -> empty .)
    PINTAR          reduce using rule 24 (C -> empty .)
    DESPINTAR       reduce using rule 24 (C -> empty .)
    FINPRINCIPAL    reduce using rule 24 (C -> empty .)


state 34

    (85) principal -> iniciomain vars C . FINPRINCIPAL
    (23) C -> C . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (61) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (70) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (74) io -> . PEDIRALUSUARIO ID
    (75) io -> . DECIRALUSUARIO exp
    (76) accion -> . tipo_accion PUNTOCOMA
    (77) tipo_accion -> . objeto_con_exp
    (78) tipo_accion -> . objeto_sin_exp
    (79) objeto_con_exp -> . GIRARDERECHA exp
    (80) objeto_con_exp -> . GIRARIZQUIERDA exp
    (81) objeto_con_exp -> . MOVER exp
    (82) objeto_sin_exp -> . BORRAR
    (83) objeto_sin_exp -> . PINTAR
    (84) objeto_sin_exp -> . DESPINTAR

    FINPRINCIPAL    shift and go to state 56
    ID              shift and go to state 60
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 43
    PEDIRALUSUARIO  shift and go to state 52
    DECIRALUSUARIO  shift and go to state 40
    GIRARDERECHA    shift and go to state 49
    GIRARIZQUIERDA  shift and go to state 44
    MOVER           shift and go to state 45
    BORRAR          shift and go to state 57
    PINTAR          shift and go to state 50
    DESPINTAR       shift and go to state 59

    tipo_accion                    shift and go to state 41
    objeto_con_exp                 shift and go to state 42
    io                             shift and go to state 46
    estatuto                       shift and go to state 47
    asignacion                     shift and go to state 51
    accion                         shift and go to state 48
    condicion                      shift and go to state 54
    objeto_sin_exp                 shift and go to state 53
    ciclo                          shift and go to state 58

state 35

    (5) single -> CREAR tipo ID PUNTOCOMA .

    CREAR           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    REGRESA         reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    ID              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    SI              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MIENTRAS        reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MOVER           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    BORRAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PINTAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DESPINTAR       reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)


state 36

    (6) array -> CREAR tipo ID CORCHETEIZQ . CTEENTERO CORCHETEDER PUNTOCOMA

    CTEENTERO       shift and go to state 61


state 37

    (18) param -> PARAMETROS tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 62
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    param_mult                     shift and go to state 64
    empty                          shift and go to state 63

state 38

    (22) finfunc -> C . REGRESA expresion FINFUNCION
    (23) C -> C . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (61) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (70) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (74) io -> . PEDIRALUSUARIO ID
    (75) io -> . DECIRALUSUARIO exp
    (76) accion -> . tipo_accion PUNTOCOMA
    (77) tipo_accion -> . objeto_con_exp
    (78) tipo_accion -> . objeto_sin_exp
    (79) objeto_con_exp -> . GIRARDERECHA exp
    (80) objeto_con_exp -> . GIRARIZQUIERDA exp
    (81) objeto_con_exp -> . MOVER exp
    (82) objeto_sin_exp -> . BORRAR
    (83) objeto_sin_exp -> . PINTAR
    (84) objeto_sin_exp -> . DESPINTAR

    REGRESA         shift and go to state 65
    ID              shift and go to state 60
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 43
    PEDIRALUSUARIO  shift and go to state 52
    DECIRALUSUARIO  shift and go to state 40
    GIRARDERECHA    shift and go to state 49
    GIRARIZQUIERDA  shift and go to state 44
    MOVER           shift and go to state 45
    BORRAR          shift and go to state 57
    PINTAR          shift and go to state 50
    DESPINTAR       shift and go to state 59

    asignacion                     shift and go to state 51
    tipo_accion                    shift and go to state 41
    objeto_con_exp                 shift and go to state 42
    condicion                      shift and go to state 54
    objeto_sin_exp                 shift and go to state 53
    io                             shift and go to state 46
    estatuto                       shift and go to state 47
    accion                         shift and go to state 48
    ciclo                          shift and go to state 58

state 39

    (16) funcion -> iniciofunc param vars finfunc .

    INICIOPRINCIPAL reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)
    INICIOFUNCION   reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)


state 40

    (75) io -> DECIRALUSUARIO . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 74

state 41

    (76) accion -> tipo_accion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 75


state 42

    (77) tipo_accion -> objeto_con_exp .

    PUNTOCOMA       reduce using rule 77 (tipo_accion -> objeto_con_exp .)


state 43

    (70) ciclo -> MIENTRAS . actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (71) actCic1 -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 76
    actCic1                        shift and go to state 77

state 44

    (80) objeto_con_exp -> GIRARIZQUIERDA . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 78

state 45

    (81) objeto_con_exp -> MOVER . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 79

state 46

    (28) estatuto -> io .

    REGRESA         reduce using rule 28 (estatuto -> io .)
    ID              reduce using rule 28 (estatuto -> io .)
    SI              reduce using rule 28 (estatuto -> io .)
    MIENTRAS        reduce using rule 28 (estatuto -> io .)
    PEDIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    DECIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    GIRARDERECHA    reduce using rule 28 (estatuto -> io .)
    GIRARIZQUIERDA  reduce using rule 28 (estatuto -> io .)
    MOVER           reduce using rule 28 (estatuto -> io .)
    BORRAR          reduce using rule 28 (estatuto -> io .)
    PINTAR          reduce using rule 28 (estatuto -> io .)
    DESPINTAR       reduce using rule 28 (estatuto -> io .)
    FINBLOQUE       reduce using rule 28 (estatuto -> io .)
    FINPRINCIPAL    reduce using rule 28 (estatuto -> io .)


state 47

    (23) C -> C estatuto .

    REGRESA         reduce using rule 23 (C -> C estatuto .)
    ID              reduce using rule 23 (C -> C estatuto .)
    SI              reduce using rule 23 (C -> C estatuto .)
    MIENTRAS        reduce using rule 23 (C -> C estatuto .)
    PEDIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    DECIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    GIRARDERECHA    reduce using rule 23 (C -> C estatuto .)
    GIRARIZQUIERDA  reduce using rule 23 (C -> C estatuto .)
    MOVER           reduce using rule 23 (C -> C estatuto .)
    BORRAR          reduce using rule 23 (C -> C estatuto .)
    PINTAR          reduce using rule 23 (C -> C estatuto .)
    DESPINTAR       reduce using rule 23 (C -> C estatuto .)
    FINPRINCIPAL    reduce using rule 23 (C -> C estatuto .)


state 48

    (29) estatuto -> accion .

    REGRESA         reduce using rule 29 (estatuto -> accion .)
    ID              reduce using rule 29 (estatuto -> accion .)
    SI              reduce using rule 29 (estatuto -> accion .)
    MIENTRAS        reduce using rule 29 (estatuto -> accion .)
    PEDIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    DECIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    GIRARDERECHA    reduce using rule 29 (estatuto -> accion .)
    GIRARIZQUIERDA  reduce using rule 29 (estatuto -> accion .)
    MOVER           reduce using rule 29 (estatuto -> accion .)
    BORRAR          reduce using rule 29 (estatuto -> accion .)
    PINTAR          reduce using rule 29 (estatuto -> accion .)
    DESPINTAR       reduce using rule 29 (estatuto -> accion .)
    FINBLOQUE       reduce using rule 29 (estatuto -> accion .)
    FINPRINCIPAL    reduce using rule 29 (estatuto -> accion .)


state 49

    (79) objeto_con_exp -> GIRARDERECHA . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 80

state 50

    (83) objeto_sin_exp -> PINTAR .

    PUNTOCOMA       reduce using rule 83 (objeto_sin_exp -> PINTAR .)


state 51

    (25) estatuto -> asignacion .

    REGRESA         reduce using rule 25 (estatuto -> asignacion .)
    ID              reduce using rule 25 (estatuto -> asignacion .)
    SI              reduce using rule 25 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 25 (estatuto -> asignacion .)
    PEDIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    DECIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    GIRARDERECHA    reduce using rule 25 (estatuto -> asignacion .)
    GIRARIZQUIERDA  reduce using rule 25 (estatuto -> asignacion .)
    MOVER           reduce using rule 25 (estatuto -> asignacion .)
    BORRAR          reduce using rule 25 (estatuto -> asignacion .)
    PINTAR          reduce using rule 25 (estatuto -> asignacion .)
    DESPINTAR       reduce using rule 25 (estatuto -> asignacion .)
    FINBLOQUE       reduce using rule 25 (estatuto -> asignacion .)
    FINPRINCIPAL    reduce using rule 25 (estatuto -> asignacion .)


state 52

    (74) io -> PEDIRALUSUARIO . ID

    ID              shift and go to state 81


state 53

    (78) tipo_accion -> objeto_sin_exp .

    PUNTOCOMA       reduce using rule 78 (tipo_accion -> objeto_sin_exp .)


state 54

    (26) estatuto -> condicion .

    REGRESA         reduce using rule 26 (estatuto -> condicion .)
    ID              reduce using rule 26 (estatuto -> condicion .)
    SI              reduce using rule 26 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 26 (estatuto -> condicion .)
    PEDIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    DECIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    GIRARDERECHA    reduce using rule 26 (estatuto -> condicion .)
    GIRARIZQUIERDA  reduce using rule 26 (estatuto -> condicion .)
    MOVER           reduce using rule 26 (estatuto -> condicion .)
    BORRAR          reduce using rule 26 (estatuto -> condicion .)
    PINTAR          reduce using rule 26 (estatuto -> condicion .)
    DESPINTAR       reduce using rule 26 (estatuto -> condicion .)
    FINBLOQUE       reduce using rule 26 (estatuto -> condicion .)
    FINPRINCIPAL    reduce using rule 26 (estatuto -> condicion .)


state 55

    (61) condicion -> SI . expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    expresion                      shift and go to state 82
    exp                            shift and go to state 83

state 56

    (85) principal -> iniciomain vars C FINPRINCIPAL .

    FINPROGRAMA     reduce using rule 85 (principal -> iniciomain vars C FINPRINCIPAL .)


state 57

    (82) objeto_sin_exp -> BORRAR .

    PUNTOCOMA       reduce using rule 82 (objeto_sin_exp -> BORRAR .)


state 58

    (27) estatuto -> ciclo .

    REGRESA         reduce using rule 27 (estatuto -> ciclo .)
    ID              reduce using rule 27 (estatuto -> ciclo .)
    SI              reduce using rule 27 (estatuto -> ciclo .)
    MIENTRAS        reduce using rule 27 (estatuto -> ciclo .)
    PEDIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    DECIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    GIRARDERECHA    reduce using rule 27 (estatuto -> ciclo .)
    GIRARIZQUIERDA  reduce using rule 27 (estatuto -> ciclo .)
    MOVER           reduce using rule 27 (estatuto -> ciclo .)
    BORRAR          reduce using rule 27 (estatuto -> ciclo .)
    PINTAR          reduce using rule 27 (estatuto -> ciclo .)
    DESPINTAR       reduce using rule 27 (estatuto -> ciclo .)
    FINBLOQUE       reduce using rule 27 (estatuto -> ciclo .)
    FINPRINCIPAL    reduce using rule 27 (estatuto -> ciclo .)


state 59

    (84) objeto_sin_exp -> DESPINTAR .

    PUNTOCOMA       reduce using rule 84 (objeto_sin_exp -> DESPINTAR .)


state 60

    (30) asignacion -> ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 84


state 61

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 85


state 62

    (19) param_mult -> COMA . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 19
    TEXTO           shift and go to state 22
    BOOLEANO        shift and go to state 23

    tipo                           shift and go to state 86

state 63

    (20) param_mult -> empty .

    CREAR           reduce using rule 20 (param_mult -> empty .)
    REGRESA         reduce using rule 20 (param_mult -> empty .)
    ID              reduce using rule 20 (param_mult -> empty .)
    SI              reduce using rule 20 (param_mult -> empty .)
    MIENTRAS        reduce using rule 20 (param_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    GIRARDERECHA    reduce using rule 20 (param_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 20 (param_mult -> empty .)
    MOVER           reduce using rule 20 (param_mult -> empty .)
    BORRAR          reduce using rule 20 (param_mult -> empty .)
    PINTAR          reduce using rule 20 (param_mult -> empty .)
    DESPINTAR       reduce using rule 20 (param_mult -> empty .)


state 64

    (18) param -> PARAMETROS tipo ID param_mult .

    CREAR           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    REGRESA         reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    ID              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    SI              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MIENTRAS        reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MOVER           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    BORRAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PINTAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DESPINTAR       reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)


state 65

    (22) finfunc -> C REGRESA . expresion FINFUNCION
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 83
    expresion                      shift and go to state 87

state 66

    (44) exp -> CTEENTERO .

    MAS             reduce using rule 44 (exp -> CTEENTERO .)
    MENOS           reduce using rule 44 (exp -> CTEENTERO .)
    MULT            reduce using rule 44 (exp -> CTEENTERO .)
    DIV             reduce using rule 44 (exp -> CTEENTERO .)
    PUNTOCOMA       reduce using rule 44 (exp -> CTEENTERO .)
    ENTONCES        reduce using rule 44 (exp -> CTEENTERO .)
    FINFUNCION      reduce using rule 44 (exp -> CTEENTERO .)
    PARENTDER       reduce using rule 44 (exp -> CTEENTERO .)
    HACER           reduce using rule 44 (exp -> CTEENTERO .)
    COMA            reduce using rule 44 (exp -> CTEENTERO .)
    FINPRINCIPAL    reduce using rule 44 (exp -> CTEENTERO .)
    ID              reduce using rule 44 (exp -> CTEENTERO .)
    SI              reduce using rule 44 (exp -> CTEENTERO .)
    MIENTRAS        reduce using rule 44 (exp -> CTEENTERO .)
    PEDIRALUSUARIO  reduce using rule 44 (exp -> CTEENTERO .)
    DECIRALUSUARIO  reduce using rule 44 (exp -> CTEENTERO .)
    GIRARDERECHA    reduce using rule 44 (exp -> CTEENTERO .)
    GIRARIZQUIERDA  reduce using rule 44 (exp -> CTEENTERO .)
    MOVER           reduce using rule 44 (exp -> CTEENTERO .)
    BORRAR          reduce using rule 44 (exp -> CTEENTERO .)
    PINTAR          reduce using rule 44 (exp -> CTEENTERO .)
    DESPINTAR       reduce using rule 44 (exp -> CTEENTERO .)
    REGRESA         reduce using rule 44 (exp -> CTEENTERO .)
    FINBLOQUE       reduce using rule 44 (exp -> CTEENTERO .)
    MAYORQUE        reduce using rule 44 (exp -> CTEENTERO .)
    MENORQUE        reduce using rule 44 (exp -> CTEENTERO .)
    DIFERENTEQUE    reduce using rule 44 (exp -> CTEENTERO .)
    IGUALQUE        reduce using rule 44 (exp -> CTEENTERO .)
    MAYORIGUAL      reduce using rule 44 (exp -> CTEENTERO .)
    MENORIGUAL      reduce using rule 44 (exp -> CTEENTERO .)
    CORCHETEDER     reduce using rule 44 (exp -> CTEENTERO .)


state 67

    (45) exp -> CTEFLOTANTE .

    MAS             reduce using rule 45 (exp -> CTEFLOTANTE .)
    MENOS           reduce using rule 45 (exp -> CTEFLOTANTE .)
    MULT            reduce using rule 45 (exp -> CTEFLOTANTE .)
    DIV             reduce using rule 45 (exp -> CTEFLOTANTE .)
    PUNTOCOMA       reduce using rule 45 (exp -> CTEFLOTANTE .)
    ENTONCES        reduce using rule 45 (exp -> CTEFLOTANTE .)
    FINFUNCION      reduce using rule 45 (exp -> CTEFLOTANTE .)
    PARENTDER       reduce using rule 45 (exp -> CTEFLOTANTE .)
    HACER           reduce using rule 45 (exp -> CTEFLOTANTE .)
    COMA            reduce using rule 45 (exp -> CTEFLOTANTE .)
    FINPRINCIPAL    reduce using rule 45 (exp -> CTEFLOTANTE .)
    ID              reduce using rule 45 (exp -> CTEFLOTANTE .)
    SI              reduce using rule 45 (exp -> CTEFLOTANTE .)
    MIENTRAS        reduce using rule 45 (exp -> CTEFLOTANTE .)
    PEDIRALUSUARIO  reduce using rule 45 (exp -> CTEFLOTANTE .)
    DECIRALUSUARIO  reduce using rule 45 (exp -> CTEFLOTANTE .)
    GIRARDERECHA    reduce using rule 45 (exp -> CTEFLOTANTE .)
    GIRARIZQUIERDA  reduce using rule 45 (exp -> CTEFLOTANTE .)
    MOVER           reduce using rule 45 (exp -> CTEFLOTANTE .)
    BORRAR          reduce using rule 45 (exp -> CTEFLOTANTE .)
    PINTAR          reduce using rule 45 (exp -> CTEFLOTANTE .)
    DESPINTAR       reduce using rule 45 (exp -> CTEFLOTANTE .)
    REGRESA         reduce using rule 45 (exp -> CTEFLOTANTE .)
    FINBLOQUE       reduce using rule 45 (exp -> CTEFLOTANTE .)
    MAYORQUE        reduce using rule 45 (exp -> CTEFLOTANTE .)
    MENORQUE        reduce using rule 45 (exp -> CTEFLOTANTE .)
    DIFERENTEQUE    reduce using rule 45 (exp -> CTEFLOTANTE .)
    IGUALQUE        reduce using rule 45 (exp -> CTEFLOTANTE .)
    MAYORIGUAL      reduce using rule 45 (exp -> CTEFLOTANTE .)
    MENORIGUAL      reduce using rule 45 (exp -> CTEFLOTANTE .)
    CORCHETEDER     reduce using rule 45 (exp -> CTEFLOTANTE .)


state 68

    (43) exp -> MENOS . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 88

state 69

    (37) exp -> PARENTIZQ . expresion PARENTDER
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    expresion                      shift and go to state 89
    exp                            shift and go to state 83

state 70

    (47) exp -> FALSE .

    MAS             reduce using rule 47 (exp -> FALSE .)
    MENOS           reduce using rule 47 (exp -> FALSE .)
    MULT            reduce using rule 47 (exp -> FALSE .)
    DIV             reduce using rule 47 (exp -> FALSE .)
    PUNTOCOMA       reduce using rule 47 (exp -> FALSE .)
    ENTONCES        reduce using rule 47 (exp -> FALSE .)
    FINFUNCION      reduce using rule 47 (exp -> FALSE .)
    PARENTDER       reduce using rule 47 (exp -> FALSE .)
    HACER           reduce using rule 47 (exp -> FALSE .)
    COMA            reduce using rule 47 (exp -> FALSE .)
    FINPRINCIPAL    reduce using rule 47 (exp -> FALSE .)
    ID              reduce using rule 47 (exp -> FALSE .)
    SI              reduce using rule 47 (exp -> FALSE .)
    MIENTRAS        reduce using rule 47 (exp -> FALSE .)
    PEDIRALUSUARIO  reduce using rule 47 (exp -> FALSE .)
    DECIRALUSUARIO  reduce using rule 47 (exp -> FALSE .)
    GIRARDERECHA    reduce using rule 47 (exp -> FALSE .)
    GIRARIZQUIERDA  reduce using rule 47 (exp -> FALSE .)
    MOVER           reduce using rule 47 (exp -> FALSE .)
    BORRAR          reduce using rule 47 (exp -> FALSE .)
    PINTAR          reduce using rule 47 (exp -> FALSE .)
    DESPINTAR       reduce using rule 47 (exp -> FALSE .)
    REGRESA         reduce using rule 47 (exp -> FALSE .)
    FINBLOQUE       reduce using rule 47 (exp -> FALSE .)
    MAYORQUE        reduce using rule 47 (exp -> FALSE .)
    MENORQUE        reduce using rule 47 (exp -> FALSE .)
    DIFERENTEQUE    reduce using rule 47 (exp -> FALSE .)
    IGUALQUE        reduce using rule 47 (exp -> FALSE .)
    MAYORIGUAL      reduce using rule 47 (exp -> FALSE .)
    MENORIGUAL      reduce using rule 47 (exp -> FALSE .)
    CORCHETEDER     reduce using rule 47 (exp -> FALSE .)


state 71

    (48) exp -> CTETEXTO .

    MAS             reduce using rule 48 (exp -> CTETEXTO .)
    MENOS           reduce using rule 48 (exp -> CTETEXTO .)
    MULT            reduce using rule 48 (exp -> CTETEXTO .)
    DIV             reduce using rule 48 (exp -> CTETEXTO .)
    PUNTOCOMA       reduce using rule 48 (exp -> CTETEXTO .)
    ENTONCES        reduce using rule 48 (exp -> CTETEXTO .)
    FINFUNCION      reduce using rule 48 (exp -> CTETEXTO .)
    PARENTDER       reduce using rule 48 (exp -> CTETEXTO .)
    HACER           reduce using rule 48 (exp -> CTETEXTO .)
    COMA            reduce using rule 48 (exp -> CTETEXTO .)
    FINPRINCIPAL    reduce using rule 48 (exp -> CTETEXTO .)
    ID              reduce using rule 48 (exp -> CTETEXTO .)
    SI              reduce using rule 48 (exp -> CTETEXTO .)
    MIENTRAS        reduce using rule 48 (exp -> CTETEXTO .)
    PEDIRALUSUARIO  reduce using rule 48 (exp -> CTETEXTO .)
    DECIRALUSUARIO  reduce using rule 48 (exp -> CTETEXTO .)
    GIRARDERECHA    reduce using rule 48 (exp -> CTETEXTO .)
    GIRARIZQUIERDA  reduce using rule 48 (exp -> CTETEXTO .)
    MOVER           reduce using rule 48 (exp -> CTETEXTO .)
    BORRAR          reduce using rule 48 (exp -> CTETEXTO .)
    PINTAR          reduce using rule 48 (exp -> CTETEXTO .)
    DESPINTAR       reduce using rule 48 (exp -> CTETEXTO .)
    REGRESA         reduce using rule 48 (exp -> CTETEXTO .)
    FINBLOQUE       reduce using rule 48 (exp -> CTETEXTO .)
    MAYORQUE        reduce using rule 48 (exp -> CTETEXTO .)
    MENORQUE        reduce using rule 48 (exp -> CTETEXTO .)
    DIFERENTEQUE    reduce using rule 48 (exp -> CTETEXTO .)
    IGUALQUE        reduce using rule 48 (exp -> CTETEXTO .)
    MAYORIGUAL      reduce using rule 48 (exp -> CTETEXTO .)
    MENORIGUAL      reduce using rule 48 (exp -> CTETEXTO .)
    CORCHETEDER     reduce using rule 48 (exp -> CTETEXTO .)


state 72

    (49) exp -> ID . varfuncarr
    (50) varfuncarr -> . push_var_opd
    (51) varfuncarr -> . llamada
    (52) varfuncarr -> . arraycall
    (53) push_var_opd -> . empty
    (54) llamada -> . PARENTIZQ llamada_param PARENTDER
    (60) arraycall -> . CORCHETEIZQ exp CORCHETEDER
    (12) empty -> .

    PARENTIZQ       shift and go to state 94
    CORCHETEIZQ     shift and go to state 93
    MAS             reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    MULT            reduce using rule 12 (empty -> .)
    DIV             reduce using rule 12 (empty -> .)
    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    FINBLOQUE       reduce using rule 12 (empty -> .)
    PUNTOCOMA       reduce using rule 12 (empty -> .)
    MAYORQUE        reduce using rule 12 (empty -> .)
    MENORQUE        reduce using rule 12 (empty -> .)
    DIFERENTEQUE    reduce using rule 12 (empty -> .)
    IGUALQUE        reduce using rule 12 (empty -> .)
    MAYORIGUAL      reduce using rule 12 (empty -> .)
    MENORIGUAL      reduce using rule 12 (empty -> .)
    ENTONCES        reduce using rule 12 (empty -> .)
    FINFUNCION      reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)
    HACER           reduce using rule 12 (empty -> .)
    CORCHETEDER     reduce using rule 12 (empty -> .)
    COMA            reduce using rule 12 (empty -> .)

    llamada                        shift and go to state 92
    varfuncarr                     shift and go to state 90
    empty                          shift and go to state 91
    arraycall                      shift and go to state 95
    push_var_opd                   shift and go to state 96

state 73

    (46) exp -> TRUE .

    MAS             reduce using rule 46 (exp -> TRUE .)
    MENOS           reduce using rule 46 (exp -> TRUE .)
    MULT            reduce using rule 46 (exp -> TRUE .)
    DIV             reduce using rule 46 (exp -> TRUE .)
    PUNTOCOMA       reduce using rule 46 (exp -> TRUE .)
    ENTONCES        reduce using rule 46 (exp -> TRUE .)
    FINFUNCION      reduce using rule 46 (exp -> TRUE .)
    PARENTDER       reduce using rule 46 (exp -> TRUE .)
    HACER           reduce using rule 46 (exp -> TRUE .)
    COMA            reduce using rule 46 (exp -> TRUE .)
    FINPRINCIPAL    reduce using rule 46 (exp -> TRUE .)
    ID              reduce using rule 46 (exp -> TRUE .)
    SI              reduce using rule 46 (exp -> TRUE .)
    MIENTRAS        reduce using rule 46 (exp -> TRUE .)
    PEDIRALUSUARIO  reduce using rule 46 (exp -> TRUE .)
    DECIRALUSUARIO  reduce using rule 46 (exp -> TRUE .)
    GIRARDERECHA    reduce using rule 46 (exp -> TRUE .)
    GIRARIZQUIERDA  reduce using rule 46 (exp -> TRUE .)
    MOVER           reduce using rule 46 (exp -> TRUE .)
    BORRAR          reduce using rule 46 (exp -> TRUE .)
    PINTAR          reduce using rule 46 (exp -> TRUE .)
    DESPINTAR       reduce using rule 46 (exp -> TRUE .)
    REGRESA         reduce using rule 46 (exp -> TRUE .)
    FINBLOQUE       reduce using rule 46 (exp -> TRUE .)
    MAYORQUE        reduce using rule 46 (exp -> TRUE .)
    MENORQUE        reduce using rule 46 (exp -> TRUE .)
    DIFERENTEQUE    reduce using rule 46 (exp -> TRUE .)
    IGUALQUE        reduce using rule 46 (exp -> TRUE .)
    MAYORIGUAL      reduce using rule 46 (exp -> TRUE .)
    MENORIGUAL      reduce using rule 46 (exp -> TRUE .)
    CORCHETEDER     reduce using rule 46 (exp -> TRUE .)


state 74

    (75) io -> DECIRALUSUARIO exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINPRINCIPAL    reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    ID              reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    SI              reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    MIENTRAS        reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    PEDIRALUSUARIO  reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    DECIRALUSUARIO  reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    GIRARDERECHA    reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    GIRARIZQUIERDA  reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    MOVER           reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    BORRAR          reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    PINTAR          reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    DESPINTAR       reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    FINBLOQUE       reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    REGRESA         reduce using rule 75 (io -> DECIRALUSUARIO exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 75

    (76) accion -> tipo_accion PUNTOCOMA .

    REGRESA         reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    ID              reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    SI              reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    MIENTRAS        reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    MOVER           reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    BORRAR          reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    PINTAR          reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    DESPINTAR       reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 76 (accion -> tipo_accion PUNTOCOMA .)


state 76

    (71) actCic1 -> empty .

    PARENTIZQ       reduce using rule 71 (actCic1 -> empty .)
    MENOS           reduce using rule 71 (actCic1 -> empty .)
    CTEENTERO       reduce using rule 71 (actCic1 -> empty .)
    CTEFLOTANTE     reduce using rule 71 (actCic1 -> empty .)
    TRUE            reduce using rule 71 (actCic1 -> empty .)
    FALSE           reduce using rule 71 (actCic1 -> empty .)
    CTETEXTO        reduce using rule 71 (actCic1 -> empty .)
    ID              reduce using rule 71 (actCic1 -> empty .)


state 77

    (70) ciclo -> MIENTRAS actCic1 . expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    expresion                      shift and go to state 101
    exp                            shift and go to state 83

state 78

    (80) objeto_con_exp -> GIRARIZQUIERDA exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 80 (objeto_con_exp -> GIRARIZQUIERDA exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 79

    (81) objeto_con_exp -> MOVER exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 81 (objeto_con_exp -> MOVER exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 80

    (79) objeto_con_exp -> GIRARDERECHA exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 79 (objeto_con_exp -> GIRARDERECHA exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 81

    (74) io -> PEDIRALUSUARIO ID .

    FINPRINCIPAL    reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    ID              reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    SI              reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    MIENTRAS        reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    PEDIRALUSUARIO  reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    DECIRALUSUARIO  reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    GIRARDERECHA    reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    GIRARIZQUIERDA  reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    MOVER           reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    BORRAR          reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    PINTAR          reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    DESPINTAR       reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    FINBLOQUE       reduce using rule 74 (io -> PEDIRALUSUARIO ID .)
    REGRESA         reduce using rule 74 (io -> PEDIRALUSUARIO ID .)


state 82

    (61) condicion -> SI expresion . actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (62) actSi1 -> . empty
    (12) empty -> .

    ENTONCES        reduce using rule 12 (empty -> .)

    actSi1                         shift and go to state 103
    empty                          shift and go to state 102

state 83

    (31) expresion -> exp . MAYORQUE push_opt exp
    (32) expresion -> exp . MENORQUE push_opt exp
    (33) expresion -> exp . DIFERENTEQUE push_opt exp
    (34) expresion -> exp . IGUALQUE push_opt exp
    (35) expresion -> exp . MAYORIGUAL push_opt exp
    (36) expresion -> exp . MENORIGUAL push_opt exp
    (56) expresion -> exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAYORQUE        shift and go to state 109
    MENORQUE        shift and go to state 104
    DIFERENTEQUE    shift and go to state 108
    IGUALQUE        shift and go to state 105
    MAYORIGUAL      shift and go to state 106
    MENORIGUAL      shift and go to state 107
    FINFUNCION      reduce using rule 56 (expresion -> exp .)
    ENTONCES        reduce using rule 56 (expresion -> exp .)
    PARENTDER       reduce using rule 56 (expresion -> exp .)
    COMA            reduce using rule 56 (expresion -> exp .)
    PUNTOCOMA       reduce using rule 56 (expresion -> exp .)
    HACER           reduce using rule 56 (expresion -> exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 84

    (30) asignacion -> ID IGUAL . expresion PUNTOCOMA
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    expresion                      shift and go to state 110
    exp                            shift and go to state 83

state 85

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 111


state 86

    (19) param_mult -> COMA tipo . ID param_mult

    ID              shift and go to state 112


state 87

    (22) finfunc -> C REGRESA expresion . FINFUNCION

    FINFUNCION      shift and go to state 113


state 88

    (43) exp -> MENOS exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 43 (exp -> MENOS exp .)
    MENOS           reduce using rule 43 (exp -> MENOS exp .)
    MULT            reduce using rule 43 (exp -> MENOS exp .)
    DIV             reduce using rule 43 (exp -> MENOS exp .)
    PUNTOCOMA       reduce using rule 43 (exp -> MENOS exp .)
    ENTONCES        reduce using rule 43 (exp -> MENOS exp .)
    FINFUNCION      reduce using rule 43 (exp -> MENOS exp .)
    PARENTDER       reduce using rule 43 (exp -> MENOS exp .)
    HACER           reduce using rule 43 (exp -> MENOS exp .)
    COMA            reduce using rule 43 (exp -> MENOS exp .)
    FINPRINCIPAL    reduce using rule 43 (exp -> MENOS exp .)
    ID              reduce using rule 43 (exp -> MENOS exp .)
    SI              reduce using rule 43 (exp -> MENOS exp .)
    MIENTRAS        reduce using rule 43 (exp -> MENOS exp .)
    PEDIRALUSUARIO  reduce using rule 43 (exp -> MENOS exp .)
    DECIRALUSUARIO  reduce using rule 43 (exp -> MENOS exp .)
    GIRARDERECHA    reduce using rule 43 (exp -> MENOS exp .)
    GIRARIZQUIERDA  reduce using rule 43 (exp -> MENOS exp .)
    MOVER           reduce using rule 43 (exp -> MENOS exp .)
    BORRAR          reduce using rule 43 (exp -> MENOS exp .)
    PINTAR          reduce using rule 43 (exp -> MENOS exp .)
    DESPINTAR       reduce using rule 43 (exp -> MENOS exp .)
    REGRESA         reduce using rule 43 (exp -> MENOS exp .)
    FINBLOQUE       reduce using rule 43 (exp -> MENOS exp .)
    MAYORQUE        reduce using rule 43 (exp -> MENOS exp .)
    MENORQUE        reduce using rule 43 (exp -> MENOS exp .)
    DIFERENTEQUE    reduce using rule 43 (exp -> MENOS exp .)
    IGUALQUE        reduce using rule 43 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 43 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 43 (exp -> MENOS exp .)
    CORCHETEDER     reduce using rule 43 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 100 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 97 ]


state 89

    (37) exp -> PARENTIZQ expresion . PARENTDER

    PARENTDER       shift and go to state 114


state 90

    (49) exp -> ID varfuncarr .

    MAS             reduce using rule 49 (exp -> ID varfuncarr .)
    MENOS           reduce using rule 49 (exp -> ID varfuncarr .)
    MULT            reduce using rule 49 (exp -> ID varfuncarr .)
    DIV             reduce using rule 49 (exp -> ID varfuncarr .)
    PUNTOCOMA       reduce using rule 49 (exp -> ID varfuncarr .)
    ENTONCES        reduce using rule 49 (exp -> ID varfuncarr .)
    FINFUNCION      reduce using rule 49 (exp -> ID varfuncarr .)
    PARENTDER       reduce using rule 49 (exp -> ID varfuncarr .)
    HACER           reduce using rule 49 (exp -> ID varfuncarr .)
    COMA            reduce using rule 49 (exp -> ID varfuncarr .)
    FINPRINCIPAL    reduce using rule 49 (exp -> ID varfuncarr .)
    ID              reduce using rule 49 (exp -> ID varfuncarr .)
    SI              reduce using rule 49 (exp -> ID varfuncarr .)
    MIENTRAS        reduce using rule 49 (exp -> ID varfuncarr .)
    PEDIRALUSUARIO  reduce using rule 49 (exp -> ID varfuncarr .)
    DECIRALUSUARIO  reduce using rule 49 (exp -> ID varfuncarr .)
    GIRARDERECHA    reduce using rule 49 (exp -> ID varfuncarr .)
    GIRARIZQUIERDA  reduce using rule 49 (exp -> ID varfuncarr .)
    MOVER           reduce using rule 49 (exp -> ID varfuncarr .)
    BORRAR          reduce using rule 49 (exp -> ID varfuncarr .)
    PINTAR          reduce using rule 49 (exp -> ID varfuncarr .)
    DESPINTAR       reduce using rule 49 (exp -> ID varfuncarr .)
    REGRESA         reduce using rule 49 (exp -> ID varfuncarr .)
    FINBLOQUE       reduce using rule 49 (exp -> ID varfuncarr .)
    MAYORQUE        reduce using rule 49 (exp -> ID varfuncarr .)
    MENORQUE        reduce using rule 49 (exp -> ID varfuncarr .)
    DIFERENTEQUE    reduce using rule 49 (exp -> ID varfuncarr .)
    IGUALQUE        reduce using rule 49 (exp -> ID varfuncarr .)
    MAYORIGUAL      reduce using rule 49 (exp -> ID varfuncarr .)
    MENORIGUAL      reduce using rule 49 (exp -> ID varfuncarr .)
    CORCHETEDER     reduce using rule 49 (exp -> ID varfuncarr .)


state 91

    (53) push_var_opd -> empty .

    MAS             reduce using rule 53 (push_var_opd -> empty .)
    MENOS           reduce using rule 53 (push_var_opd -> empty .)
    MULT            reduce using rule 53 (push_var_opd -> empty .)
    DIV             reduce using rule 53 (push_var_opd -> empty .)
    FINPRINCIPAL    reduce using rule 53 (push_var_opd -> empty .)
    ID              reduce using rule 53 (push_var_opd -> empty .)
    SI              reduce using rule 53 (push_var_opd -> empty .)
    MIENTRAS        reduce using rule 53 (push_var_opd -> empty .)
    PEDIRALUSUARIO  reduce using rule 53 (push_var_opd -> empty .)
    DECIRALUSUARIO  reduce using rule 53 (push_var_opd -> empty .)
    GIRARDERECHA    reduce using rule 53 (push_var_opd -> empty .)
    GIRARIZQUIERDA  reduce using rule 53 (push_var_opd -> empty .)
    MOVER           reduce using rule 53 (push_var_opd -> empty .)
    BORRAR          reduce using rule 53 (push_var_opd -> empty .)
    PINTAR          reduce using rule 53 (push_var_opd -> empty .)
    DESPINTAR       reduce using rule 53 (push_var_opd -> empty .)
    REGRESA         reduce using rule 53 (push_var_opd -> empty .)
    FINBLOQUE       reduce using rule 53 (push_var_opd -> empty .)
    PUNTOCOMA       reduce using rule 53 (push_var_opd -> empty .)
    MAYORQUE        reduce using rule 53 (push_var_opd -> empty .)
    MENORQUE        reduce using rule 53 (push_var_opd -> empty .)
    DIFERENTEQUE    reduce using rule 53 (push_var_opd -> empty .)
    IGUALQUE        reduce using rule 53 (push_var_opd -> empty .)
    MAYORIGUAL      reduce using rule 53 (push_var_opd -> empty .)
    MENORIGUAL      reduce using rule 53 (push_var_opd -> empty .)
    ENTONCES        reduce using rule 53 (push_var_opd -> empty .)
    FINFUNCION      reduce using rule 53 (push_var_opd -> empty .)
    PARENTDER       reduce using rule 53 (push_var_opd -> empty .)
    HACER           reduce using rule 53 (push_var_opd -> empty .)
    CORCHETEDER     reduce using rule 53 (push_var_opd -> empty .)
    COMA            reduce using rule 53 (push_var_opd -> empty .)


state 92

    (51) varfuncarr -> llamada .

    MAS             reduce using rule 51 (varfuncarr -> llamada .)
    MENOS           reduce using rule 51 (varfuncarr -> llamada .)
    MULT            reduce using rule 51 (varfuncarr -> llamada .)
    DIV             reduce using rule 51 (varfuncarr -> llamada .)
    FINPRINCIPAL    reduce using rule 51 (varfuncarr -> llamada .)
    ID              reduce using rule 51 (varfuncarr -> llamada .)
    SI              reduce using rule 51 (varfuncarr -> llamada .)
    MIENTRAS        reduce using rule 51 (varfuncarr -> llamada .)
    PEDIRALUSUARIO  reduce using rule 51 (varfuncarr -> llamada .)
    DECIRALUSUARIO  reduce using rule 51 (varfuncarr -> llamada .)
    GIRARDERECHA    reduce using rule 51 (varfuncarr -> llamada .)
    GIRARIZQUIERDA  reduce using rule 51 (varfuncarr -> llamada .)
    MOVER           reduce using rule 51 (varfuncarr -> llamada .)
    BORRAR          reduce using rule 51 (varfuncarr -> llamada .)
    PINTAR          reduce using rule 51 (varfuncarr -> llamada .)
    DESPINTAR       reduce using rule 51 (varfuncarr -> llamada .)
    REGRESA         reduce using rule 51 (varfuncarr -> llamada .)
    FINBLOQUE       reduce using rule 51 (varfuncarr -> llamada .)
    PUNTOCOMA       reduce using rule 51 (varfuncarr -> llamada .)
    MAYORQUE        reduce using rule 51 (varfuncarr -> llamada .)
    MENORQUE        reduce using rule 51 (varfuncarr -> llamada .)
    DIFERENTEQUE    reduce using rule 51 (varfuncarr -> llamada .)
    IGUALQUE        reduce using rule 51 (varfuncarr -> llamada .)
    MAYORIGUAL      reduce using rule 51 (varfuncarr -> llamada .)
    MENORIGUAL      reduce using rule 51 (varfuncarr -> llamada .)
    ENTONCES        reduce using rule 51 (varfuncarr -> llamada .)
    FINFUNCION      reduce using rule 51 (varfuncarr -> llamada .)
    PARENTDER       reduce using rule 51 (varfuncarr -> llamada .)
    HACER           reduce using rule 51 (varfuncarr -> llamada .)
    CORCHETEDER     reduce using rule 51 (varfuncarr -> llamada .)
    COMA            reduce using rule 51 (varfuncarr -> llamada .)


state 93

    (60) arraycall -> CORCHETEIZQ . exp CORCHETEDER
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 115

state 94

    (54) llamada -> PARENTIZQ . llamada_param PARENTDER
    (55) llamada_param -> . expresion llamada_param_mult
    (59) llamada_param -> . empty
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (12) empty -> .
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTDER       reduce using rule 12 (empty -> .)
    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    llamada_param                  shift and go to state 116
    expresion                      shift and go to state 117
    empty                          shift and go to state 118
    exp                            shift and go to state 83

state 95

    (52) varfuncarr -> arraycall .

    MAS             reduce using rule 52 (varfuncarr -> arraycall .)
    MENOS           reduce using rule 52 (varfuncarr -> arraycall .)
    MULT            reduce using rule 52 (varfuncarr -> arraycall .)
    DIV             reduce using rule 52 (varfuncarr -> arraycall .)
    FINPRINCIPAL    reduce using rule 52 (varfuncarr -> arraycall .)
    ID              reduce using rule 52 (varfuncarr -> arraycall .)
    SI              reduce using rule 52 (varfuncarr -> arraycall .)
    MIENTRAS        reduce using rule 52 (varfuncarr -> arraycall .)
    PEDIRALUSUARIO  reduce using rule 52 (varfuncarr -> arraycall .)
    DECIRALUSUARIO  reduce using rule 52 (varfuncarr -> arraycall .)
    GIRARDERECHA    reduce using rule 52 (varfuncarr -> arraycall .)
    GIRARIZQUIERDA  reduce using rule 52 (varfuncarr -> arraycall .)
    MOVER           reduce using rule 52 (varfuncarr -> arraycall .)
    BORRAR          reduce using rule 52 (varfuncarr -> arraycall .)
    PINTAR          reduce using rule 52 (varfuncarr -> arraycall .)
    DESPINTAR       reduce using rule 52 (varfuncarr -> arraycall .)
    REGRESA         reduce using rule 52 (varfuncarr -> arraycall .)
    FINBLOQUE       reduce using rule 52 (varfuncarr -> arraycall .)
    PUNTOCOMA       reduce using rule 52 (varfuncarr -> arraycall .)
    MAYORQUE        reduce using rule 52 (varfuncarr -> arraycall .)
    MENORQUE        reduce using rule 52 (varfuncarr -> arraycall .)
    DIFERENTEQUE    reduce using rule 52 (varfuncarr -> arraycall .)
    IGUALQUE        reduce using rule 52 (varfuncarr -> arraycall .)
    MAYORIGUAL      reduce using rule 52 (varfuncarr -> arraycall .)
    MENORIGUAL      reduce using rule 52 (varfuncarr -> arraycall .)
    ENTONCES        reduce using rule 52 (varfuncarr -> arraycall .)
    FINFUNCION      reduce using rule 52 (varfuncarr -> arraycall .)
    PARENTDER       reduce using rule 52 (varfuncarr -> arraycall .)
    HACER           reduce using rule 52 (varfuncarr -> arraycall .)
    CORCHETEDER     reduce using rule 52 (varfuncarr -> arraycall .)
    COMA            reduce using rule 52 (varfuncarr -> arraycall .)


state 96

    (50) varfuncarr -> push_var_opd .

    MAS             reduce using rule 50 (varfuncarr -> push_var_opd .)
    MENOS           reduce using rule 50 (varfuncarr -> push_var_opd .)
    MULT            reduce using rule 50 (varfuncarr -> push_var_opd .)
    DIV             reduce using rule 50 (varfuncarr -> push_var_opd .)
    FINPRINCIPAL    reduce using rule 50 (varfuncarr -> push_var_opd .)
    ID              reduce using rule 50 (varfuncarr -> push_var_opd .)
    SI              reduce using rule 50 (varfuncarr -> push_var_opd .)
    MIENTRAS        reduce using rule 50 (varfuncarr -> push_var_opd .)
    PEDIRALUSUARIO  reduce using rule 50 (varfuncarr -> push_var_opd .)
    DECIRALUSUARIO  reduce using rule 50 (varfuncarr -> push_var_opd .)
    GIRARDERECHA    reduce using rule 50 (varfuncarr -> push_var_opd .)
    GIRARIZQUIERDA  reduce using rule 50 (varfuncarr -> push_var_opd .)
    MOVER           reduce using rule 50 (varfuncarr -> push_var_opd .)
    BORRAR          reduce using rule 50 (varfuncarr -> push_var_opd .)
    PINTAR          reduce using rule 50 (varfuncarr -> push_var_opd .)
    DESPINTAR       reduce using rule 50 (varfuncarr -> push_var_opd .)
    REGRESA         reduce using rule 50 (varfuncarr -> push_var_opd .)
    FINBLOQUE       reduce using rule 50 (varfuncarr -> push_var_opd .)
    PUNTOCOMA       reduce using rule 50 (varfuncarr -> push_var_opd .)
    MAYORQUE        reduce using rule 50 (varfuncarr -> push_var_opd .)
    MENORQUE        reduce using rule 50 (varfuncarr -> push_var_opd .)
    DIFERENTEQUE    reduce using rule 50 (varfuncarr -> push_var_opd .)
    IGUALQUE        reduce using rule 50 (varfuncarr -> push_var_opd .)
    MAYORIGUAL      reduce using rule 50 (varfuncarr -> push_var_opd .)
    MENORIGUAL      reduce using rule 50 (varfuncarr -> push_var_opd .)
    ENTONCES        reduce using rule 50 (varfuncarr -> push_var_opd .)
    FINFUNCION      reduce using rule 50 (varfuncarr -> push_var_opd .)
    PARENTDER       reduce using rule 50 (varfuncarr -> push_var_opd .)
    HACER           reduce using rule 50 (varfuncarr -> push_var_opd .)
    CORCHETEDER     reduce using rule 50 (varfuncarr -> push_var_opd .)
    COMA            reduce using rule 50 (varfuncarr -> push_var_opd .)


state 97

    (41) exp -> exp DIV . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 119
    empty                          shift and go to state 120

state 98

    (40) exp -> exp MULT . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 121
    empty                          shift and go to state 120

state 99

    (39) exp -> exp MENOS . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 122
    empty                          shift and go to state 120

state 100

    (38) exp -> exp MAS . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 123
    empty                          shift and go to state 120

state 101

    (70) ciclo -> MIENTRAS actCic1 expresion . actCic2 HACER bloque FINMIENTRAS actCic3
    (72) actCic2 -> . empty
    (12) empty -> .

    HACER           reduce using rule 12 (empty -> .)

    actCic2                        shift and go to state 124
    empty                          shift and go to state 125

state 102

    (62) actSi1 -> empty .

    ENTONCES        reduce using rule 62 (actSi1 -> empty .)


state 103

    (61) condicion -> SI expresion actSi1 . ENTONCES bloque actSi2 condicion_else actSi3 FINSI

    ENTONCES        shift and go to state 126


state 104

    (32) expresion -> exp MENORQUE . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 127
    empty                          shift and go to state 120

state 105

    (34) expresion -> exp IGUALQUE . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 128
    empty                          shift and go to state 120

state 106

    (35) expresion -> exp MAYORIGUAL . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 129
    empty                          shift and go to state 120

state 107

    (36) expresion -> exp MENORIGUAL . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 130
    empty                          shift and go to state 120

state 108

    (33) expresion -> exp DIFERENTEQUE . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 131
    empty                          shift and go to state 120

state 109

    (31) expresion -> exp MAYORQUE . push_opt exp
    (42) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    push_opt                       shift and go to state 132
    empty                          shift and go to state 120

state 110

    (30) asignacion -> ID IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 133


state 111

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .

    CREAR           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    REGRESA         reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    ID              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    SI              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MIENTRAS        reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MOVER           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    BORRAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PINTAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DESPINTAR       reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)


state 112

    (19) param_mult -> COMA tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 62
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    param_mult                     shift and go to state 134
    empty                          shift and go to state 63

state 113

    (22) finfunc -> C REGRESA expresion FINFUNCION .

    INICIOPRINCIPAL reduce using rule 22 (finfunc -> C REGRESA expresion FINFUNCION .)
    INICIOFUNCION   reduce using rule 22 (finfunc -> C REGRESA expresion FINFUNCION .)


state 114

    (37) exp -> PARENTIZQ expresion PARENTDER .

    MAS             reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MENOS           reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MULT            reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    DIV             reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    PUNTOCOMA       reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    ENTONCES        reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    FINFUNCION      reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    PARENTDER       reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    HACER           reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    COMA            reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    FINPRINCIPAL    reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    ID              reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    SI              reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MIENTRAS        reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    PEDIRALUSUARIO  reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    DECIRALUSUARIO  reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    GIRARDERECHA    reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    GIRARIZQUIERDA  reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MOVER           reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    BORRAR          reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    PINTAR          reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    DESPINTAR       reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    REGRESA         reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    FINBLOQUE       reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORQUE        reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORQUE        reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    DIFERENTEQUE    reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    IGUALQUE        reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORIGUAL      reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORIGUAL      reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)
    CORCHETEDER     reduce using rule 37 (exp -> PARENTIZQ expresion PARENTDER .)


state 115

    (60) arraycall -> CORCHETEIZQ exp . CORCHETEDER
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    CORCHETEDER     shift and go to state 135
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 116

    (54) llamada -> PARENTIZQ llamada_param . PARENTDER

    PARENTDER       shift and go to state 136


state 117

    (55) llamada_param -> expresion . llamada_param_mult
    (57) llamada_param_mult -> . llamada_param_mult COMA expresion
    (58) llamada_param_mult -> . empty
    (12) empty -> .

    COMA            reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)

    llamada_param_mult             shift and go to state 137
    empty                          shift and go to state 138

state 118

    (59) llamada_param -> empty .

    PARENTDER       reduce using rule 59 (llamada_param -> empty .)


state 119

    (41) exp -> exp DIV push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 139

state 120

    (42) push_opt -> empty .

    PARENTIZQ       reduce using rule 42 (push_opt -> empty .)
    MENOS           reduce using rule 42 (push_opt -> empty .)
    CTEENTERO       reduce using rule 42 (push_opt -> empty .)
    CTEFLOTANTE     reduce using rule 42 (push_opt -> empty .)
    TRUE            reduce using rule 42 (push_opt -> empty .)
    FALSE           reduce using rule 42 (push_opt -> empty .)
    CTETEXTO        reduce using rule 42 (push_opt -> empty .)
    ID              reduce using rule 42 (push_opt -> empty .)


state 121

    (40) exp -> exp MULT push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 140

state 122

    (39) exp -> exp MENOS push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 141

state 123

    (38) exp -> exp MAS push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 142

state 124

    (70) ciclo -> MIENTRAS actCic1 expresion actCic2 . HACER bloque FINMIENTRAS actCic3

    HACER           shift and go to state 143


state 125

    (72) actCic2 -> empty .

    HACER           reduce using rule 72 (actCic2 -> empty .)


state 126

    (61) condicion -> SI expresion actSi1 ENTONCES . bloque actSi2 condicion_else actSi3 FINSI
    (63) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 145

    bloque                         shift and go to state 144

state 127

    (32) expresion -> exp MENORQUE push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 146

state 128

    (34) expresion -> exp IGUALQUE push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 147

state 129

    (35) expresion -> exp MAYORIGUAL push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 148

state 130

    (36) expresion -> exp MENORIGUAL push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 149

state 131

    (33) expresion -> exp DIFERENTEQUE push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 150

state 132

    (31) expresion -> exp MAYORQUE push_opt . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    exp                            shift and go to state 151

state 133

    (30) asignacion -> ID IGUAL expresion PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    SI              reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    MIENTRAS        reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    MOVER           reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    BORRAR          reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    PINTAR          reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    DESPINTAR       reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    REGRESA         reduce using rule 30 (asignacion -> ID IGUAL expresion PUNTOCOMA .)


state 134

    (19) param_mult -> COMA tipo ID param_mult .

    CREAR           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    REGRESA         reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    ID              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    SI              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MIENTRAS        reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MOVER           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    BORRAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PINTAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DESPINTAR       reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)


state 135

    (60) arraycall -> CORCHETEIZQ exp CORCHETEDER .

    MAS             reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENOS           reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MULT            reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIV             reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    FINPRINCIPAL    reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    ID              reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    SI              reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MIENTRAS        reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PEDIRALUSUARIO  reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DECIRALUSUARIO  reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    GIRARDERECHA    reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    GIRARIZQUIERDA  reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MOVER           reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    BORRAR          reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PINTAR          reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DESPINTAR       reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    REGRESA         reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    FINBLOQUE       reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PUNTOCOMA       reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAYORQUE        reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORQUE        reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIFERENTEQUE    reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    IGUALQUE        reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAYORIGUAL      reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORIGUAL      reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    ENTONCES        reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    FINFUNCION      reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PARENTDER       reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    HACER           reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEDER     reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    COMA            reduce using rule 60 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)


state 136

    (54) llamada -> PARENTIZQ llamada_param PARENTDER .

    MAS             reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENOS           reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MULT            reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIV             reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    FINPRINCIPAL    reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    ID              reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    SI              reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MIENTRAS        reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PEDIRALUSUARIO  reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DECIRALUSUARIO  reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    GIRARDERECHA    reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    GIRARIZQUIERDA  reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MOVER           reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    BORRAR          reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PINTAR          reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DESPINTAR       reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    REGRESA         reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    FINBLOQUE       reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PUNTOCOMA       reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORQUE        reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORQUE        reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIFERENTEQUE    reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    IGUALQUE        reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORIGUAL      reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORIGUAL      reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    ENTONCES        reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    FINFUNCION      reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PARENTDER       reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    HACER           reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    CORCHETEDER     reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    COMA            reduce using rule 54 (llamada -> PARENTIZQ llamada_param PARENTDER .)


state 137

    (55) llamada_param -> expresion llamada_param_mult .
    (57) llamada_param_mult -> llamada_param_mult . COMA expresion

    PARENTDER       reduce using rule 55 (llamada_param -> expresion llamada_param_mult .)
    COMA            shift and go to state 152


state 138

    (58) llamada_param_mult -> empty .

    COMA            reduce using rule 58 (llamada_param_mult -> empty .)
    PARENTDER       reduce using rule 58 (llamada_param_mult -> empty .)


state 139

    (41) exp -> exp DIV push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MENOS           reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MULT            reduce using rule 41 (exp -> exp DIV push_opt exp .)
    DIV             reduce using rule 41 (exp -> exp DIV push_opt exp .)
    PUNTOCOMA       reduce using rule 41 (exp -> exp DIV push_opt exp .)
    ENTONCES        reduce using rule 41 (exp -> exp DIV push_opt exp .)
    FINFUNCION      reduce using rule 41 (exp -> exp DIV push_opt exp .)
    PARENTDER       reduce using rule 41 (exp -> exp DIV push_opt exp .)
    HACER           reduce using rule 41 (exp -> exp DIV push_opt exp .)
    COMA            reduce using rule 41 (exp -> exp DIV push_opt exp .)
    FINPRINCIPAL    reduce using rule 41 (exp -> exp DIV push_opt exp .)
    ID              reduce using rule 41 (exp -> exp DIV push_opt exp .)
    SI              reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MIENTRAS        reduce using rule 41 (exp -> exp DIV push_opt exp .)
    PEDIRALUSUARIO  reduce using rule 41 (exp -> exp DIV push_opt exp .)
    DECIRALUSUARIO  reduce using rule 41 (exp -> exp DIV push_opt exp .)
    GIRARDERECHA    reduce using rule 41 (exp -> exp DIV push_opt exp .)
    GIRARIZQUIERDA  reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MOVER           reduce using rule 41 (exp -> exp DIV push_opt exp .)
    BORRAR          reduce using rule 41 (exp -> exp DIV push_opt exp .)
    PINTAR          reduce using rule 41 (exp -> exp DIV push_opt exp .)
    DESPINTAR       reduce using rule 41 (exp -> exp DIV push_opt exp .)
    REGRESA         reduce using rule 41 (exp -> exp DIV push_opt exp .)
    FINBLOQUE       reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MAYORQUE        reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MENORQUE        reduce using rule 41 (exp -> exp DIV push_opt exp .)
    DIFERENTEQUE    reduce using rule 41 (exp -> exp DIV push_opt exp .)
    IGUALQUE        reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MAYORIGUAL      reduce using rule 41 (exp -> exp DIV push_opt exp .)
    MENORIGUAL      reduce using rule 41 (exp -> exp DIV push_opt exp .)
    CORCHETEDER     reduce using rule 41 (exp -> exp DIV push_opt exp .)

  ! MAS             [ shift and go to state 100 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 97 ]


state 140

    (40) exp -> exp MULT push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MENOS           reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MULT            reduce using rule 40 (exp -> exp MULT push_opt exp .)
    DIV             reduce using rule 40 (exp -> exp MULT push_opt exp .)
    PUNTOCOMA       reduce using rule 40 (exp -> exp MULT push_opt exp .)
    ENTONCES        reduce using rule 40 (exp -> exp MULT push_opt exp .)
    FINFUNCION      reduce using rule 40 (exp -> exp MULT push_opt exp .)
    PARENTDER       reduce using rule 40 (exp -> exp MULT push_opt exp .)
    HACER           reduce using rule 40 (exp -> exp MULT push_opt exp .)
    COMA            reduce using rule 40 (exp -> exp MULT push_opt exp .)
    FINPRINCIPAL    reduce using rule 40 (exp -> exp MULT push_opt exp .)
    ID              reduce using rule 40 (exp -> exp MULT push_opt exp .)
    SI              reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MIENTRAS        reduce using rule 40 (exp -> exp MULT push_opt exp .)
    PEDIRALUSUARIO  reduce using rule 40 (exp -> exp MULT push_opt exp .)
    DECIRALUSUARIO  reduce using rule 40 (exp -> exp MULT push_opt exp .)
    GIRARDERECHA    reduce using rule 40 (exp -> exp MULT push_opt exp .)
    GIRARIZQUIERDA  reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MOVER           reduce using rule 40 (exp -> exp MULT push_opt exp .)
    BORRAR          reduce using rule 40 (exp -> exp MULT push_opt exp .)
    PINTAR          reduce using rule 40 (exp -> exp MULT push_opt exp .)
    DESPINTAR       reduce using rule 40 (exp -> exp MULT push_opt exp .)
    REGRESA         reduce using rule 40 (exp -> exp MULT push_opt exp .)
    FINBLOQUE       reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MAYORQUE        reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MENORQUE        reduce using rule 40 (exp -> exp MULT push_opt exp .)
    DIFERENTEQUE    reduce using rule 40 (exp -> exp MULT push_opt exp .)
    IGUALQUE        reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MAYORIGUAL      reduce using rule 40 (exp -> exp MULT push_opt exp .)
    MENORIGUAL      reduce using rule 40 (exp -> exp MULT push_opt exp .)
    CORCHETEDER     reduce using rule 40 (exp -> exp MULT push_opt exp .)

  ! MAS             [ shift and go to state 100 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 98 ]
  ! DIV             [ shift and go to state 97 ]


state 141

    (39) exp -> exp MENOS push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MENOS           reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    PUNTOCOMA       reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    ENTONCES        reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    FINFUNCION      reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    PARENTDER       reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    HACER           reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    COMA            reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    FINPRINCIPAL    reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    ID              reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    SI              reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MIENTRAS        reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    PEDIRALUSUARIO  reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    DECIRALUSUARIO  reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    GIRARDERECHA    reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    GIRARIZQUIERDA  reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MOVER           reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    BORRAR          reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    PINTAR          reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    DESPINTAR       reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    REGRESA         reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    FINBLOQUE       reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MAYORQUE        reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MENORQUE        reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    DIFERENTEQUE    reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    IGUALQUE        reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MAYORIGUAL      reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MENORIGUAL      reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    CORCHETEDER     reduce using rule 39 (exp -> exp MENOS push_opt exp .)
    MULT            shift and go to state 98
    DIV             shift and go to state 97

  ! MULT            [ reduce using rule 39 (exp -> exp MENOS push_opt exp .) ]
  ! DIV             [ reduce using rule 39 (exp -> exp MENOS push_opt exp .) ]
  ! MAS             [ shift and go to state 100 ]
  ! MENOS           [ shift and go to state 99 ]


state 142

    (38) exp -> exp MAS push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MENOS           reduce using rule 38 (exp -> exp MAS push_opt exp .)
    PUNTOCOMA       reduce using rule 38 (exp -> exp MAS push_opt exp .)
    ENTONCES        reduce using rule 38 (exp -> exp MAS push_opt exp .)
    FINFUNCION      reduce using rule 38 (exp -> exp MAS push_opt exp .)
    PARENTDER       reduce using rule 38 (exp -> exp MAS push_opt exp .)
    HACER           reduce using rule 38 (exp -> exp MAS push_opt exp .)
    COMA            reduce using rule 38 (exp -> exp MAS push_opt exp .)
    FINPRINCIPAL    reduce using rule 38 (exp -> exp MAS push_opt exp .)
    ID              reduce using rule 38 (exp -> exp MAS push_opt exp .)
    SI              reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MIENTRAS        reduce using rule 38 (exp -> exp MAS push_opt exp .)
    PEDIRALUSUARIO  reduce using rule 38 (exp -> exp MAS push_opt exp .)
    DECIRALUSUARIO  reduce using rule 38 (exp -> exp MAS push_opt exp .)
    GIRARDERECHA    reduce using rule 38 (exp -> exp MAS push_opt exp .)
    GIRARIZQUIERDA  reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MOVER           reduce using rule 38 (exp -> exp MAS push_opt exp .)
    BORRAR          reduce using rule 38 (exp -> exp MAS push_opt exp .)
    PINTAR          reduce using rule 38 (exp -> exp MAS push_opt exp .)
    DESPINTAR       reduce using rule 38 (exp -> exp MAS push_opt exp .)
    REGRESA         reduce using rule 38 (exp -> exp MAS push_opt exp .)
    FINBLOQUE       reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MAYORQUE        reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MENORQUE        reduce using rule 38 (exp -> exp MAS push_opt exp .)
    DIFERENTEQUE    reduce using rule 38 (exp -> exp MAS push_opt exp .)
    IGUALQUE        reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MAYORIGUAL      reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MENORIGUAL      reduce using rule 38 (exp -> exp MAS push_opt exp .)
    CORCHETEDER     reduce using rule 38 (exp -> exp MAS push_opt exp .)
    MULT            shift and go to state 98
    DIV             shift and go to state 97

  ! MULT            [ reduce using rule 38 (exp -> exp MAS push_opt exp .) ]
  ! DIV             [ reduce using rule 38 (exp -> exp MAS push_opt exp .) ]
  ! MAS             [ shift and go to state 100 ]
  ! MENOS           [ shift and go to state 99 ]


state 143

    (70) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER . bloque FINMIENTRAS actCic3
    (63) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 145

    bloque                         shift and go to state 153

state 144

    (61) condicion -> SI expresion actSi1 ENTONCES bloque . actSi2 condicion_else actSi3 FINSI
    (66) actSi2 -> . empty
    (12) empty -> .

    SINO            reduce using rule 12 (empty -> .)
    FINSI           reduce using rule 12 (empty -> .)

    actSi2                         shift and go to state 155
    empty                          shift and go to state 154

state 145

    (63) bloque -> INICIOBLOQUE . bloque_estatuto_mult FINBLOQUE
    (64) bloque_estatuto_mult -> . bloque_estatuto_mult estatuto
    (65) bloque_estatuto_mult -> . empty
    (12) empty -> .

    FINBLOQUE       reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    bloque_estatuto_mult           shift and go to state 156
    empty                          shift and go to state 157

state 146

    (32) expresion -> exp MENORQUE push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    ENTONCES        reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    PARENTDER       reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    COMA            reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    HACER           reduce using rule 32 (expresion -> exp MENORQUE push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 147

    (34) expresion -> exp IGUALQUE push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    ENTONCES        reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    PARENTDER       reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    COMA            reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    HACER           reduce using rule 34 (expresion -> exp IGUALQUE push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 148

    (35) expresion -> exp MAYORIGUAL push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    PARENTDER       reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    COMA            reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    HACER           reduce using rule 35 (expresion -> exp MAYORIGUAL push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 149

    (36) expresion -> exp MENORIGUAL push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    PARENTDER       reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    COMA            reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    HACER           reduce using rule 36 (expresion -> exp MENORIGUAL push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 150

    (33) expresion -> exp DIFERENTEQUE push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    ENTONCES        reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    PARENTDER       reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    COMA            reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    HACER           reduce using rule 33 (expresion -> exp DIFERENTEQUE push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 151

    (31) expresion -> exp MAYORQUE push_opt exp .
    (38) exp -> exp . MAS push_opt exp
    (39) exp -> exp . MENOS push_opt exp
    (40) exp -> exp . MULT push_opt exp
    (41) exp -> exp . DIV push_opt exp

    FINFUNCION      reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    ENTONCES        reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    PARENTDER       reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    COMA            reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    HACER           reduce using rule 31 (expresion -> exp MAYORQUE push_opt exp .)
    MAS             shift and go to state 100
    MENOS           shift and go to state 99
    MULT            shift and go to state 98
    DIV             shift and go to state 97


state 152

    (57) llamada_param_mult -> llamada_param_mult COMA . expresion
    (31) expresion -> . exp MAYORQUE push_opt exp
    (32) expresion -> . exp MENORQUE push_opt exp
    (33) expresion -> . exp DIFERENTEQUE push_opt exp
    (34) expresion -> . exp IGUALQUE push_opt exp
    (35) expresion -> . exp MAYORIGUAL push_opt exp
    (36) expresion -> . exp MENORIGUAL push_opt exp
    (56) expresion -> . exp
    (37) exp -> . PARENTIZQ expresion PARENTDER
    (38) exp -> . exp MAS push_opt exp
    (39) exp -> . exp MENOS push_opt exp
    (40) exp -> . exp MULT push_opt exp
    (41) exp -> . exp DIV push_opt exp
    (43) exp -> . MENOS exp
    (44) exp -> . CTEENTERO
    (45) exp -> . CTEFLOTANTE
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . CTETEXTO
    (49) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 69
    MENOS           shift and go to state 68
    CTEENTERO       shift and go to state 66
    CTEFLOTANTE     shift and go to state 67
    TRUE            shift and go to state 73
    FALSE           shift and go to state 70
    CTETEXTO        shift and go to state 71
    ID              shift and go to state 72

    expresion                      shift and go to state 158
    exp                            shift and go to state 83

state 153

    (70) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque . FINMIENTRAS actCic3

    FINMIENTRAS     shift and go to state 159


state 154

    (66) actSi2 -> empty .

    SINO            reduce using rule 66 (actSi2 -> empty .)
    FINSI           reduce using rule 66 (actSi2 -> empty .)


state 155

    (61) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 . condicion_else actSi3 FINSI
    (67) condicion_else -> . SINO bloque
    (68) condicion_else -> . empty
    (12) empty -> .

    SINO            shift and go to state 160
    FINSI           reduce using rule 12 (empty -> .)

    condicion_else                 shift and go to state 162
    empty                          shift and go to state 161

state 156

    (63) bloque -> INICIOBLOQUE bloque_estatuto_mult . FINBLOQUE
    (64) bloque_estatuto_mult -> bloque_estatuto_mult . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (61) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (70) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (74) io -> . PEDIRALUSUARIO ID
    (75) io -> . DECIRALUSUARIO exp
    (76) accion -> . tipo_accion PUNTOCOMA
    (77) tipo_accion -> . objeto_con_exp
    (78) tipo_accion -> . objeto_sin_exp
    (79) objeto_con_exp -> . GIRARDERECHA exp
    (80) objeto_con_exp -> . GIRARIZQUIERDA exp
    (81) objeto_con_exp -> . MOVER exp
    (82) objeto_sin_exp -> . BORRAR
    (83) objeto_sin_exp -> . PINTAR
    (84) objeto_sin_exp -> . DESPINTAR

    FINBLOQUE       shift and go to state 164
    ID              shift and go to state 60
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 43
    PEDIRALUSUARIO  shift and go to state 52
    DECIRALUSUARIO  shift and go to state 40
    GIRARDERECHA    shift and go to state 49
    GIRARIZQUIERDA  shift and go to state 44
    MOVER           shift and go to state 45
    BORRAR          shift and go to state 57
    PINTAR          shift and go to state 50
    DESPINTAR       shift and go to state 59

    asignacion                     shift and go to state 51
    estatuto                       shift and go to state 163
    objeto_con_exp                 shift and go to state 42
    objeto_sin_exp                 shift and go to state 53
    condicion                      shift and go to state 54
    tipo_accion                    shift and go to state 41
    io                             shift and go to state 46
    accion                         shift and go to state 48
    ciclo                          shift and go to state 58

state 157

    (65) bloque_estatuto_mult -> empty .

    FINBLOQUE       reduce using rule 65 (bloque_estatuto_mult -> empty .)
    ID              reduce using rule 65 (bloque_estatuto_mult -> empty .)
    SI              reduce using rule 65 (bloque_estatuto_mult -> empty .)
    MIENTRAS        reduce using rule 65 (bloque_estatuto_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 65 (bloque_estatuto_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 65 (bloque_estatuto_mult -> empty .)
    GIRARDERECHA    reduce using rule 65 (bloque_estatuto_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 65 (bloque_estatuto_mult -> empty .)
    MOVER           reduce using rule 65 (bloque_estatuto_mult -> empty .)
    BORRAR          reduce using rule 65 (bloque_estatuto_mult -> empty .)
    PINTAR          reduce using rule 65 (bloque_estatuto_mult -> empty .)
    DESPINTAR       reduce using rule 65 (bloque_estatuto_mult -> empty .)


state 158

    (57) llamada_param_mult -> llamada_param_mult COMA expresion .

    COMA            reduce using rule 57 (llamada_param_mult -> llamada_param_mult COMA expresion .)
    PARENTDER       reduce using rule 57 (llamada_param_mult -> llamada_param_mult COMA expresion .)


state 159

    (70) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS . actCic3
    (73) actCic3 -> . empty
    (12) empty -> .

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    FINBLOQUE       reduce using rule 12 (empty -> .)

    actCic3                        shift and go to state 165
    empty                          shift and go to state 166

state 160

    (67) condicion_else -> SINO . bloque
    (63) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 145

    bloque                         shift and go to state 167

state 161

    (68) condicion_else -> empty .

    FINSI           reduce using rule 68 (condicion_else -> empty .)


state 162

    (61) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else . actSi3 FINSI
    (69) actSi3 -> . empty
    (12) empty -> .

    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    actSi3                         shift and go to state 169

state 163

    (64) bloque_estatuto_mult -> bloque_estatuto_mult estatuto .

    FINBLOQUE       reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    ID              reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    SI              reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MIENTRAS        reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PEDIRALUSUARIO  reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DECIRALUSUARIO  reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARDERECHA    reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARIZQUIERDA  reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MOVER           reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    BORRAR          reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PINTAR          reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DESPINTAR       reduce using rule 64 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)


state 164

    (63) bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .

    FINSI           reduce using rule 63 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    FINMIENTRAS     reduce using rule 63 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    SINO            reduce using rule 63 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)


state 165

    (70) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .

    FINPRINCIPAL    reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    ID              reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    SI              reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MIENTRAS        reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PEDIRALUSUARIO  reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DECIRALUSUARIO  reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARDERECHA    reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARIZQUIERDA  reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MOVER           reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    BORRAR          reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PINTAR          reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DESPINTAR       reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    FINBLOQUE       reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    REGRESA         reduce using rule 70 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)


state 166

    (73) actCic3 -> empty .

    FINPRINCIPAL    reduce using rule 73 (actCic3 -> empty .)
    ID              reduce using rule 73 (actCic3 -> empty .)
    SI              reduce using rule 73 (actCic3 -> empty .)
    MIENTRAS        reduce using rule 73 (actCic3 -> empty .)
    PEDIRALUSUARIO  reduce using rule 73 (actCic3 -> empty .)
    DECIRALUSUARIO  reduce using rule 73 (actCic3 -> empty .)
    GIRARDERECHA    reduce using rule 73 (actCic3 -> empty .)
    GIRARIZQUIERDA  reduce using rule 73 (actCic3 -> empty .)
    MOVER           reduce using rule 73 (actCic3 -> empty .)
    BORRAR          reduce using rule 73 (actCic3 -> empty .)
    PINTAR          reduce using rule 73 (actCic3 -> empty .)
    DESPINTAR       reduce using rule 73 (actCic3 -> empty .)
    REGRESA         reduce using rule 73 (actCic3 -> empty .)
    FINBLOQUE       reduce using rule 73 (actCic3 -> empty .)


state 167

    (67) condicion_else -> SINO bloque .

    FINSI           reduce using rule 67 (condicion_else -> SINO bloque .)


state 168

    (69) actSi3 -> empty .

    FINSI           reduce using rule 69 (actSi3 -> empty .)


state 169

    (61) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 . FINSI

    FINSI           shift and go to state 170


state 170

    (61) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .

    FINPRINCIPAL    reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    ID              reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    SI              reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MIENTRAS        reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PEDIRALUSUARIO  reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DECIRALUSUARIO  reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARDERECHA    reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARIZQUIERDA  reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MOVER           reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    BORRAR          reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PINTAR          reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DESPINTAR       reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    REGRESA         reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    FINBLOQUE       reduce using rule 61 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)

