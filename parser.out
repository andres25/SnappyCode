Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LISTA

Grammar

Rule 0     S' -> program
Rule 1     program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA
Rule 2     vars -> vars tipo_var
Rule 3     tipo_var -> single
Rule 4     tipo_var -> array
Rule 5     single -> CREAR tipo ID PUNTOCOMA
Rule 6     array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
Rule 7     tipo -> ENTERO
Rule 8     tipo -> FLOTANTE
Rule 9     tipo -> TEXTO
Rule 10    tipo -> BOOLEANO
Rule 11    vars -> empty
Rule 12    empty -> <empty>
Rule 13    cuerpo -> cuerpo_func principal
Rule 14    cuerpo_func -> cuerpo_func funcion
Rule 15    cuerpo_func -> empty
Rule 16    funcion -> iniciofunc param vars finfunc
Rule 17    iniciofunc -> INICIOFUNCION tipo ID
Rule 18    param -> PARAMETROS tipo ID param_mult
Rule 19    param_mult -> COMA tipo ID param_mult
Rule 20    param_mult -> empty
Rule 21    param -> empty
Rule 22    finfunc -> C return FINFUNCION
Rule 23    C -> C estatuto
Rule 24    C -> empty
Rule 25    estatuto -> asignacion
Rule 26    estatuto -> condicion
Rule 27    estatuto -> ciclo
Rule 28    estatuto -> io
Rule 29    estatuto -> accion
Rule 30    estatuto -> llamada_sin_ret
Rule 31    estatuto -> return
Rule 32    asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA
Rule 33    asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER
Rule 34    asignacion_arreglo -> empty
Rule 35    expresion -> exp MAYORQUE push_opt exp
Rule 36    expresion -> exp MENORQUE push_opt exp
Rule 37    expresion -> exp DIFERENTEQUE push_opt exp
Rule 38    expresion -> exp IGUALQUE push_opt exp
Rule 39    expresion -> exp MAYORIGUAL push_opt exp
Rule 40    expresion -> exp MENORIGUAL push_opt exp
Rule 41    exp -> PARENTIZQ expresion PARENTDER
Rule 42    exp -> exp MAS push_opt exp
Rule 43    exp -> exp MENOS push_opt exp
Rule 44    exp -> exp MULT push_opt exp
Rule 45    exp -> exp DIV push_opt exp
Rule 46    push_opt -> empty
Rule 47    exp -> MENOS exp
Rule 48    exp -> CTEENTERO
Rule 49    exp -> CTEFLOTANTE
Rule 50    exp -> TRUE
Rule 51    exp -> FALSE
Rule 52    exp -> CTETEXTO
Rule 53    exp -> ID varfuncarr
Rule 54    varfuncarr -> push_var_opd
Rule 55    varfuncarr -> llamada
Rule 56    varfuncarr -> arraycall
Rule 57    push_var_opd -> empty
Rule 58    llamada -> PARENTIZQ llamada_param PARENTDER
Rule 59    llamada_param -> expresion llamada_param_mult
Rule 60    expresion -> exp
Rule 61    llamada_param_mult -> llamada_param_mult COMA expresion
Rule 62    llamada_param_mult -> empty
Rule 63    llamada_param -> empty
Rule 64    arraycall -> CORCHETEIZQ exp CORCHETEDER
Rule 65    condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
Rule 66    actSi1 -> empty
Rule 67    bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE
Rule 68    bloque_estatuto_mult -> bloque_estatuto_mult estatuto
Rule 69    bloque_estatuto_mult -> empty
Rule 70    actSi2 -> empty
Rule 71    condicion_else -> SINO bloque
Rule 72    condicion_else -> empty
Rule 73    actSi3 -> empty
Rule 74    ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
Rule 75    actCic1 -> empty
Rule 76    actCic2 -> empty
Rule 77    actCic3 -> empty
Rule 78    io -> DECIRALUSUARIO exp PUNTOCOMA
Rule 79    io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
Rule 80    accion -> tipo_accion PUNTOCOMA
Rule 81    tipo_accion -> objeto_con_exp
Rule 82    tipo_accion -> objeto_sin_exp
Rule 83    objeto_con_exp -> GIRARDERECHA exp
Rule 84    objeto_con_exp -> GIRARIZQUIERDA exp
Rule 85    objeto_con_exp -> MOVER exp
Rule 86    objeto_sin_exp -> BORRAR
Rule 87    objeto_sin_exp -> PINTAR
Rule 88    objeto_sin_exp -> DESPINTAR
Rule 89    llamada_sin_ret -> ID llamada PUNTOCOMA
Rule 90    return -> REGRESA expresion PUNTOCOMA
Rule 91    principal -> iniciomain vars C FINPRINCIPAL
Rule 92    iniciomain -> INICIOPRINCIPAL

Terminals, with rules where they appear

BOOLEANO             : 10
BORRAR               : 86
COMA                 : 19 61
CORCHETEDER          : 6 33 64
CORCHETEIZQ          : 6 33 64
CREAR                : 5 6
CTEENTERO            : 6 48
CTEFLOTANTE          : 49
CTETEXTO             : 52
DECIRALUSUARIO       : 78
DESPINTAR            : 88
DIFERENTEQUE         : 37
DIV                  : 45
ENTERO               : 7
ENTONCES             : 65
FALSE                : 51
FINBLOQUE            : 67
FINFUNCION           : 22
FINMIENTRAS          : 74
FINPRINCIPAL         : 91
FINPROGRAMA          : 1
FINSI                : 65
FLOTANTE             : 8
GIRARDERECHA         : 83
GIRARIZQUIERDA       : 84
HACER                : 74
ID                   : 5 6 17 18 19 32 53 79 89
IGUAL                : 32
IGUALQUE             : 38
INICIOBLOQUE         : 67
INICIOFUNCION        : 17
INICIOPRINCIPAL      : 92
INICIOPROGRAMA       : 1
LISTA                : 
MAS                  : 42
MAYORIGUAL           : 39
MAYORQUE             : 35
MENORIGUAL           : 40
MENORQUE             : 36
MENOS                : 43 47
MIENTRAS             : 74
MOVER                : 85
MULT                 : 44
PARAMETROS           : 18
PARENTDER            : 41 58 79
PARENTIZQ            : 41 58 79
PEDIRALUSUARIO       : 79
PINTAR               : 87
PUNTOCOMA            : 5 6 32 78 79 80 89 90
REGRESA              : 90
SI                   : 65
SINO                 : 71
TEXTO                : 9
TRUE                 : 50
error                : 

Nonterminals, with rules where they appear

C                    : 22 23 91
accion               : 29
actCic1              : 74
actCic2              : 74
actCic3              : 74
actSi1               : 65
actSi2               : 65
actSi3               : 65
array                : 4
arraycall            : 56
asignacion           : 25
asignacion_arreglo   : 32 79
bloque               : 65 71 74
bloque_estatuto_mult : 67 68
ciclo                : 27
condicion            : 26
condicion_else       : 65
cuerpo               : 1
cuerpo_func          : 13 14
empty                : 11 15 20 21 24 34 46 57 62 63 66 69 70 72 73 75 76 77
estatuto             : 23 68
exp                  : 33 35 35 36 36 37 37 38 38 39 39 40 40 42 42 43 43 44 44 45 45 47 60 64 78 83 84 85
expresion            : 32 41 59 61 65 74 90
finfunc              : 16
funcion              : 14
iniciofunc           : 16
iniciomain           : 91
io                   : 28
llamada              : 55 89
llamada_param        : 58
llamada_param_mult   : 59 61
llamada_sin_ret      : 30
objeto_con_exp       : 81
objeto_sin_exp       : 82
param                : 16
param_mult           : 18 19
principal            : 13
program              : 0
push_opt             : 35 36 37 38 39 40 42 43 44 45
push_var_opd         : 54
return               : 22 31
single               : 3
tipo                 : 5 6 17 18 19
tipo_accion          : 80
tipo_var             : 2
varfuncarr           : 53
vars                 : 1 2 16 91

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INICIOPROGRAMA vars cuerpo FINPROGRAMA

    INICIOPROGRAMA  shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INICIOPROGRAMA . vars cuerpo FINPROGRAMA
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    vars                           shift and go to state 4
    empty                          shift and go to state 3

state 3

    (11) vars -> empty .

    CREAR           reduce using rule 11 (vars -> empty .)
    INICIOPRINCIPAL reduce using rule 11 (vars -> empty .)
    INICIOFUNCION   reduce using rule 11 (vars -> empty .)
    FINPRINCIPAL    reduce using rule 11 (vars -> empty .)
    ID              reduce using rule 11 (vars -> empty .)
    SI              reduce using rule 11 (vars -> empty .)
    MIENTRAS        reduce using rule 11 (vars -> empty .)
    DECIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    PEDIRALUSUARIO  reduce using rule 11 (vars -> empty .)
    REGRESA         reduce using rule 11 (vars -> empty .)
    GIRARDERECHA    reduce using rule 11 (vars -> empty .)
    GIRARIZQUIERDA  reduce using rule 11 (vars -> empty .)
    MOVER           reduce using rule 11 (vars -> empty .)
    BORRAR          reduce using rule 11 (vars -> empty .)
    PINTAR          reduce using rule 11 (vars -> empty .)
    DESPINTAR       reduce using rule 11 (vars -> empty .)


state 4

    (1) program -> INICIOPROGRAMA vars . cuerpo FINPROGRAMA
    (2) vars -> vars . tipo_var
    (13) cuerpo -> . cuerpo_func principal
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (14) cuerpo_func -> . cuerpo_func funcion
    (15) cuerpo_func -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 5
    INICIOPRINCIPAL reduce using rule 12 (empty -> .)
    INICIOFUNCION   reduce using rule 12 (empty -> .)

    single                         shift and go to state 8
    tipo_var                       shift and go to state 9
    cuerpo                         shift and go to state 11
    array                          shift and go to state 10
    cuerpo_func                    shift and go to state 6
    empty                          shift and go to state 7

state 5

    (5) single -> CREAR . tipo ID PUNTOCOMA
    (6) array -> CREAR . tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 12
    FLOTANTE        shift and go to state 16
    TEXTO           shift and go to state 14
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 13

state 6

    (13) cuerpo -> cuerpo_func . principal
    (14) cuerpo_func -> cuerpo_func . funcion
    (91) principal -> . iniciomain vars C FINPRINCIPAL
    (16) funcion -> . iniciofunc param vars finfunc
    (92) iniciomain -> . INICIOPRINCIPAL
    (17) iniciofunc -> . INICIOFUNCION tipo ID

    INICIOPRINCIPAL shift and go to state 19
    INICIOFUNCION   shift and go to state 17

    principal                      shift and go to state 18
    iniciomain                     shift and go to state 21
    iniciofunc                     shift and go to state 20
    funcion                        shift and go to state 22

state 7

    (15) cuerpo_func -> empty .

    INICIOPRINCIPAL reduce using rule 15 (cuerpo_func -> empty .)
    INICIOFUNCION   reduce using rule 15 (cuerpo_func -> empty .)


state 8

    (3) tipo_var -> single .

    CREAR           reduce using rule 3 (tipo_var -> single .)
    INICIOPRINCIPAL reduce using rule 3 (tipo_var -> single .)
    INICIOFUNCION   reduce using rule 3 (tipo_var -> single .)
    FINPRINCIPAL    reduce using rule 3 (tipo_var -> single .)
    ID              reduce using rule 3 (tipo_var -> single .)
    SI              reduce using rule 3 (tipo_var -> single .)
    MIENTRAS        reduce using rule 3 (tipo_var -> single .)
    DECIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    PEDIRALUSUARIO  reduce using rule 3 (tipo_var -> single .)
    REGRESA         reduce using rule 3 (tipo_var -> single .)
    GIRARDERECHA    reduce using rule 3 (tipo_var -> single .)
    GIRARIZQUIERDA  reduce using rule 3 (tipo_var -> single .)
    MOVER           reduce using rule 3 (tipo_var -> single .)
    BORRAR          reduce using rule 3 (tipo_var -> single .)
    PINTAR          reduce using rule 3 (tipo_var -> single .)
    DESPINTAR       reduce using rule 3 (tipo_var -> single .)


state 9

    (2) vars -> vars tipo_var .

    CREAR           reduce using rule 2 (vars -> vars tipo_var .)
    INICIOPRINCIPAL reduce using rule 2 (vars -> vars tipo_var .)
    INICIOFUNCION   reduce using rule 2 (vars -> vars tipo_var .)
    FINPRINCIPAL    reduce using rule 2 (vars -> vars tipo_var .)
    ID              reduce using rule 2 (vars -> vars tipo_var .)
    SI              reduce using rule 2 (vars -> vars tipo_var .)
    MIENTRAS        reduce using rule 2 (vars -> vars tipo_var .)
    DECIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    PEDIRALUSUARIO  reduce using rule 2 (vars -> vars tipo_var .)
    REGRESA         reduce using rule 2 (vars -> vars tipo_var .)
    GIRARDERECHA    reduce using rule 2 (vars -> vars tipo_var .)
    GIRARIZQUIERDA  reduce using rule 2 (vars -> vars tipo_var .)
    MOVER           reduce using rule 2 (vars -> vars tipo_var .)
    BORRAR          reduce using rule 2 (vars -> vars tipo_var .)
    PINTAR          reduce using rule 2 (vars -> vars tipo_var .)
    DESPINTAR       reduce using rule 2 (vars -> vars tipo_var .)


state 10

    (4) tipo_var -> array .

    CREAR           reduce using rule 4 (tipo_var -> array .)
    INICIOPRINCIPAL reduce using rule 4 (tipo_var -> array .)
    INICIOFUNCION   reduce using rule 4 (tipo_var -> array .)
    FINPRINCIPAL    reduce using rule 4 (tipo_var -> array .)
    ID              reduce using rule 4 (tipo_var -> array .)
    SI              reduce using rule 4 (tipo_var -> array .)
    MIENTRAS        reduce using rule 4 (tipo_var -> array .)
    DECIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    PEDIRALUSUARIO  reduce using rule 4 (tipo_var -> array .)
    REGRESA         reduce using rule 4 (tipo_var -> array .)
    GIRARDERECHA    reduce using rule 4 (tipo_var -> array .)
    GIRARIZQUIERDA  reduce using rule 4 (tipo_var -> array .)
    MOVER           reduce using rule 4 (tipo_var -> array .)
    BORRAR          reduce using rule 4 (tipo_var -> array .)
    PINTAR          reduce using rule 4 (tipo_var -> array .)
    DESPINTAR       reduce using rule 4 (tipo_var -> array .)


state 11

    (1) program -> INICIOPROGRAMA vars cuerpo . FINPROGRAMA

    FINPROGRAMA     shift and go to state 23


state 12

    (7) tipo -> ENTERO .

    ID              reduce using rule 7 (tipo -> ENTERO .)


state 13

    (5) single -> CREAR tipo . ID PUNTOCOMA
    (6) array -> CREAR tipo . ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    ID              shift and go to state 24


state 14

    (9) tipo -> TEXTO .

    ID              reduce using rule 9 (tipo -> TEXTO .)


state 15

    (10) tipo -> BOOLEANO .

    ID              reduce using rule 10 (tipo -> BOOLEANO .)


state 16

    (8) tipo -> FLOTANTE .

    ID              reduce using rule 8 (tipo -> FLOTANTE .)


state 17

    (17) iniciofunc -> INICIOFUNCION . tipo ID
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 12
    FLOTANTE        shift and go to state 16
    TEXTO           shift and go to state 14
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 25

state 18

    (13) cuerpo -> cuerpo_func principal .

    FINPROGRAMA     reduce using rule 13 (cuerpo -> cuerpo_func principal .)


state 19

    (92) iniciomain -> INICIOPRINCIPAL .

    CREAR           reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    FINPRINCIPAL    reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    ID              reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    SI              reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    MIENTRAS        reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    DECIRALUSUARIO  reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    PEDIRALUSUARIO  reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    REGRESA         reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    GIRARDERECHA    reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    GIRARIZQUIERDA  reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    MOVER           reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    BORRAR          reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    PINTAR          reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)
    DESPINTAR       reduce using rule 92 (iniciomain -> INICIOPRINCIPAL .)


state 20

    (16) funcion -> iniciofunc . param vars finfunc
    (18) param -> . PARAMETROS tipo ID param_mult
    (21) param -> . empty
    (12) empty -> .

    PARAMETROS      shift and go to state 28
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    param                          shift and go to state 26
    empty                          shift and go to state 27

state 21

    (91) principal -> iniciomain . vars C FINPRINCIPAL
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    vars                           shift and go to state 29
    empty                          shift and go to state 3

state 22

    (14) cuerpo_func -> cuerpo_func funcion .

    INICIOPRINCIPAL reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)
    INICIOFUNCION   reduce using rule 14 (cuerpo_func -> cuerpo_func funcion .)


state 23

    (1) program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .

    $end            reduce using rule 1 (program -> INICIOPROGRAMA vars cuerpo FINPROGRAMA .)


state 24

    (5) single -> CREAR tipo ID . PUNTOCOMA
    (6) array -> CREAR tipo ID . CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 30
    CORCHETEIZQ     shift and go to state 31


state 25

    (17) iniciofunc -> INICIOFUNCION tipo . ID

    ID              shift and go to state 32


state 26

    (16) funcion -> iniciofunc param . vars finfunc
    (2) vars -> . vars tipo_var
    (11) vars -> . empty
    (12) empty -> .

    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    vars                           shift and go to state 33
    empty                          shift and go to state 3

state 27

    (21) param -> empty .

    CREAR           reduce using rule 21 (param -> empty .)
    REGRESA         reduce using rule 21 (param -> empty .)
    ID              reduce using rule 21 (param -> empty .)
    SI              reduce using rule 21 (param -> empty .)
    MIENTRAS        reduce using rule 21 (param -> empty .)
    DECIRALUSUARIO  reduce using rule 21 (param -> empty .)
    PEDIRALUSUARIO  reduce using rule 21 (param -> empty .)
    GIRARDERECHA    reduce using rule 21 (param -> empty .)
    GIRARIZQUIERDA  reduce using rule 21 (param -> empty .)
    MOVER           reduce using rule 21 (param -> empty .)
    BORRAR          reduce using rule 21 (param -> empty .)
    PINTAR          reduce using rule 21 (param -> empty .)
    DESPINTAR       reduce using rule 21 (param -> empty .)


state 28

    (18) param -> PARAMETROS . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 12
    FLOTANTE        shift and go to state 16
    TEXTO           shift and go to state 14
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 34

state 29

    (91) principal -> iniciomain vars . C FINPRINCIPAL
    (2) vars -> vars . tipo_var
    (23) C -> . C estatuto
    (24) C -> . empty
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (12) empty -> .
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    CREAR           shift and go to state 5

    empty                          shift and go to state 35
    C                              shift and go to state 36
    single                         shift and go to state 8
    tipo_var                       shift and go to state 9
    array                          shift and go to state 10

state 30

    (5) single -> CREAR tipo ID PUNTOCOMA .

    CREAR           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    REGRESA         reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    ID              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    SI              reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MIENTRAS        reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    MOVER           reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    BORRAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    PINTAR          reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    DESPINTAR       reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 5 (single -> CREAR tipo ID PUNTOCOMA .)


state 31

    (6) array -> CREAR tipo ID CORCHETEIZQ . CTEENTERO CORCHETEDER PUNTOCOMA

    CTEENTERO       shift and go to state 37


state 32

    (17) iniciofunc -> INICIOFUNCION tipo ID .

    PARAMETROS      reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    CREAR           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    REGRESA         reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    ID              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    SI              reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MIENTRAS        reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DECIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PEDIRALUSUARIO  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARDERECHA    reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    GIRARIZQUIERDA  reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    MOVER           reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    BORRAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    PINTAR          reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)
    DESPINTAR       reduce using rule 17 (iniciofunc -> INICIOFUNCION tipo ID .)


state 33

    (16) funcion -> iniciofunc param vars . finfunc
    (2) vars -> vars . tipo_var
    (22) finfunc -> . C return FINFUNCION
    (3) tipo_var -> . single
    (4) tipo_var -> . array
    (23) C -> . C estatuto
    (24) C -> . empty
    (5) single -> . CREAR tipo ID PUNTOCOMA
    (6) array -> . CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA
    (12) empty -> .

    CREAR           shift and go to state 5
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    finfunc                        shift and go to state 38
    empty                          shift and go to state 35
    C                              shift and go to state 39
    single                         shift and go to state 8
    tipo_var                       shift and go to state 9
    array                          shift and go to state 10

state 34

    (18) param -> PARAMETROS tipo . ID param_mult

    ID              shift and go to state 40


state 35

    (24) C -> empty .

    FINPRINCIPAL    reduce using rule 24 (C -> empty .)
    ID              reduce using rule 24 (C -> empty .)
    SI              reduce using rule 24 (C -> empty .)
    MIENTRAS        reduce using rule 24 (C -> empty .)
    DECIRALUSUARIO  reduce using rule 24 (C -> empty .)
    PEDIRALUSUARIO  reduce using rule 24 (C -> empty .)
    REGRESA         reduce using rule 24 (C -> empty .)
    GIRARDERECHA    reduce using rule 24 (C -> empty .)
    GIRARIZQUIERDA  reduce using rule 24 (C -> empty .)
    MOVER           reduce using rule 24 (C -> empty .)
    BORRAR          reduce using rule 24 (C -> empty .)
    PINTAR          reduce using rule 24 (C -> empty .)
    DESPINTAR       reduce using rule 24 (C -> empty .)


state 36

    (91) principal -> iniciomain vars C . FINPRINCIPAL
    (23) C -> C . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) estatuto -> . return
    (32) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (65) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (74) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (78) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (79) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (80) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (90) return -> . REGRESA expresion PUNTOCOMA
    (81) tipo_accion -> . objeto_con_exp
    (82) tipo_accion -> . objeto_sin_exp
    (83) objeto_con_exp -> . GIRARDERECHA exp
    (84) objeto_con_exp -> . GIRARIZQUIERDA exp
    (85) objeto_con_exp -> . MOVER exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    FINPRINCIPAL    shift and go to state 46
    ID              shift and go to state 55
    SI              shift and go to state 45
    MIENTRAS        shift and go to state 62
    DECIRALUSUARIO  shift and go to state 57
    PEDIRALUSUARIO  shift and go to state 51
    REGRESA         shift and go to state 50
    GIRARDERECHA    shift and go to state 47
    GIRARIZQUIERDA  shift and go to state 48
    MOVER           shift and go to state 59
    BORRAR          shift and go to state 56
    PINTAR          shift and go to state 58
    DESPINTAR       shift and go to state 49

    objeto_con_exp                 shift and go to state 44
    accion                         shift and go to state 41
    ciclo                          shift and go to state 42
    condicion                      shift and go to state 54
    objeto_sin_exp                 shift and go to state 64
    tipo_accion                    shift and go to state 43
    llamada_sin_ret                shift and go to state 61
    return                         shift and go to state 60
    io                             shift and go to state 63
    asignacion                     shift and go to state 52
    estatuto                       shift and go to state 53

state 37

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 65


state 38

    (16) funcion -> iniciofunc param vars finfunc .

    INICIOPRINCIPAL reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)
    INICIOFUNCION   reduce using rule 16 (funcion -> iniciofunc param vars finfunc .)


state 39

    (22) finfunc -> C . return FINFUNCION
    (23) C -> C . estatuto
    (90) return -> . REGRESA expresion PUNTOCOMA
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) estatuto -> . return
    (32) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (65) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (74) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (78) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (79) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (80) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (81) tipo_accion -> . objeto_con_exp
    (82) tipo_accion -> . objeto_sin_exp
    (83) objeto_con_exp -> . GIRARDERECHA exp
    (84) objeto_con_exp -> . GIRARIZQUIERDA exp
    (85) objeto_con_exp -> . MOVER exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    REGRESA         shift and go to state 50
    ID              shift and go to state 55
    SI              shift and go to state 45
    MIENTRAS        shift and go to state 62
    DECIRALUSUARIO  shift and go to state 57
    PEDIRALUSUARIO  shift and go to state 51
    GIRARDERECHA    shift and go to state 47
    GIRARIZQUIERDA  shift and go to state 48
    MOVER           shift and go to state 59
    BORRAR          shift and go to state 56
    PINTAR          shift and go to state 58
    DESPINTAR       shift and go to state 49

    accion                         shift and go to state 41
    ciclo                          shift and go to state 42
    asignacion                     shift and go to state 52
    objeto_sin_exp                 shift and go to state 64
    tipo_accion                    shift and go to state 43
    llamada_sin_ret                shift and go to state 61
    objeto_con_exp                 shift and go to state 44
    return                         shift and go to state 66
    io                             shift and go to state 63
    condicion                      shift and go to state 54
    estatuto                       shift and go to state 53

state 40

    (18) param -> PARAMETROS tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 68
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 67
    param_mult                     shift and go to state 69

state 41

    (29) estatuto -> accion .

    FINBLOQUE       reduce using rule 29 (estatuto -> accion .)
    ID              reduce using rule 29 (estatuto -> accion .)
    SI              reduce using rule 29 (estatuto -> accion .)
    MIENTRAS        reduce using rule 29 (estatuto -> accion .)
    DECIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    PEDIRALUSUARIO  reduce using rule 29 (estatuto -> accion .)
    REGRESA         reduce using rule 29 (estatuto -> accion .)
    GIRARDERECHA    reduce using rule 29 (estatuto -> accion .)
    GIRARIZQUIERDA  reduce using rule 29 (estatuto -> accion .)
    MOVER           reduce using rule 29 (estatuto -> accion .)
    BORRAR          reduce using rule 29 (estatuto -> accion .)
    PINTAR          reduce using rule 29 (estatuto -> accion .)
    DESPINTAR       reduce using rule 29 (estatuto -> accion .)
    FINPRINCIPAL    reduce using rule 29 (estatuto -> accion .)


state 42

    (27) estatuto -> ciclo .

    FINBLOQUE       reduce using rule 27 (estatuto -> ciclo .)
    ID              reduce using rule 27 (estatuto -> ciclo .)
    SI              reduce using rule 27 (estatuto -> ciclo .)
    MIENTRAS        reduce using rule 27 (estatuto -> ciclo .)
    DECIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    PEDIRALUSUARIO  reduce using rule 27 (estatuto -> ciclo .)
    REGRESA         reduce using rule 27 (estatuto -> ciclo .)
    GIRARDERECHA    reduce using rule 27 (estatuto -> ciclo .)
    GIRARIZQUIERDA  reduce using rule 27 (estatuto -> ciclo .)
    MOVER           reduce using rule 27 (estatuto -> ciclo .)
    BORRAR          reduce using rule 27 (estatuto -> ciclo .)
    PINTAR          reduce using rule 27 (estatuto -> ciclo .)
    DESPINTAR       reduce using rule 27 (estatuto -> ciclo .)
    FINPRINCIPAL    reduce using rule 27 (estatuto -> ciclo .)


state 43

    (80) accion -> tipo_accion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 70


state 44

    (81) tipo_accion -> objeto_con_exp .

    PUNTOCOMA       reduce using rule 81 (tipo_accion -> objeto_con_exp .)


state 45

    (65) condicion -> SI . expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 78

state 46

    (91) principal -> iniciomain vars C FINPRINCIPAL .

    FINPROGRAMA     reduce using rule 91 (principal -> iniciomain vars C FINPRINCIPAL .)


state 47

    (83) objeto_con_exp -> GIRARDERECHA . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 81

state 48

    (84) objeto_con_exp -> GIRARIZQUIERDA . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 82

state 49

    (88) objeto_sin_exp -> DESPINTAR .

    PUNTOCOMA       reduce using rule 88 (objeto_sin_exp -> DESPINTAR .)


state 50

    (90) return -> REGRESA . expresion PUNTOCOMA
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 83

state 51

    (79) io -> PEDIRALUSUARIO . PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA

    PARENTIZQ       shift and go to state 84


state 52

    (25) estatuto -> asignacion .

    FINBLOQUE       reduce using rule 25 (estatuto -> asignacion .)
    ID              reduce using rule 25 (estatuto -> asignacion .)
    SI              reduce using rule 25 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 25 (estatuto -> asignacion .)
    DECIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    PEDIRALUSUARIO  reduce using rule 25 (estatuto -> asignacion .)
    REGRESA         reduce using rule 25 (estatuto -> asignacion .)
    GIRARDERECHA    reduce using rule 25 (estatuto -> asignacion .)
    GIRARIZQUIERDA  reduce using rule 25 (estatuto -> asignacion .)
    MOVER           reduce using rule 25 (estatuto -> asignacion .)
    BORRAR          reduce using rule 25 (estatuto -> asignacion .)
    PINTAR          reduce using rule 25 (estatuto -> asignacion .)
    DESPINTAR       reduce using rule 25 (estatuto -> asignacion .)
    FINPRINCIPAL    reduce using rule 25 (estatuto -> asignacion .)


state 53

    (23) C -> C estatuto .

    FINPRINCIPAL    reduce using rule 23 (C -> C estatuto .)
    ID              reduce using rule 23 (C -> C estatuto .)
    SI              reduce using rule 23 (C -> C estatuto .)
    MIENTRAS        reduce using rule 23 (C -> C estatuto .)
    DECIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    PEDIRALUSUARIO  reduce using rule 23 (C -> C estatuto .)
    REGRESA         reduce using rule 23 (C -> C estatuto .)
    GIRARDERECHA    reduce using rule 23 (C -> C estatuto .)
    GIRARIZQUIERDA  reduce using rule 23 (C -> C estatuto .)
    MOVER           reduce using rule 23 (C -> C estatuto .)
    BORRAR          reduce using rule 23 (C -> C estatuto .)
    PINTAR          reduce using rule 23 (C -> C estatuto .)
    DESPINTAR       reduce using rule 23 (C -> C estatuto .)


state 54

    (26) estatuto -> condicion .

    FINBLOQUE       reduce using rule 26 (estatuto -> condicion .)
    ID              reduce using rule 26 (estatuto -> condicion .)
    SI              reduce using rule 26 (estatuto -> condicion .)
    MIENTRAS        reduce using rule 26 (estatuto -> condicion .)
    DECIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    PEDIRALUSUARIO  reduce using rule 26 (estatuto -> condicion .)
    REGRESA         reduce using rule 26 (estatuto -> condicion .)
    GIRARDERECHA    reduce using rule 26 (estatuto -> condicion .)
    GIRARIZQUIERDA  reduce using rule 26 (estatuto -> condicion .)
    MOVER           reduce using rule 26 (estatuto -> condicion .)
    BORRAR          reduce using rule 26 (estatuto -> condicion .)
    PINTAR          reduce using rule 26 (estatuto -> condicion .)
    DESPINTAR       reduce using rule 26 (estatuto -> condicion .)
    FINPRINCIPAL    reduce using rule 26 (estatuto -> condicion .)


state 55

    (32) asignacion -> ID . asignacion_arreglo IGUAL expresion PUNTOCOMA
    (89) llamada_sin_ret -> ID . llamada PUNTOCOMA
    (33) asignacion_arreglo -> . CORCHETEIZQ exp CORCHETEDER
    (34) asignacion_arreglo -> . empty
    (58) llamada -> . PARENTIZQ llamada_param PARENTDER
    (12) empty -> .

    CORCHETEIZQ     shift and go to state 86
    PARENTIZQ       shift and go to state 89
    IGUAL           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 87
    llamada                        shift and go to state 85
    asignacion_arreglo             shift and go to state 88

state 56

    (86) objeto_sin_exp -> BORRAR .

    PUNTOCOMA       reduce using rule 86 (objeto_sin_exp -> BORRAR .)


state 57

    (78) io -> DECIRALUSUARIO . exp PUNTOCOMA
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 90

state 58

    (87) objeto_sin_exp -> PINTAR .

    PUNTOCOMA       reduce using rule 87 (objeto_sin_exp -> PINTAR .)


state 59

    (85) objeto_con_exp -> MOVER . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 91

state 60

    (31) estatuto -> return .

    FINBLOQUE       reduce using rule 31 (estatuto -> return .)
    ID              reduce using rule 31 (estatuto -> return .)
    SI              reduce using rule 31 (estatuto -> return .)
    MIENTRAS        reduce using rule 31 (estatuto -> return .)
    DECIRALUSUARIO  reduce using rule 31 (estatuto -> return .)
    PEDIRALUSUARIO  reduce using rule 31 (estatuto -> return .)
    REGRESA         reduce using rule 31 (estatuto -> return .)
    GIRARDERECHA    reduce using rule 31 (estatuto -> return .)
    GIRARIZQUIERDA  reduce using rule 31 (estatuto -> return .)
    MOVER           reduce using rule 31 (estatuto -> return .)
    BORRAR          reduce using rule 31 (estatuto -> return .)
    PINTAR          reduce using rule 31 (estatuto -> return .)
    DESPINTAR       reduce using rule 31 (estatuto -> return .)
    FINPRINCIPAL    reduce using rule 31 (estatuto -> return .)


state 61

    (30) estatuto -> llamada_sin_ret .

    FINBLOQUE       reduce using rule 30 (estatuto -> llamada_sin_ret .)
    ID              reduce using rule 30 (estatuto -> llamada_sin_ret .)
    SI              reduce using rule 30 (estatuto -> llamada_sin_ret .)
    MIENTRAS        reduce using rule 30 (estatuto -> llamada_sin_ret .)
    DECIRALUSUARIO  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    PEDIRALUSUARIO  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    REGRESA         reduce using rule 30 (estatuto -> llamada_sin_ret .)
    GIRARDERECHA    reduce using rule 30 (estatuto -> llamada_sin_ret .)
    GIRARIZQUIERDA  reduce using rule 30 (estatuto -> llamada_sin_ret .)
    MOVER           reduce using rule 30 (estatuto -> llamada_sin_ret .)
    BORRAR          reduce using rule 30 (estatuto -> llamada_sin_ret .)
    PINTAR          reduce using rule 30 (estatuto -> llamada_sin_ret .)
    DESPINTAR       reduce using rule 30 (estatuto -> llamada_sin_ret .)
    FINPRINCIPAL    reduce using rule 30 (estatuto -> llamada_sin_ret .)


state 62

    (74) ciclo -> MIENTRAS . actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (75) actCic1 -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 92
    actCic1                        shift and go to state 93

state 63

    (28) estatuto -> io .

    FINBLOQUE       reduce using rule 28 (estatuto -> io .)
    ID              reduce using rule 28 (estatuto -> io .)
    SI              reduce using rule 28 (estatuto -> io .)
    MIENTRAS        reduce using rule 28 (estatuto -> io .)
    DECIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    PEDIRALUSUARIO  reduce using rule 28 (estatuto -> io .)
    REGRESA         reduce using rule 28 (estatuto -> io .)
    GIRARDERECHA    reduce using rule 28 (estatuto -> io .)
    GIRARIZQUIERDA  reduce using rule 28 (estatuto -> io .)
    MOVER           reduce using rule 28 (estatuto -> io .)
    BORRAR          reduce using rule 28 (estatuto -> io .)
    PINTAR          reduce using rule 28 (estatuto -> io .)
    DESPINTAR       reduce using rule 28 (estatuto -> io .)
    FINPRINCIPAL    reduce using rule 28 (estatuto -> io .)


state 64

    (82) tipo_accion -> objeto_sin_exp .

    PUNTOCOMA       reduce using rule 82 (tipo_accion -> objeto_sin_exp .)


state 65

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 94


state 66

    (22) finfunc -> C return . FINFUNCION
    (31) estatuto -> return .

    FINFUNCION      shift and go to state 95
    REGRESA         reduce using rule 31 (estatuto -> return .)
    ID              reduce using rule 31 (estatuto -> return .)
    SI              reduce using rule 31 (estatuto -> return .)
    MIENTRAS        reduce using rule 31 (estatuto -> return .)
    DECIRALUSUARIO  reduce using rule 31 (estatuto -> return .)
    PEDIRALUSUARIO  reduce using rule 31 (estatuto -> return .)
    GIRARDERECHA    reduce using rule 31 (estatuto -> return .)
    GIRARIZQUIERDA  reduce using rule 31 (estatuto -> return .)
    MOVER           reduce using rule 31 (estatuto -> return .)
    BORRAR          reduce using rule 31 (estatuto -> return .)
    PINTAR          reduce using rule 31 (estatuto -> return .)
    DESPINTAR       reduce using rule 31 (estatuto -> return .)


state 67

    (20) param_mult -> empty .

    CREAR           reduce using rule 20 (param_mult -> empty .)
    REGRESA         reduce using rule 20 (param_mult -> empty .)
    ID              reduce using rule 20 (param_mult -> empty .)
    SI              reduce using rule 20 (param_mult -> empty .)
    MIENTRAS        reduce using rule 20 (param_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 20 (param_mult -> empty .)
    GIRARDERECHA    reduce using rule 20 (param_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 20 (param_mult -> empty .)
    MOVER           reduce using rule 20 (param_mult -> empty .)
    BORRAR          reduce using rule 20 (param_mult -> empty .)
    PINTAR          reduce using rule 20 (param_mult -> empty .)
    DESPINTAR       reduce using rule 20 (param_mult -> empty .)


state 68

    (19) param_mult -> COMA . tipo ID param_mult
    (7) tipo -> . ENTERO
    (8) tipo -> . FLOTANTE
    (9) tipo -> . TEXTO
    (10) tipo -> . BOOLEANO

    ENTERO          shift and go to state 12
    FLOTANTE        shift and go to state 16
    TEXTO           shift and go to state 14
    BOOLEANO        shift and go to state 15

    tipo                           shift and go to state 96

state 69

    (18) param -> PARAMETROS tipo ID param_mult .

    CREAR           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    REGRESA         reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    ID              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    SI              reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MIENTRAS        reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    MOVER           reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    BORRAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    PINTAR          reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)
    DESPINTAR       reduce using rule 18 (param -> PARAMETROS tipo ID param_mult .)


state 70

    (80) accion -> tipo_accion PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    ID              reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    SI              reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    MIENTRAS        reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    REGRESA         reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    MOVER           reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    BORRAR          reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    PINTAR          reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    DESPINTAR       reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 80 (accion -> tipo_accion PUNTOCOMA .)


state 71

    (48) exp -> CTEENTERO .

    MAS             reduce using rule 48 (exp -> CTEENTERO .)
    MENOS           reduce using rule 48 (exp -> CTEENTERO .)
    MULT            reduce using rule 48 (exp -> CTEENTERO .)
    DIV             reduce using rule 48 (exp -> CTEENTERO .)
    MAYORQUE        reduce using rule 48 (exp -> CTEENTERO .)
    MENORQUE        reduce using rule 48 (exp -> CTEENTERO .)
    DIFERENTEQUE    reduce using rule 48 (exp -> CTEENTERO .)
    IGUALQUE        reduce using rule 48 (exp -> CTEENTERO .)
    MAYORIGUAL      reduce using rule 48 (exp -> CTEENTERO .)
    MENORIGUAL      reduce using rule 48 (exp -> CTEENTERO .)
    ENTONCES        reduce using rule 48 (exp -> CTEENTERO .)
    PUNTOCOMA       reduce using rule 48 (exp -> CTEENTERO .)
    PARENTDER       reduce using rule 48 (exp -> CTEENTERO .)
    CORCHETEDER     reduce using rule 48 (exp -> CTEENTERO .)
    COMA            reduce using rule 48 (exp -> CTEENTERO .)
    HACER           reduce using rule 48 (exp -> CTEENTERO .)


state 72

    (51) exp -> FALSE .

    MAS             reduce using rule 51 (exp -> FALSE .)
    MENOS           reduce using rule 51 (exp -> FALSE .)
    MULT            reduce using rule 51 (exp -> FALSE .)
    DIV             reduce using rule 51 (exp -> FALSE .)
    MAYORQUE        reduce using rule 51 (exp -> FALSE .)
    MENORQUE        reduce using rule 51 (exp -> FALSE .)
    DIFERENTEQUE    reduce using rule 51 (exp -> FALSE .)
    IGUALQUE        reduce using rule 51 (exp -> FALSE .)
    MAYORIGUAL      reduce using rule 51 (exp -> FALSE .)
    MENORIGUAL      reduce using rule 51 (exp -> FALSE .)
    ENTONCES        reduce using rule 51 (exp -> FALSE .)
    PUNTOCOMA       reduce using rule 51 (exp -> FALSE .)
    PARENTDER       reduce using rule 51 (exp -> FALSE .)
    CORCHETEDER     reduce using rule 51 (exp -> FALSE .)
    COMA            reduce using rule 51 (exp -> FALSE .)
    HACER           reduce using rule 51 (exp -> FALSE .)


state 73

    (47) exp -> MENOS . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 97

state 74

    (49) exp -> CTEFLOTANTE .

    MAS             reduce using rule 49 (exp -> CTEFLOTANTE .)
    MENOS           reduce using rule 49 (exp -> CTEFLOTANTE .)
    MULT            reduce using rule 49 (exp -> CTEFLOTANTE .)
    DIV             reduce using rule 49 (exp -> CTEFLOTANTE .)
    MAYORQUE        reduce using rule 49 (exp -> CTEFLOTANTE .)
    MENORQUE        reduce using rule 49 (exp -> CTEFLOTANTE .)
    DIFERENTEQUE    reduce using rule 49 (exp -> CTEFLOTANTE .)
    IGUALQUE        reduce using rule 49 (exp -> CTEFLOTANTE .)
    MAYORIGUAL      reduce using rule 49 (exp -> CTEFLOTANTE .)
    MENORIGUAL      reduce using rule 49 (exp -> CTEFLOTANTE .)
    ENTONCES        reduce using rule 49 (exp -> CTEFLOTANTE .)
    PUNTOCOMA       reduce using rule 49 (exp -> CTEFLOTANTE .)
    PARENTDER       reduce using rule 49 (exp -> CTEFLOTANTE .)
    CORCHETEDER     reduce using rule 49 (exp -> CTEFLOTANTE .)
    COMA            reduce using rule 49 (exp -> CTEFLOTANTE .)
    HACER           reduce using rule 49 (exp -> CTEFLOTANTE .)


state 75

    (41) exp -> PARENTIZQ . expresion PARENTDER
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 98

state 76

    (50) exp -> TRUE .

    MAS             reduce using rule 50 (exp -> TRUE .)
    MENOS           reduce using rule 50 (exp -> TRUE .)
    MULT            reduce using rule 50 (exp -> TRUE .)
    DIV             reduce using rule 50 (exp -> TRUE .)
    MAYORQUE        reduce using rule 50 (exp -> TRUE .)
    MENORQUE        reduce using rule 50 (exp -> TRUE .)
    DIFERENTEQUE    reduce using rule 50 (exp -> TRUE .)
    IGUALQUE        reduce using rule 50 (exp -> TRUE .)
    MAYORIGUAL      reduce using rule 50 (exp -> TRUE .)
    MENORIGUAL      reduce using rule 50 (exp -> TRUE .)
    ENTONCES        reduce using rule 50 (exp -> TRUE .)
    PUNTOCOMA       reduce using rule 50 (exp -> TRUE .)
    PARENTDER       reduce using rule 50 (exp -> TRUE .)
    CORCHETEDER     reduce using rule 50 (exp -> TRUE .)
    COMA            reduce using rule 50 (exp -> TRUE .)
    HACER           reduce using rule 50 (exp -> TRUE .)


state 77

    (35) expresion -> exp . MAYORQUE push_opt exp
    (36) expresion -> exp . MENORQUE push_opt exp
    (37) expresion -> exp . DIFERENTEQUE push_opt exp
    (38) expresion -> exp . IGUALQUE push_opt exp
    (39) expresion -> exp . MAYORIGUAL push_opt exp
    (40) expresion -> exp . MENORIGUAL push_opt exp
    (60) expresion -> exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAYORQUE        shift and go to state 105
    MENORQUE        shift and go to state 108
    DIFERENTEQUE    shift and go to state 103
    IGUALQUE        shift and go to state 107
    MAYORIGUAL      shift and go to state 106
    MENORIGUAL      shift and go to state 104
    PARENTDER       reduce using rule 60 (expresion -> exp .)
    COMA            reduce using rule 60 (expresion -> exp .)
    ENTONCES        reduce using rule 60 (expresion -> exp .)
    HACER           reduce using rule 60 (expresion -> exp .)
    PUNTOCOMA       reduce using rule 60 (expresion -> exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 78

    (65) condicion -> SI expresion . actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (66) actSi1 -> . empty
    (12) empty -> .

    ENTONCES        reduce using rule 12 (empty -> .)

    empty                          shift and go to state 109
    actSi1                         shift and go to state 110

state 79

    (52) exp -> CTETEXTO .

    MAS             reduce using rule 52 (exp -> CTETEXTO .)
    MENOS           reduce using rule 52 (exp -> CTETEXTO .)
    MULT            reduce using rule 52 (exp -> CTETEXTO .)
    DIV             reduce using rule 52 (exp -> CTETEXTO .)
    MAYORQUE        reduce using rule 52 (exp -> CTETEXTO .)
    MENORQUE        reduce using rule 52 (exp -> CTETEXTO .)
    DIFERENTEQUE    reduce using rule 52 (exp -> CTETEXTO .)
    IGUALQUE        reduce using rule 52 (exp -> CTETEXTO .)
    MAYORIGUAL      reduce using rule 52 (exp -> CTETEXTO .)
    MENORIGUAL      reduce using rule 52 (exp -> CTETEXTO .)
    ENTONCES        reduce using rule 52 (exp -> CTETEXTO .)
    PUNTOCOMA       reduce using rule 52 (exp -> CTETEXTO .)
    PARENTDER       reduce using rule 52 (exp -> CTETEXTO .)
    CORCHETEDER     reduce using rule 52 (exp -> CTETEXTO .)
    COMA            reduce using rule 52 (exp -> CTETEXTO .)
    HACER           reduce using rule 52 (exp -> CTETEXTO .)


state 80

    (53) exp -> ID . varfuncarr
    (54) varfuncarr -> . push_var_opd
    (55) varfuncarr -> . llamada
    (56) varfuncarr -> . arraycall
    (57) push_var_opd -> . empty
    (58) llamada -> . PARENTIZQ llamada_param PARENTDER
    (64) arraycall -> . CORCHETEIZQ exp CORCHETEDER
    (12) empty -> .

    PARENTIZQ       shift and go to state 89
    CORCHETEIZQ     shift and go to state 112
    MAYORQUE        reduce using rule 12 (empty -> .)
    MENORQUE        reduce using rule 12 (empty -> .)
    DIFERENTEQUE    reduce using rule 12 (empty -> .)
    IGUALQUE        reduce using rule 12 (empty -> .)
    MAYORIGUAL      reduce using rule 12 (empty -> .)
    MENORIGUAL      reduce using rule 12 (empty -> .)
    MAS             reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    MULT            reduce using rule 12 (empty -> .)
    DIV             reduce using rule 12 (empty -> .)
    ENTONCES        reduce using rule 12 (empty -> .)
    PUNTOCOMA       reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)
    CORCHETEDER     reduce using rule 12 (empty -> .)
    COMA            reduce using rule 12 (empty -> .)
    HACER           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 114
    arraycall                      shift and go to state 115
    llamada                        shift and go to state 111
    push_var_opd                   shift and go to state 116
    varfuncarr                     shift and go to state 113

state 81

    (83) objeto_con_exp -> GIRARDERECHA exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 83 (objeto_con_exp -> GIRARDERECHA exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 82

    (84) objeto_con_exp -> GIRARIZQUIERDA exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 84 (objeto_con_exp -> GIRARIZQUIERDA exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 83

    (90) return -> REGRESA expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 117


state 84

    (79) io -> PEDIRALUSUARIO PARENTIZQ . ID asignacion_arreglo PARENTDER PUNTOCOMA

    ID              shift and go to state 118


state 85

    (89) llamada_sin_ret -> ID llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 119


state 86

    (33) asignacion_arreglo -> CORCHETEIZQ . exp CORCHETEDER
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 120

state 87

    (34) asignacion_arreglo -> empty .

    PARENTDER       reduce using rule 34 (asignacion_arreglo -> empty .)
    IGUAL           reduce using rule 34 (asignacion_arreglo -> empty .)


state 88

    (32) asignacion -> ID asignacion_arreglo . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 121


state 89

    (58) llamada -> PARENTIZQ . llamada_param PARENTDER
    (59) llamada_param -> . expresion llamada_param_mult
    (63) llamada_param -> . empty
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (12) empty -> .
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTDER       reduce using rule 12 (empty -> .)
    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    empty                          shift and go to state 122
    expresion                      shift and go to state 123
    llamada_param                  shift and go to state 124

state 90

    (78) io -> DECIRALUSUARIO exp . PUNTOCOMA
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PUNTOCOMA       shift and go to state 125
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 91

    (85) objeto_con_exp -> MOVER exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PUNTOCOMA       reduce using rule 85 (objeto_con_exp -> MOVER exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 92

    (75) actCic1 -> empty .

    PARENTIZQ       reduce using rule 75 (actCic1 -> empty .)
    MENOS           reduce using rule 75 (actCic1 -> empty .)
    CTEENTERO       reduce using rule 75 (actCic1 -> empty .)
    CTEFLOTANTE     reduce using rule 75 (actCic1 -> empty .)
    TRUE            reduce using rule 75 (actCic1 -> empty .)
    FALSE           reduce using rule 75 (actCic1 -> empty .)
    CTETEXTO        reduce using rule 75 (actCic1 -> empty .)
    ID              reduce using rule 75 (actCic1 -> empty .)


state 93

    (74) ciclo -> MIENTRAS actCic1 . expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 126

state 94

    (6) array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .

    CREAR           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    REGRESA         reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    ID              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    SI              reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MIENTRAS        reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    MOVER           reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    BORRAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    PINTAR          reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    DESPINTAR       reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOPRINCIPAL reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)
    INICIOFUNCION   reduce using rule 6 (array -> CREAR tipo ID CORCHETEIZQ CTEENTERO CORCHETEDER PUNTOCOMA .)


state 95

    (22) finfunc -> C return FINFUNCION .

    INICIOPRINCIPAL reduce using rule 22 (finfunc -> C return FINFUNCION .)
    INICIOFUNCION   reduce using rule 22 (finfunc -> C return FINFUNCION .)


state 96

    (19) param_mult -> COMA tipo . ID param_mult

    ID              shift and go to state 127


state 97

    (47) exp -> MENOS exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 47 (exp -> MENOS exp .)
    MENOS           reduce using rule 47 (exp -> MENOS exp .)
    MULT            reduce using rule 47 (exp -> MENOS exp .)
    DIV             reduce using rule 47 (exp -> MENOS exp .)
    MAYORQUE        reduce using rule 47 (exp -> MENOS exp .)
    MENORQUE        reduce using rule 47 (exp -> MENOS exp .)
    DIFERENTEQUE    reduce using rule 47 (exp -> MENOS exp .)
    IGUALQUE        reduce using rule 47 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 47 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 47 (exp -> MENOS exp .)
    ENTONCES        reduce using rule 47 (exp -> MENOS exp .)
    PUNTOCOMA       reduce using rule 47 (exp -> MENOS exp .)
    PARENTDER       reduce using rule 47 (exp -> MENOS exp .)
    CORCHETEDER     reduce using rule 47 (exp -> MENOS exp .)
    COMA            reduce using rule 47 (exp -> MENOS exp .)
    HACER           reduce using rule 47 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 100 ]
  ! DIV             [ shift and go to state 102 ]


state 98

    (41) exp -> PARENTIZQ expresion . PARENTDER

    PARENTDER       shift and go to state 128


state 99

    (43) exp -> exp MENOS . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 130

state 100

    (44) exp -> exp MULT . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 131

state 101

    (42) exp -> exp MAS . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 132

state 102

    (45) exp -> exp DIV . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 133

state 103

    (37) expresion -> exp DIFERENTEQUE . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 134

state 104

    (40) expresion -> exp MENORIGUAL . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 135

state 105

    (35) expresion -> exp MAYORQUE . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 136

state 106

    (39) expresion -> exp MAYORIGUAL . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 137

state 107

    (38) expresion -> exp IGUALQUE . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 138

state 108

    (36) expresion -> exp MENORQUE . push_opt exp
    (46) push_opt -> . empty
    (12) empty -> .

    PARENTIZQ       reduce using rule 12 (empty -> .)
    MENOS           reduce using rule 12 (empty -> .)
    CTEENTERO       reduce using rule 12 (empty -> .)
    CTEFLOTANTE     reduce using rule 12 (empty -> .)
    TRUE            reduce using rule 12 (empty -> .)
    FALSE           reduce using rule 12 (empty -> .)
    CTETEXTO        reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)

    empty                          shift and go to state 129
    push_opt                       shift and go to state 139

state 109

    (66) actSi1 -> empty .

    ENTONCES        reduce using rule 66 (actSi1 -> empty .)


state 110

    (65) condicion -> SI expresion actSi1 . ENTONCES bloque actSi2 condicion_else actSi3 FINSI

    ENTONCES        shift and go to state 140


state 111

    (55) varfuncarr -> llamada .

    MAYORQUE        reduce using rule 55 (varfuncarr -> llamada .)
    MENORQUE        reduce using rule 55 (varfuncarr -> llamada .)
    DIFERENTEQUE    reduce using rule 55 (varfuncarr -> llamada .)
    IGUALQUE        reduce using rule 55 (varfuncarr -> llamada .)
    MAYORIGUAL      reduce using rule 55 (varfuncarr -> llamada .)
    MENORIGUAL      reduce using rule 55 (varfuncarr -> llamada .)
    MAS             reduce using rule 55 (varfuncarr -> llamada .)
    MENOS           reduce using rule 55 (varfuncarr -> llamada .)
    MULT            reduce using rule 55 (varfuncarr -> llamada .)
    DIV             reduce using rule 55 (varfuncarr -> llamada .)
    ENTONCES        reduce using rule 55 (varfuncarr -> llamada .)
    PUNTOCOMA       reduce using rule 55 (varfuncarr -> llamada .)
    PARENTDER       reduce using rule 55 (varfuncarr -> llamada .)
    CORCHETEDER     reduce using rule 55 (varfuncarr -> llamada .)
    COMA            reduce using rule 55 (varfuncarr -> llamada .)
    HACER           reduce using rule 55 (varfuncarr -> llamada .)


state 112

    (64) arraycall -> CORCHETEIZQ . exp CORCHETEDER
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 141

state 113

    (53) exp -> ID varfuncarr .

    MAS             reduce using rule 53 (exp -> ID varfuncarr .)
    MENOS           reduce using rule 53 (exp -> ID varfuncarr .)
    MULT            reduce using rule 53 (exp -> ID varfuncarr .)
    DIV             reduce using rule 53 (exp -> ID varfuncarr .)
    MAYORQUE        reduce using rule 53 (exp -> ID varfuncarr .)
    MENORQUE        reduce using rule 53 (exp -> ID varfuncarr .)
    DIFERENTEQUE    reduce using rule 53 (exp -> ID varfuncarr .)
    IGUALQUE        reduce using rule 53 (exp -> ID varfuncarr .)
    MAYORIGUAL      reduce using rule 53 (exp -> ID varfuncarr .)
    MENORIGUAL      reduce using rule 53 (exp -> ID varfuncarr .)
    ENTONCES        reduce using rule 53 (exp -> ID varfuncarr .)
    PUNTOCOMA       reduce using rule 53 (exp -> ID varfuncarr .)
    PARENTDER       reduce using rule 53 (exp -> ID varfuncarr .)
    CORCHETEDER     reduce using rule 53 (exp -> ID varfuncarr .)
    COMA            reduce using rule 53 (exp -> ID varfuncarr .)
    HACER           reduce using rule 53 (exp -> ID varfuncarr .)


state 114

    (57) push_var_opd -> empty .

    MAYORQUE        reduce using rule 57 (push_var_opd -> empty .)
    MENORQUE        reduce using rule 57 (push_var_opd -> empty .)
    DIFERENTEQUE    reduce using rule 57 (push_var_opd -> empty .)
    IGUALQUE        reduce using rule 57 (push_var_opd -> empty .)
    MAYORIGUAL      reduce using rule 57 (push_var_opd -> empty .)
    MENORIGUAL      reduce using rule 57 (push_var_opd -> empty .)
    MAS             reduce using rule 57 (push_var_opd -> empty .)
    MENOS           reduce using rule 57 (push_var_opd -> empty .)
    MULT            reduce using rule 57 (push_var_opd -> empty .)
    DIV             reduce using rule 57 (push_var_opd -> empty .)
    ENTONCES        reduce using rule 57 (push_var_opd -> empty .)
    PUNTOCOMA       reduce using rule 57 (push_var_opd -> empty .)
    PARENTDER       reduce using rule 57 (push_var_opd -> empty .)
    CORCHETEDER     reduce using rule 57 (push_var_opd -> empty .)
    COMA            reduce using rule 57 (push_var_opd -> empty .)
    HACER           reduce using rule 57 (push_var_opd -> empty .)


state 115

    (56) varfuncarr -> arraycall .

    MAYORQUE        reduce using rule 56 (varfuncarr -> arraycall .)
    MENORQUE        reduce using rule 56 (varfuncarr -> arraycall .)
    DIFERENTEQUE    reduce using rule 56 (varfuncarr -> arraycall .)
    IGUALQUE        reduce using rule 56 (varfuncarr -> arraycall .)
    MAYORIGUAL      reduce using rule 56 (varfuncarr -> arraycall .)
    MENORIGUAL      reduce using rule 56 (varfuncarr -> arraycall .)
    MAS             reduce using rule 56 (varfuncarr -> arraycall .)
    MENOS           reduce using rule 56 (varfuncarr -> arraycall .)
    MULT            reduce using rule 56 (varfuncarr -> arraycall .)
    DIV             reduce using rule 56 (varfuncarr -> arraycall .)
    ENTONCES        reduce using rule 56 (varfuncarr -> arraycall .)
    PUNTOCOMA       reduce using rule 56 (varfuncarr -> arraycall .)
    PARENTDER       reduce using rule 56 (varfuncarr -> arraycall .)
    CORCHETEDER     reduce using rule 56 (varfuncarr -> arraycall .)
    COMA            reduce using rule 56 (varfuncarr -> arraycall .)
    HACER           reduce using rule 56 (varfuncarr -> arraycall .)


state 116

    (54) varfuncarr -> push_var_opd .

    MAYORQUE        reduce using rule 54 (varfuncarr -> push_var_opd .)
    MENORQUE        reduce using rule 54 (varfuncarr -> push_var_opd .)
    DIFERENTEQUE    reduce using rule 54 (varfuncarr -> push_var_opd .)
    IGUALQUE        reduce using rule 54 (varfuncarr -> push_var_opd .)
    MAYORIGUAL      reduce using rule 54 (varfuncarr -> push_var_opd .)
    MENORIGUAL      reduce using rule 54 (varfuncarr -> push_var_opd .)
    MAS             reduce using rule 54 (varfuncarr -> push_var_opd .)
    MENOS           reduce using rule 54 (varfuncarr -> push_var_opd .)
    MULT            reduce using rule 54 (varfuncarr -> push_var_opd .)
    DIV             reduce using rule 54 (varfuncarr -> push_var_opd .)
    ENTONCES        reduce using rule 54 (varfuncarr -> push_var_opd .)
    PUNTOCOMA       reduce using rule 54 (varfuncarr -> push_var_opd .)
    PARENTDER       reduce using rule 54 (varfuncarr -> push_var_opd .)
    CORCHETEDER     reduce using rule 54 (varfuncarr -> push_var_opd .)
    COMA            reduce using rule 54 (varfuncarr -> push_var_opd .)
    HACER           reduce using rule 54 (varfuncarr -> push_var_opd .)


state 117

    (90) return -> REGRESA expresion PUNTOCOMA .

    FINFUNCION      reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    REGRESA         reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    ID              reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    SI              reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    MIENTRAS        reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    MOVER           reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    BORRAR          reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    PINTAR          reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    DESPINTAR       reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    FINPRINCIPAL    reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 90 (return -> REGRESA expresion PUNTOCOMA .)


state 118

    (79) io -> PEDIRALUSUARIO PARENTIZQ ID . asignacion_arreglo PARENTDER PUNTOCOMA
    (33) asignacion_arreglo -> . CORCHETEIZQ exp CORCHETEDER
    (34) asignacion_arreglo -> . empty
    (12) empty -> .

    CORCHETEIZQ     shift and go to state 86
    PARENTDER       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 87
    asignacion_arreglo             shift and go to state 142

state 119

    (89) llamada_sin_ret -> ID llamada PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    ID              reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    SI              reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    REGRESA         reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    MOVER           reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    BORRAR          reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    PINTAR          reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    DESPINTAR       reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)
    FINBLOQUE       reduce using rule 89 (llamada_sin_ret -> ID llamada PUNTOCOMA .)


state 120

    (33) asignacion_arreglo -> CORCHETEIZQ exp . CORCHETEDER
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    CORCHETEDER     shift and go to state 143
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 121

    (32) asignacion -> ID asignacion_arreglo IGUAL . expresion PUNTOCOMA
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 144

state 122

    (63) llamada_param -> empty .

    PARENTDER       reduce using rule 63 (llamada_param -> empty .)


state 123

    (59) llamada_param -> expresion . llamada_param_mult
    (61) llamada_param_mult -> . llamada_param_mult COMA expresion
    (62) llamada_param_mult -> . empty
    (12) empty -> .

    COMA            reduce using rule 12 (empty -> .)
    PARENTDER       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 145
    llamada_param_mult             shift and go to state 146

state 124

    (58) llamada -> PARENTIZQ llamada_param . PARENTDER

    PARENTDER       shift and go to state 147


state 125

    (78) io -> DECIRALUSUARIO exp PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    ID              reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    SI              reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    MIENTRAS        reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    REGRESA         reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    MOVER           reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    BORRAR          reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    PINTAR          reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    DESPINTAR       reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)
    FINBLOQUE       reduce using rule 78 (io -> DECIRALUSUARIO exp PUNTOCOMA .)


state 126

    (74) ciclo -> MIENTRAS actCic1 expresion . actCic2 HACER bloque FINMIENTRAS actCic3
    (76) actCic2 -> . empty
    (12) empty -> .

    HACER           reduce using rule 12 (empty -> .)

    actCic2                        shift and go to state 148
    empty                          shift and go to state 149

state 127

    (19) param_mult -> COMA tipo ID . param_mult
    (19) param_mult -> . COMA tipo ID param_mult
    (20) param_mult -> . empty
    (12) empty -> .

    COMA            shift and go to state 68
    CREAR           reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 67
    param_mult                     shift and go to state 150

state 128

    (41) exp -> PARENTIZQ expresion PARENTDER .

    MAS             reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MENOS           reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MULT            reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    DIV             reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORQUE        reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORQUE        reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    DIFERENTEQUE    reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    IGUALQUE        reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MAYORIGUAL      reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    MENORIGUAL      reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    ENTONCES        reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    PUNTOCOMA       reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    PARENTDER       reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    CORCHETEDER     reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    COMA            reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)
    HACER           reduce using rule 41 (exp -> PARENTIZQ expresion PARENTDER .)


state 129

    (46) push_opt -> empty .

    PARENTIZQ       reduce using rule 46 (push_opt -> empty .)
    MENOS           reduce using rule 46 (push_opt -> empty .)
    CTEENTERO       reduce using rule 46 (push_opt -> empty .)
    CTEFLOTANTE     reduce using rule 46 (push_opt -> empty .)
    TRUE            reduce using rule 46 (push_opt -> empty .)
    FALSE           reduce using rule 46 (push_opt -> empty .)
    CTETEXTO        reduce using rule 46 (push_opt -> empty .)
    ID              reduce using rule 46 (push_opt -> empty .)


state 130

    (43) exp -> exp MENOS push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 151

state 131

    (44) exp -> exp MULT push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 152

state 132

    (42) exp -> exp MAS push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 153

state 133

    (45) exp -> exp DIV push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 154

state 134

    (37) expresion -> exp DIFERENTEQUE push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 155

state 135

    (40) expresion -> exp MENORIGUAL push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 156

state 136

    (35) expresion -> exp MAYORQUE push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 157

state 137

    (39) expresion -> exp MAYORIGUAL push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 158

state 138

    (38) expresion -> exp IGUALQUE push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 159

state 139

    (36) expresion -> exp MENORQUE push_opt . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 160

state 140

    (65) condicion -> SI expresion actSi1 ENTONCES . bloque actSi2 condicion_else actSi3 FINSI
    (67) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 161

    bloque                         shift and go to state 162

state 141

    (64) arraycall -> CORCHETEIZQ exp . CORCHETEDER
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    CORCHETEDER     shift and go to state 163
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 142

    (79) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo . PARENTDER PUNTOCOMA

    PARENTDER       shift and go to state 164


state 143

    (33) asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .

    PARENTDER       reduce using rule 33 (asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .)
    IGUAL           reduce using rule 33 (asignacion_arreglo -> CORCHETEIZQ exp CORCHETEDER .)


state 144

    (32) asignacion -> ID asignacion_arreglo IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 165


state 145

    (62) llamada_param_mult -> empty .

    COMA            reduce using rule 62 (llamada_param_mult -> empty .)
    PARENTDER       reduce using rule 62 (llamada_param_mult -> empty .)


state 146

    (59) llamada_param -> expresion llamada_param_mult .
    (61) llamada_param_mult -> llamada_param_mult . COMA expresion

    PARENTDER       reduce using rule 59 (llamada_param -> expresion llamada_param_mult .)
    COMA            shift and go to state 166


state 147

    (58) llamada -> PARENTIZQ llamada_param PARENTDER .

    PUNTOCOMA       reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORQUE        reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORQUE        reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIFERENTEQUE    reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    IGUALQUE        reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAYORIGUAL      reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENORIGUAL      reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MAS             reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MENOS           reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    MULT            reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    DIV             reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    ENTONCES        reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    PARENTDER       reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    CORCHETEDER     reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    COMA            reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)
    HACER           reduce using rule 58 (llamada -> PARENTIZQ llamada_param PARENTDER .)


state 148

    (74) ciclo -> MIENTRAS actCic1 expresion actCic2 . HACER bloque FINMIENTRAS actCic3

    HACER           shift and go to state 167


state 149

    (76) actCic2 -> empty .

    HACER           reduce using rule 76 (actCic2 -> empty .)


state 150

    (19) param_mult -> COMA tipo ID param_mult .

    CREAR           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    REGRESA         reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    ID              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    SI              reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MIENTRAS        reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DECIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PEDIRALUSUARIO  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARDERECHA    reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    GIRARIZQUIERDA  reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    MOVER           reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    BORRAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    PINTAR          reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)
    DESPINTAR       reduce using rule 19 (param_mult -> COMA tipo ID param_mult .)


state 151

    (43) exp -> exp MENOS push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MENOS           reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MAYORQUE        reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MENORQUE        reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    DIFERENTEQUE    reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    IGUALQUE        reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MAYORIGUAL      reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MENORIGUAL      reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    ENTONCES        reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    PUNTOCOMA       reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    PARENTDER       reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    CORCHETEDER     reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    COMA            reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    HACER           reduce using rule 43 (exp -> exp MENOS push_opt exp .)
    MULT            shift and go to state 100
    DIV             shift and go to state 102

  ! MULT            [ reduce using rule 43 (exp -> exp MENOS push_opt exp .) ]
  ! DIV             [ reduce using rule 43 (exp -> exp MENOS push_opt exp .) ]
  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 99 ]


state 152

    (44) exp -> exp MULT push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MENOS           reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MULT            reduce using rule 44 (exp -> exp MULT push_opt exp .)
    DIV             reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MAYORQUE        reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MENORQUE        reduce using rule 44 (exp -> exp MULT push_opt exp .)
    DIFERENTEQUE    reduce using rule 44 (exp -> exp MULT push_opt exp .)
    IGUALQUE        reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MAYORIGUAL      reduce using rule 44 (exp -> exp MULT push_opt exp .)
    MENORIGUAL      reduce using rule 44 (exp -> exp MULT push_opt exp .)
    ENTONCES        reduce using rule 44 (exp -> exp MULT push_opt exp .)
    PUNTOCOMA       reduce using rule 44 (exp -> exp MULT push_opt exp .)
    PARENTDER       reduce using rule 44 (exp -> exp MULT push_opt exp .)
    CORCHETEDER     reduce using rule 44 (exp -> exp MULT push_opt exp .)
    COMA            reduce using rule 44 (exp -> exp MULT push_opt exp .)
    HACER           reduce using rule 44 (exp -> exp MULT push_opt exp .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 100 ]
  ! DIV             [ shift and go to state 102 ]


state 153

    (42) exp -> exp MAS push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MENOS           reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MAYORQUE        reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MENORQUE        reduce using rule 42 (exp -> exp MAS push_opt exp .)
    DIFERENTEQUE    reduce using rule 42 (exp -> exp MAS push_opt exp .)
    IGUALQUE        reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MAYORIGUAL      reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MENORIGUAL      reduce using rule 42 (exp -> exp MAS push_opt exp .)
    ENTONCES        reduce using rule 42 (exp -> exp MAS push_opt exp .)
    PUNTOCOMA       reduce using rule 42 (exp -> exp MAS push_opt exp .)
    PARENTDER       reduce using rule 42 (exp -> exp MAS push_opt exp .)
    CORCHETEDER     reduce using rule 42 (exp -> exp MAS push_opt exp .)
    COMA            reduce using rule 42 (exp -> exp MAS push_opt exp .)
    HACER           reduce using rule 42 (exp -> exp MAS push_opt exp .)
    MULT            shift and go to state 100
    DIV             shift and go to state 102

  ! MULT            [ reduce using rule 42 (exp -> exp MAS push_opt exp .) ]
  ! DIV             [ reduce using rule 42 (exp -> exp MAS push_opt exp .) ]
  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 99 ]


state 154

    (45) exp -> exp DIV push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    MAS             reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MENOS           reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MULT            reduce using rule 45 (exp -> exp DIV push_opt exp .)
    DIV             reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MAYORQUE        reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MENORQUE        reduce using rule 45 (exp -> exp DIV push_opt exp .)
    DIFERENTEQUE    reduce using rule 45 (exp -> exp DIV push_opt exp .)
    IGUALQUE        reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MAYORIGUAL      reduce using rule 45 (exp -> exp DIV push_opt exp .)
    MENORIGUAL      reduce using rule 45 (exp -> exp DIV push_opt exp .)
    ENTONCES        reduce using rule 45 (exp -> exp DIV push_opt exp .)
    PUNTOCOMA       reduce using rule 45 (exp -> exp DIV push_opt exp .)
    PARENTDER       reduce using rule 45 (exp -> exp DIV push_opt exp .)
    CORCHETEDER     reduce using rule 45 (exp -> exp DIV push_opt exp .)
    COMA            reduce using rule 45 (exp -> exp DIV push_opt exp .)
    HACER           reduce using rule 45 (exp -> exp DIV push_opt exp .)

  ! MAS             [ shift and go to state 101 ]
  ! MENOS           [ shift and go to state 99 ]
  ! MULT            [ shift and go to state 100 ]
  ! DIV             [ shift and go to state 102 ]


state 155

    (37) expresion -> exp DIFERENTEQUE push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 37 (expresion -> exp DIFERENTEQUE push_opt exp .)
    COMA            reduce using rule 37 (expresion -> exp DIFERENTEQUE push_opt exp .)
    ENTONCES        reduce using rule 37 (expresion -> exp DIFERENTEQUE push_opt exp .)
    HACER           reduce using rule 37 (expresion -> exp DIFERENTEQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 37 (expresion -> exp DIFERENTEQUE push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 156

    (40) expresion -> exp MENORIGUAL push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 40 (expresion -> exp MENORIGUAL push_opt exp .)
    COMA            reduce using rule 40 (expresion -> exp MENORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 40 (expresion -> exp MENORIGUAL push_opt exp .)
    HACER           reduce using rule 40 (expresion -> exp MENORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 40 (expresion -> exp MENORIGUAL push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 157

    (35) expresion -> exp MAYORQUE push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 35 (expresion -> exp MAYORQUE push_opt exp .)
    COMA            reduce using rule 35 (expresion -> exp MAYORQUE push_opt exp .)
    ENTONCES        reduce using rule 35 (expresion -> exp MAYORQUE push_opt exp .)
    HACER           reduce using rule 35 (expresion -> exp MAYORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 35 (expresion -> exp MAYORQUE push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 158

    (39) expresion -> exp MAYORIGUAL push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 39 (expresion -> exp MAYORIGUAL push_opt exp .)
    COMA            reduce using rule 39 (expresion -> exp MAYORIGUAL push_opt exp .)
    ENTONCES        reduce using rule 39 (expresion -> exp MAYORIGUAL push_opt exp .)
    HACER           reduce using rule 39 (expresion -> exp MAYORIGUAL push_opt exp .)
    PUNTOCOMA       reduce using rule 39 (expresion -> exp MAYORIGUAL push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 159

    (38) expresion -> exp IGUALQUE push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 38 (expresion -> exp IGUALQUE push_opt exp .)
    COMA            reduce using rule 38 (expresion -> exp IGUALQUE push_opt exp .)
    ENTONCES        reduce using rule 38 (expresion -> exp IGUALQUE push_opt exp .)
    HACER           reduce using rule 38 (expresion -> exp IGUALQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 38 (expresion -> exp IGUALQUE push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 160

    (36) expresion -> exp MENORQUE push_opt exp .
    (42) exp -> exp . MAS push_opt exp
    (43) exp -> exp . MENOS push_opt exp
    (44) exp -> exp . MULT push_opt exp
    (45) exp -> exp . DIV push_opt exp

    PARENTDER       reduce using rule 36 (expresion -> exp MENORQUE push_opt exp .)
    COMA            reduce using rule 36 (expresion -> exp MENORQUE push_opt exp .)
    ENTONCES        reduce using rule 36 (expresion -> exp MENORQUE push_opt exp .)
    HACER           reduce using rule 36 (expresion -> exp MENORQUE push_opt exp .)
    PUNTOCOMA       reduce using rule 36 (expresion -> exp MENORQUE push_opt exp .)
    MAS             shift and go to state 101
    MENOS           shift and go to state 99
    MULT            shift and go to state 100
    DIV             shift and go to state 102


state 161

    (67) bloque -> INICIOBLOQUE . bloque_estatuto_mult FINBLOQUE
    (68) bloque_estatuto_mult -> . bloque_estatuto_mult estatuto
    (69) bloque_estatuto_mult -> . empty
    (12) empty -> .

    FINBLOQUE       reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 169
    bloque_estatuto_mult           shift and go to state 168

state 162

    (65) condicion -> SI expresion actSi1 ENTONCES bloque . actSi2 condicion_else actSi3 FINSI
    (70) actSi2 -> . empty
    (12) empty -> .

    SINO            reduce using rule 12 (empty -> .)
    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 170
    actSi2                         shift and go to state 171

state 163

    (64) arraycall -> CORCHETEIZQ exp CORCHETEDER .

    MAYORQUE        reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORQUE        reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIFERENTEQUE    reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    IGUALQUE        reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAYORIGUAL      reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENORIGUAL      reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MAS             reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MENOS           reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    MULT            reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    DIV             reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    ENTONCES        reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PUNTOCOMA       reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    PARENTDER       reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    CORCHETEDER     reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    COMA            reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)
    HACER           reduce using rule 64 (arraycall -> CORCHETEIZQ exp CORCHETEDER .)


state 164

    (79) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 172


state 165

    (32) asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    SI              reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    MIENTRAS        reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    REGRESA         reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    MOVER           reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    BORRAR          reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    PINTAR          reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    DESPINTAR       reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)
    FINBLOQUE       reduce using rule 32 (asignacion -> ID asignacion_arreglo IGUAL expresion PUNTOCOMA .)


state 166

    (61) llamada_param_mult -> llamada_param_mult COMA . expresion
    (35) expresion -> . exp MAYORQUE push_opt exp
    (36) expresion -> . exp MENORQUE push_opt exp
    (37) expresion -> . exp DIFERENTEQUE push_opt exp
    (38) expresion -> . exp IGUALQUE push_opt exp
    (39) expresion -> . exp MAYORIGUAL push_opt exp
    (40) expresion -> . exp MENORIGUAL push_opt exp
    (60) expresion -> . exp
    (41) exp -> . PARENTIZQ expresion PARENTDER
    (42) exp -> . exp MAS push_opt exp
    (43) exp -> . exp MENOS push_opt exp
    (44) exp -> . exp MULT push_opt exp
    (45) exp -> . exp DIV push_opt exp
    (47) exp -> . MENOS exp
    (48) exp -> . CTEENTERO
    (49) exp -> . CTEFLOTANTE
    (50) exp -> . TRUE
    (51) exp -> . FALSE
    (52) exp -> . CTETEXTO
    (53) exp -> . ID varfuncarr

    PARENTIZQ       shift and go to state 75
    MENOS           shift and go to state 73
    CTEENTERO       shift and go to state 71
    CTEFLOTANTE     shift and go to state 74
    TRUE            shift and go to state 76
    FALSE           shift and go to state 72
    CTETEXTO        shift and go to state 79
    ID              shift and go to state 80

    exp                            shift and go to state 77
    expresion                      shift and go to state 173

state 167

    (74) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER . bloque FINMIENTRAS actCic3
    (67) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 161

    bloque                         shift and go to state 174

state 168

    (67) bloque -> INICIOBLOQUE bloque_estatuto_mult . FINBLOQUE
    (68) bloque_estatuto_mult -> bloque_estatuto_mult . estatuto
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . io
    (29) estatuto -> . accion
    (30) estatuto -> . llamada_sin_ret
    (31) estatuto -> . return
    (32) asignacion -> . ID asignacion_arreglo IGUAL expresion PUNTOCOMA
    (65) condicion -> . SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI
    (74) ciclo -> . MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3
    (78) io -> . DECIRALUSUARIO exp PUNTOCOMA
    (79) io -> . PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA
    (80) accion -> . tipo_accion PUNTOCOMA
    (89) llamada_sin_ret -> . ID llamada PUNTOCOMA
    (90) return -> . REGRESA expresion PUNTOCOMA
    (81) tipo_accion -> . objeto_con_exp
    (82) tipo_accion -> . objeto_sin_exp
    (83) objeto_con_exp -> . GIRARDERECHA exp
    (84) objeto_con_exp -> . GIRARIZQUIERDA exp
    (85) objeto_con_exp -> . MOVER exp
    (86) objeto_sin_exp -> . BORRAR
    (87) objeto_sin_exp -> . PINTAR
    (88) objeto_sin_exp -> . DESPINTAR

    FINBLOQUE       shift and go to state 176
    ID              shift and go to state 55
    SI              shift and go to state 45
    MIENTRAS        shift and go to state 62
    DECIRALUSUARIO  shift and go to state 57
    PEDIRALUSUARIO  shift and go to state 51
    REGRESA         shift and go to state 50
    GIRARDERECHA    shift and go to state 47
    GIRARIZQUIERDA  shift and go to state 48
    MOVER           shift and go to state 59
    BORRAR          shift and go to state 56
    PINTAR          shift and go to state 58
    DESPINTAR       shift and go to state 49

    accion                         shift and go to state 41
    ciclo                          shift and go to state 42
    condicion                      shift and go to state 54
    objeto_sin_exp                 shift and go to state 64
    llamada_sin_ret                shift and go to state 61
    tipo_accion                    shift and go to state 43
    objeto_con_exp                 shift and go to state 44
    return                         shift and go to state 60
    io                             shift and go to state 63
    asignacion                     shift and go to state 52
    estatuto                       shift and go to state 175

state 169

    (69) bloque_estatuto_mult -> empty .

    FINBLOQUE       reduce using rule 69 (bloque_estatuto_mult -> empty .)
    ID              reduce using rule 69 (bloque_estatuto_mult -> empty .)
    SI              reduce using rule 69 (bloque_estatuto_mult -> empty .)
    MIENTRAS        reduce using rule 69 (bloque_estatuto_mult -> empty .)
    DECIRALUSUARIO  reduce using rule 69 (bloque_estatuto_mult -> empty .)
    PEDIRALUSUARIO  reduce using rule 69 (bloque_estatuto_mult -> empty .)
    REGRESA         reduce using rule 69 (bloque_estatuto_mult -> empty .)
    GIRARDERECHA    reduce using rule 69 (bloque_estatuto_mult -> empty .)
    GIRARIZQUIERDA  reduce using rule 69 (bloque_estatuto_mult -> empty .)
    MOVER           reduce using rule 69 (bloque_estatuto_mult -> empty .)
    BORRAR          reduce using rule 69 (bloque_estatuto_mult -> empty .)
    PINTAR          reduce using rule 69 (bloque_estatuto_mult -> empty .)
    DESPINTAR       reduce using rule 69 (bloque_estatuto_mult -> empty .)


state 170

    (70) actSi2 -> empty .

    SINO            reduce using rule 70 (actSi2 -> empty .)
    FINSI           reduce using rule 70 (actSi2 -> empty .)


state 171

    (65) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 . condicion_else actSi3 FINSI
    (71) condicion_else -> . SINO bloque
    (72) condicion_else -> . empty
    (12) empty -> .

    SINO            shift and go to state 178
    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 177
    condicion_else                 shift and go to state 179

state 172

    (79) io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .

    FINPRINCIPAL    reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    ID              reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    SI              reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    MIENTRAS        reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    DECIRALUSUARIO  reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    PEDIRALUSUARIO  reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    REGRESA         reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    GIRARDERECHA    reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    GIRARIZQUIERDA  reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    MOVER           reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    BORRAR          reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    PINTAR          reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    DESPINTAR       reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)
    FINBLOQUE       reduce using rule 79 (io -> PEDIRALUSUARIO PARENTIZQ ID asignacion_arreglo PARENTDER PUNTOCOMA .)


state 173

    (61) llamada_param_mult -> llamada_param_mult COMA expresion .

    COMA            reduce using rule 61 (llamada_param_mult -> llamada_param_mult COMA expresion .)
    PARENTDER       reduce using rule 61 (llamada_param_mult -> llamada_param_mult COMA expresion .)


state 174

    (74) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque . FINMIENTRAS actCic3

    FINMIENTRAS     shift and go to state 180


state 175

    (68) bloque_estatuto_mult -> bloque_estatuto_mult estatuto .

    FINBLOQUE       reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    ID              reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    SI              reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MIENTRAS        reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DECIRALUSUARIO  reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PEDIRALUSUARIO  reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    REGRESA         reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARDERECHA    reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    GIRARIZQUIERDA  reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    MOVER           reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    BORRAR          reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    PINTAR          reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)
    DESPINTAR       reduce using rule 68 (bloque_estatuto_mult -> bloque_estatuto_mult estatuto .)


state 176

    (67) bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .

    FINMIENTRAS     reduce using rule 67 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    SINO            reduce using rule 67 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)
    FINSI           reduce using rule 67 (bloque -> INICIOBLOQUE bloque_estatuto_mult FINBLOQUE .)


state 177

    (72) condicion_else -> empty .

    FINSI           reduce using rule 72 (condicion_else -> empty .)


state 178

    (71) condicion_else -> SINO . bloque
    (67) bloque -> . INICIOBLOQUE bloque_estatuto_mult FINBLOQUE

    INICIOBLOQUE    shift and go to state 161

    bloque                         shift and go to state 181

state 179

    (65) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else . actSi3 FINSI
    (73) actSi3 -> . empty
    (12) empty -> .

    FINSI           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 182
    actSi3                         shift and go to state 183

state 180

    (74) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS . actCic3
    (77) actCic3 -> . empty
    (12) empty -> .

    FINPRINCIPAL    reduce using rule 12 (empty -> .)
    ID              reduce using rule 12 (empty -> .)
    SI              reduce using rule 12 (empty -> .)
    MIENTRAS        reduce using rule 12 (empty -> .)
    DECIRALUSUARIO  reduce using rule 12 (empty -> .)
    PEDIRALUSUARIO  reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    GIRARDERECHA    reduce using rule 12 (empty -> .)
    GIRARIZQUIERDA  reduce using rule 12 (empty -> .)
    MOVER           reduce using rule 12 (empty -> .)
    BORRAR          reduce using rule 12 (empty -> .)
    PINTAR          reduce using rule 12 (empty -> .)
    DESPINTAR       reduce using rule 12 (empty -> .)
    FINBLOQUE       reduce using rule 12 (empty -> .)

    empty                          shift and go to state 184
    actCic3                        shift and go to state 185

state 181

    (71) condicion_else -> SINO bloque .

    FINSI           reduce using rule 71 (condicion_else -> SINO bloque .)


state 182

    (73) actSi3 -> empty .

    FINSI           reduce using rule 73 (actSi3 -> empty .)


state 183

    (65) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 . FINSI

    FINSI           shift and go to state 186


state 184

    (77) actCic3 -> empty .

    FINPRINCIPAL    reduce using rule 77 (actCic3 -> empty .)
    ID              reduce using rule 77 (actCic3 -> empty .)
    SI              reduce using rule 77 (actCic3 -> empty .)
    MIENTRAS        reduce using rule 77 (actCic3 -> empty .)
    DECIRALUSUARIO  reduce using rule 77 (actCic3 -> empty .)
    PEDIRALUSUARIO  reduce using rule 77 (actCic3 -> empty .)
    REGRESA         reduce using rule 77 (actCic3 -> empty .)
    GIRARDERECHA    reduce using rule 77 (actCic3 -> empty .)
    GIRARIZQUIERDA  reduce using rule 77 (actCic3 -> empty .)
    MOVER           reduce using rule 77 (actCic3 -> empty .)
    BORRAR          reduce using rule 77 (actCic3 -> empty .)
    PINTAR          reduce using rule 77 (actCic3 -> empty .)
    DESPINTAR       reduce using rule 77 (actCic3 -> empty .)
    FINBLOQUE       reduce using rule 77 (actCic3 -> empty .)


state 185

    (74) ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .

    FINPRINCIPAL    reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    ID              reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    SI              reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MIENTRAS        reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DECIRALUSUARIO  reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PEDIRALUSUARIO  reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    REGRESA         reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARDERECHA    reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    GIRARIZQUIERDA  reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    MOVER           reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    BORRAR          reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    PINTAR          reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    DESPINTAR       reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)
    FINBLOQUE       reduce using rule 74 (ciclo -> MIENTRAS actCic1 expresion actCic2 HACER bloque FINMIENTRAS actCic3 .)


state 186

    (65) condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .

    FINPRINCIPAL    reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    ID              reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    SI              reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MIENTRAS        reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DECIRALUSUARIO  reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PEDIRALUSUARIO  reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    REGRESA         reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARDERECHA    reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    GIRARIZQUIERDA  reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    MOVER           reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    BORRAR          reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    PINTAR          reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    DESPINTAR       reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)
    FINBLOQUE       reduce using rule 65 (condicion -> SI expresion actSi1 ENTONCES bloque actSi2 condicion_else actSi3 FINSI .)

